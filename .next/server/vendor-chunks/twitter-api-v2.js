"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/twitter-api-v2";
exports.ids = ["vendor-chunks/twitter-api-v2"];
exports.modules = {

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.js":
/*!********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterAdsSandbox: () => (/* binding */ TwitterAdsSandbox),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_ads_sandbox_write__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.ads-sandbox.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.write.js\");\n\n\n/**\n * Twitter ads sandbox client with all rights (read/write)\n */\nclass TwitterAdsSandbox extends _client_ads_sandbox_write__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_ADS_SANDBOX_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterAdsSandbox);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzLXNhbmRib3gvY2xpZW50LmFkcy1zYW5kYm94LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDZ0I7QUFDcEU7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGlFQUEwQjtBQUNqRTtBQUNBO0FBQ0EsdUJBQXVCLDREQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsaUJBQWlCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL2Fkcy1zYW5kYm94L2NsaWVudC5hZHMtc2FuZGJveC5qcz9kMmFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFQSV9BRFNfU0FOREJPWF9QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbmltcG9ydCBUd2l0dGVyQWRzU2FuZGJveFJlYWRXcml0ZSBmcm9tICcuL2NsaWVudC5hZHMtc2FuZGJveC53cml0ZSc7XG4vKipcbiAqIFR3aXR0ZXIgYWRzIHNhbmRib3ggY2xpZW50IHdpdGggYWxsIHJpZ2h0cyAocmVhZC93cml0ZSlcbiAqL1xuZXhwb3J0IGNsYXNzIFR3aXR0ZXJBZHNTYW5kYm94IGV4dGVuZHMgVHdpdHRlckFkc1NhbmRib3hSZWFkV3JpdGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9wcmVmaXggPSBBUElfQURTX1NBTkRCT1hfUFJFRklYO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjbGllbnQgd2l0aCByZWFkL3dyaXRlIHJpZ2h0cy5cbiAgICAgKi9cbiAgICBnZXQgcmVhZFdyaXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBUd2l0dGVyQWRzU2FuZGJveDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.read.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.read.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterAdsSandboxReadOnly)\n/* harmony export */ });\n/* harmony import */ var _client_subclient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.subclient */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n\n\n/**\n * Base Twitter ads sandbox client with only read rights.\n */\nclass TwitterAdsSandboxReadOnly extends _client_subclient__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_ADS_SANDBOX_PREFIX;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzLXNhbmRib3gvY2xpZW50LmFkcy1zYW5kYm94LnJlYWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQ0Y7QUFDcEQ7QUFDQTtBQUNBO0FBQ2Usd0NBQXdDLHlEQUFtQjtBQUMxRTtBQUNBO0FBQ0EsdUJBQXVCLDREQUFzQjtBQUM3QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9hZHMtc2FuZGJveC9jbGllbnQuYWRzLXNhbmRib3gucmVhZC5qcz8yNjdkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUd2l0dGVyQXBpU3ViQ2xpZW50IGZyb20gJy4uL2NsaWVudC5zdWJjbGllbnQnO1xuaW1wb3J0IHsgQVBJX0FEU19TQU5EQk9YX1BSRUZJWCB9IGZyb20gJy4uL2dsb2JhbHMnO1xuLyoqXG4gKiBCYXNlIFR3aXR0ZXIgYWRzIHNhbmRib3ggY2xpZW50IHdpdGggb25seSByZWFkIHJpZ2h0cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHdpdHRlckFkc1NhbmRib3hSZWFkT25seSBleHRlbmRzIFR3aXR0ZXJBcGlTdWJDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9wcmVmaXggPSBBUElfQURTX1NBTkRCT1hfUFJFRklYO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.write.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.write.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterAdsSandboxReadWrite)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_ads_sandbox_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.ads-sandbox.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.read.js\");\n\n\n/**\n * Base Twitter ads sandbox client with read/write rights.\n */\nclass TwitterAdsSandboxReadWrite extends _client_ads_sandbox_read__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_ADS_SANDBOX_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzLXNhbmRib3gvY2xpZW50LmFkcy1zYW5kYm94LndyaXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUNjO0FBQ2xFO0FBQ0E7QUFDQTtBQUNlLHlDQUF5QyxnRUFBeUI7QUFDakY7QUFDQTtBQUNBLHVCQUF1Qiw0REFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzLXNhbmRib3gvY2xpZW50LmFkcy1zYW5kYm94LndyaXRlLmpzP2NmODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVBJX0FEU19TQU5EQk9YX1BSRUZJWCB9IGZyb20gJy4uL2dsb2JhbHMnO1xuaW1wb3J0IFR3aXR0ZXJBZHNTYW5kYm94UmVhZE9ubHkgZnJvbSAnLi9jbGllbnQuYWRzLXNhbmRib3gucmVhZCc7XG4vKipcbiAqIEJhc2UgVHdpdHRlciBhZHMgc2FuZGJveCBjbGllbnQgd2l0aCByZWFkL3dyaXRlIHJpZ2h0cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHdpdHRlckFkc1NhbmRib3hSZWFkV3JpdGUgZXh0ZW5kcyBUd2l0dGVyQWRzU2FuZGJveFJlYWRPbmx5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gQVBJX0FEU19TQU5EQk9YX1BSRUZJWDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2xpZW50IHdpdGggb25seSByZWFkIHJpZ2h0cy5cbiAgICAgKi9cbiAgICBnZXQgcmVhZE9ubHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.js":
/*!****************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads/client.ads.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterAds: () => (/* binding */ TwitterAds),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_ads_write__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.ads.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.write.js\");\n/* harmony import */ var _ads_sandbox_client_ads_sandbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ads-sandbox/client.ads-sandbox */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads-sandbox/client.ads-sandbox.js\");\n\n\n\n/**\n * Twitter ads client with all rights (read/write)\n */\nclass TwitterAds extends _client_ads_write__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_ADS_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /**\n     * Get Twitter Ads Sandbox API client\n     */\n    get sandbox() {\n        if (this._sandbox)\n            return this._sandbox;\n        return this._sandbox = new _ads_sandbox_client_ads_sandbox__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterAds);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzL2NsaWVudC5hZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEM7QUFDUztBQUNhO0FBQ2xFO0FBQ0E7QUFDQTtBQUNPLHlCQUF5Qix5REFBbUI7QUFDbkQ7QUFDQTtBQUNBLHVCQUF1QixvREFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyx1RUFBaUI7QUFDcEQ7QUFDQTtBQUNBLGlFQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzL2NsaWVudC5hZHMuanM/ZTIwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUElfQURTX1BSRUZJWCB9IGZyb20gJy4uL2dsb2JhbHMnO1xuaW1wb3J0IFR3aXR0ZXJBZHNSZWFkV3JpdGUgZnJvbSAnLi9jbGllbnQuYWRzLndyaXRlJztcbmltcG9ydCBUd2l0dGVyQWRzU2FuZGJveCBmcm9tICcuLi9hZHMtc2FuZGJveC9jbGllbnQuYWRzLXNhbmRib3gnO1xuLyoqXG4gKiBUd2l0dGVyIGFkcyBjbGllbnQgd2l0aCBhbGwgcmlnaHRzIChyZWFkL3dyaXRlKVxuICovXG5leHBvcnQgY2xhc3MgVHdpdHRlckFkcyBleHRlbmRzIFR3aXR0ZXJBZHNSZWFkV3JpdGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9wcmVmaXggPSBBUElfQURTX1BSRUZJWDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2xpZW50IHdpdGggcmVhZC93cml0ZSByaWdodHMuXG4gICAgICovXG4gICAgZ2V0IHJlYWRXcml0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBUd2l0dGVyIEFkcyBTYW5kYm94IEFQSSBjbGllbnRcbiAgICAgKi9cbiAgICBnZXQgc2FuZGJveCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3NhbmRib3gpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2FuZGJveDtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NhbmRib3ggPSBuZXcgVHdpdHRlckFkc1NhbmRib3godGhpcyk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVHdpdHRlckFkcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.read.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads/client.ads.read.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterAdsReadOnly)\n/* harmony export */ });\n/* harmony import */ var _client_subclient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.subclient */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n\n\n/**\n * Base Twitter ads client with only read rights.\n */\nclass TwitterAdsReadOnly extends _client_subclient__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_ADS_PREFIX;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzL2NsaWVudC5hZHMucmVhZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Q7QUFDVjtBQUM1QztBQUNBO0FBQ0E7QUFDZSxpQ0FBaUMseURBQW1CO0FBQ25FO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQWM7QUFDckM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzL2NsaWVudC5hZHMucmVhZC5qcz83MDRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUd2l0dGVyQXBpU3ViQ2xpZW50IGZyb20gJy4uL2NsaWVudC5zdWJjbGllbnQnO1xuaW1wb3J0IHsgQVBJX0FEU19QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbi8qKlxuICogQmFzZSBUd2l0dGVyIGFkcyBjbGllbnQgd2l0aCBvbmx5IHJlYWQgcmlnaHRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUd2l0dGVyQWRzUmVhZE9ubHkgZXh0ZW5kcyBUd2l0dGVyQXBpU3ViQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gQVBJX0FEU19QUkVGSVg7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.write.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/ads/client.ads.write.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterAdsReadWrite)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_ads_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.ads.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.read.js\");\n\n\n/**\n * Base Twitter ads client with read/write rights.\n */\nclass TwitterAdsReadWrite extends _client_ads_read__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_ADS_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vYWRzL2NsaWVudC5hZHMud3JpdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ087QUFDbkQ7QUFDQTtBQUNBO0FBQ2Usa0NBQWtDLHdEQUFrQjtBQUNuRTtBQUNBO0FBQ0EsdUJBQXVCLG9EQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL2Fkcy9jbGllbnQuYWRzLndyaXRlLmpzPzhlNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQVBJX0FEU19QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbmltcG9ydCBUd2l0dGVyQWRzUmVhZE9ubHkgZnJvbSAnLi9jbGllbnQuYWRzLnJlYWQnO1xuLyoqXG4gKiBCYXNlIFR3aXR0ZXIgYWRzIGNsaWVudCB3aXRoIHJlYWQvd3JpdGUgcmlnaHRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUd2l0dGVyQWRzUmVhZFdyaXRlIGV4dGVuZHMgVHdpdHRlckFkc1JlYWRPbmx5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gQVBJX0FEU19QUkVGSVg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIGNsaWVudCB3aXRoIG9ubHkgcmVhZCByaWdodHMuXG4gICAgICovXG4gICAgZ2V0IHJlYWRPbmx5KCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/form-data.helper.js":
/*!********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/form-data.helper.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormDataHelper: () => (/* binding */ FormDataHelper)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n    constructor() {\n        this._boundary = '';\n        this._chunks = [];\n    }\n    bodyAppend(...values) {\n        const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n        this._chunks.push(...allAsBuffer);\n    }\n    append(field, value, contentType) {\n        const convertedValue = value instanceof Buffer ? value : value.toString();\n        const header = this.getMultipartHeader(field, convertedValue, contentType);\n        this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n    }\n    getHeaders() {\n        return {\n            'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),\n        };\n    }\n    /** Length of form-data (including footer length). */\n    getLength() {\n        return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n    }\n    getBuffer() {\n        const allChunks = [...this._chunks, this.getMultipartFooter()];\n        const totalBuffer = Buffer.alloc(this.getLength());\n        let i = 0;\n        for (const chunk of allChunks) {\n            for (let j = 0; j < chunk.length; i++, j++) {\n                totalBuffer[i] = chunk[j];\n            }\n        }\n        return totalBuffer;\n    }\n    getBoundary() {\n        if (!this._boundary) {\n            this.generateBoundary();\n        }\n        return this._boundary;\n    }\n    generateBoundary() {\n        // This generates a 50 character boundary similar to those used by Firefox.\n        let boundary = '--------------------------';\n        for (let i = 0; i < 24; i++) {\n            boundary += Math.floor(Math.random() * 10).toString(16);\n        }\n        this._boundary = boundary;\n    }\n    getMultipartHeader(field, value, contentType) {\n        // In this lib no need to guess more the content type, octet stream is ok of buffers\n        if (!contentType) {\n            contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n        }\n        const headers = {\n            'Content-Disposition': ['form-data', `name=\"${field}\"`],\n            'Content-Type': contentType,\n        };\n        let contents = '';\n        for (const [prop, header] of Object.entries(headers)) {\n            // skip nullish headers.\n            if (!header.length) {\n                continue;\n            }\n            contents += prop + ': ' + (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n        }\n        return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n    }\n    getMultipartFooter() {\n        if (this._footerChunk) {\n            return this._footerChunk;\n        }\n        return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n    }\n}\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LW1peGlucy9mb3JtLWRhdGEuaGVscGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ3ZDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsTUFBTTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1EQUFTLGlCQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL2NsaWVudC1taXhpbnMvZm9ybS1kYXRhLmhlbHBlci5qcz8zMTJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5V3JhcCB9IGZyb20gJy4uL2hlbHBlcnMnO1xuLy8gVGhpcyBjbGFzcyBpcyBwYXJ0aWFsbHkgaW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2Zvcm0tZGF0YS9mb3JtLWRhdGEvYmxvYi9tYXN0ZXIvbGliL2Zvcm1fZGF0YS5qc1xuLy8gQWxsIGNyZWRpdHMgdG8gdGhlaXIgYXV0aG9ycy5cbmV4cG9ydCBjbGFzcyBGb3JtRGF0YUhlbHBlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2JvdW5kYXJ5ID0gJyc7XG4gICAgICAgIHRoaXMuX2NodW5rcyA9IFtdO1xuICAgIH1cbiAgICBib2R5QXBwZW5kKC4uLnZhbHVlcykge1xuICAgICAgICBjb25zdCBhbGxBc0J1ZmZlciA9IHZhbHVlcy5tYXAodmFsID0+IHZhbCBpbnN0YW5jZW9mIEJ1ZmZlciA/IHZhbCA6IEJ1ZmZlci5mcm9tKHZhbCkpO1xuICAgICAgICB0aGlzLl9jaHVua3MucHVzaCguLi5hbGxBc0J1ZmZlcik7XG4gICAgfVxuICAgIGFwcGVuZChmaWVsZCwgdmFsdWUsIGNvbnRlbnRUeXBlKSB7XG4gICAgICAgIGNvbnN0IGNvbnZlcnRlZFZhbHVlID0gdmFsdWUgaW5zdGFuY2VvZiBCdWZmZXIgPyB2YWx1ZSA6IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMuZ2V0TXVsdGlwYXJ0SGVhZGVyKGZpZWxkLCBjb252ZXJ0ZWRWYWx1ZSwgY29udGVudFR5cGUpO1xuICAgICAgICB0aGlzLmJvZHlBcHBlbmQoaGVhZGVyLCBjb252ZXJ0ZWRWYWx1ZSwgRm9ybURhdGFIZWxwZXIuTElORV9CUkVBSyk7XG4gICAgfVxuICAgIGdldEhlYWRlcnMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PScgKyB0aGlzLmdldEJvdW5kYXJ5KCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKiBMZW5ndGggb2YgZm9ybS1kYXRhIChpbmNsdWRpbmcgZm9vdGVyIGxlbmd0aCkuICovXG4gICAgZ2V0TGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2h1bmtzLnJlZHVjZSgoYWNjLCBjdXIpID0+IGFjYyArIGN1ci5sZW5ndGgsIHRoaXMuZ2V0TXVsdGlwYXJ0Rm9vdGVyKCkubGVuZ3RoKTtcbiAgICB9XG4gICAgZ2V0QnVmZmVyKCkge1xuICAgICAgICBjb25zdCBhbGxDaHVua3MgPSBbLi4udGhpcy5fY2h1bmtzLCB0aGlzLmdldE11bHRpcGFydEZvb3RlcigpXTtcbiAgICAgICAgY29uc3QgdG90YWxCdWZmZXIgPSBCdWZmZXIuYWxsb2ModGhpcy5nZXRMZW5ndGgoKSk7XG4gICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgZm9yIChjb25zdCBjaHVuayBvZiBhbGxDaHVua3MpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgY2h1bmsubGVuZ3RoOyBpKyssIGorKykge1xuICAgICAgICAgICAgICAgIHRvdGFsQnVmZmVyW2ldID0gY2h1bmtbal07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRvdGFsQnVmZmVyO1xuICAgIH1cbiAgICBnZXRCb3VuZGFyeSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9ib3VuZGFyeSkge1xuICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZUJvdW5kYXJ5KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2JvdW5kYXJ5O1xuICAgIH1cbiAgICBnZW5lcmF0ZUJvdW5kYXJ5KCkge1xuICAgICAgICAvLyBUaGlzIGdlbmVyYXRlcyBhIDUwIGNoYXJhY3RlciBib3VuZGFyeSBzaW1pbGFyIHRvIHRob3NlIHVzZWQgYnkgRmlyZWZveC5cbiAgICAgICAgbGV0IGJvdW5kYXJ5ID0gJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyNDsgaSsrKSB7XG4gICAgICAgICAgICBib3VuZGFyeSArPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkudG9TdHJpbmcoMTYpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2JvdW5kYXJ5ID0gYm91bmRhcnk7XG4gICAgfVxuICAgIGdldE11bHRpcGFydEhlYWRlcihmaWVsZCwgdmFsdWUsIGNvbnRlbnRUeXBlKSB7XG4gICAgICAgIC8vIEluIHRoaXMgbGliIG5vIG5lZWQgdG8gZ3Vlc3MgbW9yZSB0aGUgY29udGVudCB0eXBlLCBvY3RldCBzdHJlYW0gaXMgb2sgb2YgYnVmZmVyc1xuICAgICAgICBpZiAoIWNvbnRlbnRUeXBlKSB7XG4gICAgICAgICAgICBjb250ZW50VHlwZSA9IHZhbHVlIGluc3RhbmNlb2YgQnVmZmVyID8gRm9ybURhdGFIZWxwZXIuREVGQVVMVF9DT05URU5UX1RZUEUgOiAnJztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoZWFkZXJzID0ge1xuICAgICAgICAgICAgJ0NvbnRlbnQtRGlzcG9zaXRpb24nOiBbJ2Zvcm0tZGF0YScsIGBuYW1lPVwiJHtmaWVsZH1cImBdLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6IGNvbnRlbnRUeXBlLFxuICAgICAgICB9O1xuICAgICAgICBsZXQgY29udGVudHMgPSAnJztcbiAgICAgICAgZm9yIChjb25zdCBbcHJvcCwgaGVhZGVyXSBvZiBPYmplY3QuZW50cmllcyhoZWFkZXJzKSkge1xuICAgICAgICAgICAgLy8gc2tpcCBudWxsaXNoIGhlYWRlcnMuXG4gICAgICAgICAgICBpZiAoIWhlYWRlci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRlbnRzICs9IHByb3AgKyAnOiAnICsgYXJyYXlXcmFwKGhlYWRlcikuam9pbignOyAnKSArIEZvcm1EYXRhSGVscGVyLkxJTkVfQlJFQUs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctLScgKyB0aGlzLmdldEJvdW5kYXJ5KCkgKyBGb3JtRGF0YUhlbHBlci5MSU5FX0JSRUFLICsgY29udGVudHMgKyBGb3JtRGF0YUhlbHBlci5MSU5FX0JSRUFLO1xuICAgIH1cbiAgICBnZXRNdWx0aXBhcnRGb290ZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLl9mb290ZXJDaHVuaykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Zvb3RlckNodW5rO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9mb290ZXJDaHVuayA9IEJ1ZmZlci5mcm9tKCctLScgKyB0aGlzLmdldEJvdW5kYXJ5KCkgKyAnLS0nICsgRm9ybURhdGFIZWxwZXIuTElORV9CUkVBSyk7XG4gICAgfVxufVxuRm9ybURhdGFIZWxwZXIuTElORV9CUkVBSyA9ICdcXHJcXG4nO1xuRm9ybURhdGFIZWxwZXIuREVGQVVMVF9DT05URU5UX1RZUEUgPSAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/form-data.helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAuth1Helper: () => (/* binding */ OAuth1Helper),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nclass OAuth1Helper {\n    constructor(options) {\n        this.nonceLength = 32;\n        this.consumerKeys = options.consumerKeys;\n    }\n    static percentEncode(str) {\n        return encodeURIComponent(str)\n            .replace(/!/g, '%21')\n            .replace(/\\*/g, '%2A')\n            .replace(/'/g, '%27')\n            .replace(/\\(/g, '%28')\n            .replace(/\\)/g, '%29');\n    }\n    hash(base, key) {\n        return crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac('sha1', key)\n            .update(base)\n            .digest('base64');\n    }\n    authorize(request, accessTokens = {}) {\n        const oauthInfo = {\n            oauth_consumer_key: this.consumerKeys.key,\n            oauth_nonce: this.getNonce(),\n            oauth_signature_method: 'HMAC-SHA1',\n            oauth_timestamp: this.getTimestamp(),\n            oauth_version: '1.0',\n        };\n        if (accessTokens.key !== undefined) {\n            oauthInfo.oauth_token = accessTokens.key;\n        }\n        if (!request.data) {\n            request.data = {};\n        }\n        oauthInfo.oauth_signature = this.getSignature(request, accessTokens.secret, oauthInfo);\n        return oauthInfo;\n    }\n    toHeader(oauthInfo) {\n        const sorted = sortObject(oauthInfo);\n        let header_value = 'OAuth ';\n        for (const element of sorted) {\n            if (element.key.indexOf('oauth_') !== 0) {\n                continue;\n            }\n            header_value += OAuth1Helper.percentEncode(element.key) + '=\"' + OAuth1Helper.percentEncode(element.value) + '\",';\n        }\n        return {\n            // Remove the last ,\n            Authorization: header_value.slice(0, header_value.length - 1),\n        };\n    }\n    getNonce() {\n        const wordCharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let result = '';\n        for (let i = 0; i < this.nonceLength; i++) {\n            result += wordCharacters[Math.trunc(Math.random() * wordCharacters.length)];\n        }\n        return result;\n    }\n    getTimestamp() {\n        return Math.trunc(new Date().getTime() / 1000);\n    }\n    getSignature(request, tokenSecret, oauthInfo) {\n        return this.hash(this.getBaseString(request, oauthInfo), this.getSigningKey(tokenSecret));\n    }\n    getSigningKey(tokenSecret) {\n        return OAuth1Helper.percentEncode(this.consumerKeys.secret) + '&' + OAuth1Helper.percentEncode(tokenSecret || '');\n    }\n    getBaseString(request, oauthInfo) {\n        return request.method.toUpperCase() + '&'\n            + OAuth1Helper.percentEncode(this.getBaseUrl(request.url)) + '&'\n            + OAuth1Helper.percentEncode(this.getParameterString(request, oauthInfo));\n    }\n    getParameterString(request, oauthInfo) {\n        const baseStringData = sortObject(percentEncodeData(mergeObject(oauthInfo, mergeObject(request.data, deParamUrl(request.url)))));\n        let dataStr = '';\n        for (const { key, value } of baseStringData) {\n            // check if the value is an array\n            // this means that this key has multiple values\n            if (value && Array.isArray(value)) {\n                // sort the array first\n                value.sort();\n                let valString = '';\n                // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n                value.forEach((item, i) => {\n                    valString += key + '=' + item;\n                    if (i < value.length) {\n                        valString += '&';\n                    }\n                });\n                dataStr += valString;\n            }\n            else {\n                dataStr += key + '=' + value + '&';\n            }\n        }\n        // Remove the last character\n        return dataStr.slice(0, dataStr.length - 1);\n    }\n    getBaseUrl(url) {\n        return url.split('?')[0];\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OAuth1Helper);\n// Helper functions //\nfunction mergeObject(obj1, obj2) {\n    return {\n        ...obj1 || {},\n        ...obj2 || {},\n    };\n}\nfunction sortObject(data) {\n    return Object.keys(data)\n        .sort()\n        .map(key => ({ key, value: data[key] }));\n}\nfunction deParam(string) {\n    const split = string.split('&');\n    const data = {};\n    for (const coupleKeyValue of split) {\n        const [key, value = ''] = coupleKeyValue.split('=');\n        // check if the key already exists\n        // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n        if (data[key]) {\n            // the key exists already\n            if (!Array.isArray(data[key])) {\n                // replace the value with an array containing the already present value\n                data[key] = [data[key]];\n            }\n            // and add the new found value to it\n            data[key].push(decodeURIComponent(value));\n        }\n        else {\n            // it doesn't exist, just put the found value in the data object\n            data[key] = decodeURIComponent(value);\n        }\n    }\n    return data;\n}\nfunction deParamUrl(url) {\n    const tmp = url.split('?');\n    if (tmp.length === 1)\n        return {};\n    return deParam(tmp[1]);\n}\nfunction percentEncodeData(data) {\n    const result = {};\n    for (const key in data) {\n        let value = data[key];\n        // check if the value is an array\n        if (value && Array.isArray(value)) {\n            value = value.map(v => OAuth1Helper.percentEncode(v));\n        }\n        else {\n            value = OAuth1Helper.percentEncode(value);\n        }\n        result[OAuth1Helper.percentEncode(key)] = value;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OAuth2Helper: () => (/* binding */ OAuth2Helper)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nclass OAuth2Helper {\n    static getCodeVerifier() {\n        return this.generateRandomString(128);\n    }\n    static getCodeChallengeFromVerifier(verifier) {\n        return this.escapeBase64Url(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256')\n            .update(verifier)\n            .digest('base64'));\n    }\n    static getAuthHeader(clientId, clientSecret) {\n        const key = encodeURIComponent(clientId) + ':' + encodeURIComponent(clientSecret);\n        return Buffer.from(key).toString('base64');\n    }\n    static generateRandomString(length) {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        for (let i = 0; i < length; i++) {\n            text += possible[Math.floor(Math.random() * possible.length)];\n        }\n        return text;\n    }\n    static escapeBase64Url(string) {\n        return string.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LW1peGlucy9vYXV0aDIuaGVscGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUMxQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDhDQUNiO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LW1peGlucy9vYXV0aDIuaGVscGVyLmpzP2VhMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5leHBvcnQgY2xhc3MgT0F1dGgySGVscGVyIHtcbiAgICBzdGF0aWMgZ2V0Q29kZVZlcmlmaWVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZVJhbmRvbVN0cmluZygxMjgpO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0Q29kZUNoYWxsZW5nZUZyb21WZXJpZmllcih2ZXJpZmllcikge1xuICAgICAgICByZXR1cm4gdGhpcy5lc2NhcGVCYXNlNjRVcmwoY3J5cHRvXG4gICAgICAgICAgICAuY3JlYXRlSGFzaCgnc2hhMjU2JylcbiAgICAgICAgICAgIC51cGRhdGUodmVyaWZpZXIpXG4gICAgICAgICAgICAuZGlnZXN0KCdiYXNlNjQnKSk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRBdXRoSGVhZGVyKGNsaWVudElkLCBjbGllbnRTZWNyZXQpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gZW5jb2RlVVJJQ29tcG9uZW50KGNsaWVudElkKSArICc6JyArIGVuY29kZVVSSUNvbXBvbmVudChjbGllbnRTZWNyZXQpO1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oa2V5KS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgfVxuICAgIHN0YXRpYyBnZW5lcmF0ZVJhbmRvbVN0cmluZyhsZW5ndGgpIHtcbiAgICAgICAgbGV0IHRleHQgPSAnJztcbiAgICAgICAgY29uc3QgcG9zc2libGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktLl9+JztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGV4dCArPSBwb3NzaWJsZVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZS5sZW5ndGgpXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dDtcbiAgICB9XG4gICAgc3RhdGljIGVzY2FwZUJhc2U2NFVybChzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC89L2csICcnKS5yZXBsYWNlKC9cXCsvZywgJy0nKS5yZXBsYWNlKC9cXC8vZywgJ18nKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestHandlerHelper: () => (/* binding */ RequestHandlerHelper),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/settings.js\");\n/* harmony import */ var _stream_TweetStream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stream/TweetStream */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nclass RequestHandlerHelper {\n    constructor(requestData) {\n        this.requestData = requestData;\n        this.requestErrorHandled = false;\n        this.responseData = [];\n    }\n    /* Request helpers */\n    get hrefPathname() {\n        const url = this.requestData.url;\n        return url.hostname + url.pathname;\n    }\n    isCompressionDisabled() {\n        return !this.requestData.compression || this.requestData.compression === 'identity';\n    }\n    isFormEncodedEndpoint() {\n        return this.requestData.url.href.startsWith('https://api.x.com/oauth/');\n    }\n    /* Error helpers */\n    createRequestError(error) {\n        if (_settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.debug) {\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log('Request error:', error);\n        }\n        return new _types__WEBPACK_IMPORTED_MODULE_3__.ApiRequestError('Request failed.', {\n            request: this.req,\n            error,\n        });\n    }\n    createPartialResponseError(error, abortClose) {\n        const res = this.res;\n        let message = `Request failed with partial response with HTTP code ${res.statusCode}`;\n        if (abortClose) {\n            message += ' (connection abruptly closed)';\n        }\n        else {\n            message += ' (parse error)';\n        }\n        return new _types__WEBPACK_IMPORTED_MODULE_3__.ApiPartialResponseError(message, {\n            request: this.req,\n            response: this.res,\n            responseError: error,\n            rawContent: Buffer.concat(this.responseData).toString(),\n        });\n    }\n    formatV1Errors(errors) {\n        return errors\n            .map(({ code, message }) => `${message} (Twitter code ${code})`)\n            .join(', ');\n    }\n    formatV2Error(error) {\n        return `${error.title}: ${error.detail} (see ${error.type})`;\n    }\n    createResponseError({ res, data, rateLimit, code }) {\n        var _a;\n        if (_settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.debug) {\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log(`Request failed with code ${code}, data:`, data);\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log('Response headers:', res.headers);\n        }\n        // Errors formatting.\n        let errorString = `Request failed with code ${code}`;\n        if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n            const errors = data.errors;\n            if (typeof errors[0] === 'object' && 'code' in errors[0]) {\n                errorString += ' - ' + this.formatV1Errors(errors);\n            }\n            else {\n                errorString += ' - ' + this.formatV2Error(data);\n            }\n        }\n        return new _types__WEBPACK_IMPORTED_MODULE_3__.ApiResponseError(errorString, {\n            code,\n            data,\n            headers: res.headers,\n            request: this.req,\n            response: res,\n            rateLimit,\n        });\n    }\n    /* Response helpers */\n    getResponseDataStream(res) {\n        if (this.isCompressionDisabled()) {\n            return res;\n        }\n        const contentEncoding = (res.headers['content-encoding'] || 'identity').trim().toLowerCase();\n        if (contentEncoding === 'br') {\n            const brotli = zlib__WEBPACK_IMPORTED_MODULE_4__.createBrotliDecompress({\n                flush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.BROTLI_OPERATION_FLUSH,\n                finishFlush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.BROTLI_OPERATION_FLUSH,\n            });\n            res.pipe(brotli);\n            return brotli;\n        }\n        if (contentEncoding === 'gzip') {\n            const gunzip = zlib__WEBPACK_IMPORTED_MODULE_4__.createGunzip({\n                flush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(gunzip);\n            return gunzip;\n        }\n        if (contentEncoding === 'deflate') {\n            const inflate = zlib__WEBPACK_IMPORTED_MODULE_4__.createInflate({\n                flush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.Z_SYNC_FLUSH,\n                finishFlush: zlib__WEBPACK_IMPORTED_MODULE_4__.constants.Z_SYNC_FLUSH,\n            });\n            res.pipe(inflate);\n            return inflate;\n        }\n        return res;\n    }\n    detectResponseType(res) {\n        var _a, _b;\n        // Auto parse if server responds with JSON body\n        if (((_a = res.headers['content-type']) === null || _a === void 0 ? void 0 : _a.includes('application/json')) || ((_b = res.headers['content-type']) === null || _b === void 0 ? void 0 : _b.includes('application/problem+json'))) {\n            return 'json';\n        }\n        // f-e oauth token endpoints\n        else if (this.isFormEncodedEndpoint()) {\n            return 'url';\n        }\n        return 'text';\n    }\n    getParsedResponse(res) {\n        const data = this.responseData;\n        const mode = this.requestData.forceParseMode || this.detectResponseType(res);\n        if (mode === 'buffer') {\n            return Buffer.concat(data);\n        }\n        else if (mode === 'text') {\n            return Buffer.concat(data).toString();\n        }\n        else if (mode === 'json') {\n            const asText = Buffer.concat(data).toString();\n            return asText.length ? JSON.parse(asText) : undefined;\n        }\n        else if (mode === 'url') {\n            const asText = Buffer.concat(data).toString();\n            const formEntries = {};\n            for (const [item, value] of new URLSearchParams(asText)) {\n                formEntries[item] = value;\n            }\n            return formEntries;\n        }\n        else {\n            // mode === 'none'\n            return undefined;\n        }\n    }\n    getRateLimitFromResponse(res) {\n        let rateLimit = undefined;\n        if (res.headers['x-rate-limit-limit']) {\n            rateLimit = {\n                limit: Number(res.headers['x-rate-limit-limit']),\n                remaining: Number(res.headers['x-rate-limit-remaining']),\n                reset: Number(res.headers['x-rate-limit-reset']),\n            };\n            if (res.headers['x-app-limit-24hour-limit']) {\n                rateLimit.day = {\n                    limit: Number(res.headers['x-app-limit-24hour-limit']),\n                    remaining: Number(res.headers['x-app-limit-24hour-remaining']),\n                    reset: Number(res.headers['x-app-limit-24hour-reset']),\n                };\n            }\n            if (this.requestData.rateLimitSaver) {\n                this.requestData.rateLimitSaver(rateLimit);\n            }\n        }\n        return rateLimit;\n    }\n    /* Request event handlers */\n    onSocketEventHandler(reject, cleanupListener, socket) {\n        const onClose = this.onSocketCloseHandler.bind(this, reject);\n        socket.on('close', onClose);\n        cleanupListener.on('complete', () => socket.off('close', onClose));\n    }\n    onSocketCloseHandler(reject) {\n        this.req.removeAllListeners('timeout');\n        const res = this.res;\n        if (res) {\n            // Response ok, res.close/res.end can handle request ending\n            return;\n        }\n        if (!this.requestErrorHandled) {\n            return reject(this.createRequestError(new Error('Socket closed without any information.')));\n        }\n        // else: other situation\n    }\n    requestErrorHandler(reject, requestError) {\n        var _a, _b;\n        (_b = (_a = this.requestData).requestEventDebugHandler) === null || _b === void 0 ? void 0 : _b.call(_a, 'request-error', { requestError });\n        this.requestErrorHandled = true;\n        reject(this.createRequestError(requestError));\n    }\n    timeoutErrorHandler() {\n        this.requestErrorHandled = true;\n        this.req.destroy(new Error('Request timeout.'));\n    }\n    /* Response event handlers */\n    classicResponseHandler(resolve, reject, res) {\n        this.res = res;\n        const dataStream = this.getResponseDataStream(res);\n        // Register the response data\n        dataStream.on('data', chunk => this.responseData.push(chunk));\n        dataStream.on('end', this.onResponseEndHandler.bind(this, resolve, reject));\n        dataStream.on('close', this.onResponseCloseHandler.bind(this, resolve, reject));\n        // Debug handlers\n        if (this.requestData.requestEventDebugHandler) {\n            this.requestData.requestEventDebugHandler('response', { res });\n            res.on('aborted', error => this.requestData.requestEventDebugHandler('response-aborted', { error }));\n            res.on('error', error => this.requestData.requestEventDebugHandler('response-error', { error }));\n            res.on('close', () => this.requestData.requestEventDebugHandler('response-close', { data: this.responseData }));\n            res.on('end', () => this.requestData.requestEventDebugHandler('response-end'));\n        }\n    }\n    onResponseEndHandler(resolve, reject) {\n        const rateLimit = this.getRateLimitFromResponse(this.res);\n        let data;\n        try {\n            data = this.getParsedResponse(this.res);\n        }\n        catch (e) {\n            reject(this.createPartialResponseError(e, false));\n            return;\n        }\n        // Handle bad error codes\n        const code = this.res.statusCode;\n        if (code >= 400) {\n            reject(this.createResponseError({ data, res: this.res, rateLimit, code }));\n            return;\n        }\n        if (_settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.debug) {\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${this.res.statusCode}`);\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log('Response body:', data);\n        }\n        resolve({\n            data,\n            headers: this.res.headers,\n            rateLimit,\n        });\n    }\n    onResponseCloseHandler(resolve, reject) {\n        const res = this.res;\n        if (res.aborted) {\n            // Try to parse the request (?)\n            try {\n                this.getParsedResponse(this.res);\n                // Ok, try to resolve normally the request\n                return this.onResponseEndHandler(resolve, reject);\n            }\n            catch (e) {\n                // Parse error, just drop with content\n                return reject(this.createPartialResponseError(e, true));\n            }\n        }\n        if (!res.complete) {\n            return reject(this.createPartialResponseError(new Error('Response has been interrupted before response could be parsed.'), true));\n        }\n        // else: end has been called\n    }\n    streamResponseHandler(resolve, reject, res) {\n        const code = res.statusCode;\n        if (code < 400) {\n            if (_settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.debug) {\n                _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]: Request succeeds with code ${res.statusCode} (starting stream)`);\n            }\n            const dataStream = this.getResponseDataStream(res);\n            // HTTP code ok, consume stream\n            resolve({ req: this.req, res: dataStream, originalResponse: res, requestData: this.requestData });\n        }\n        else {\n            // Handle response normally, can only rejects\n            this.classicResponseHandler(() => undefined, reject, res);\n        }\n    }\n    /* Wrappers for request lifecycle */\n    debugRequest() {\n        const url = this.requestData.url;\n        _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log(`[${this.requestData.options.method} ${this.hrefPathname}]`, this.requestData.options);\n        if (url.search) {\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log('Request parameters:', [...url.searchParams.entries()].map(([key, value]) => `${key}: ${value}`));\n        }\n        if (this.requestData.body) {\n            _settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.logger.log('Request body:', this.requestData.body);\n        }\n    }\n    buildRequest() {\n        var _a;\n        const url = this.requestData.url;\n        const auth = url.username ? `${url.username}:${url.password}` : undefined;\n        const headers = (_a = this.requestData.options.headers) !== null && _a !== void 0 ? _a : {};\n        if (this.requestData.compression === true || this.requestData.compression === 'brotli') {\n            headers['accept-encoding'] = 'br;q=1.0, gzip;q=0.8, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'gzip') {\n            headers['accept-encoding'] = 'gzip;q=1, deflate;q=0.5, *;q=0.1';\n        }\n        else if (this.requestData.compression === 'deflate') {\n            headers['accept-encoding'] = 'deflate;q=1, *;q=0.1';\n        }\n        if (_settings__WEBPACK_IMPORTED_MODULE_1__.TwitterApiV2Settings.debug) {\n            this.debugRequest();\n        }\n        this.req = (0,https__WEBPACK_IMPORTED_MODULE_0__.request)({\n            ...this.requestData.options,\n            // Define URL params manually, addresses dependencies error https://github.com/PLhery/node-twitter-api-v2/issues/94\n            host: url.hostname,\n            port: url.port || undefined,\n            path: url.pathname + url.search,\n            protocol: url.protocol,\n            auth,\n            headers,\n        });\n    }\n    registerRequestEventDebugHandlers(req) {\n        req.on('close', () => this.requestData.requestEventDebugHandler('close'));\n        req.on('abort', () => this.requestData.requestEventDebugHandler('abort'));\n        req.on('socket', socket => {\n            this.requestData.requestEventDebugHandler('socket', { socket });\n            socket.on('error', error => this.requestData.requestEventDebugHandler('socket-error', { socket, error }));\n            socket.on('connect', () => this.requestData.requestEventDebugHandler('socket-connect', { socket }));\n            socket.on('close', withError => this.requestData.requestEventDebugHandler('socket-close', { socket, withError }));\n            socket.on('end', () => this.requestData.requestEventDebugHandler('socket-end', { socket }));\n            socket.on('lookup', (...data) => this.requestData.requestEventDebugHandler('socket-lookup', { socket, data }));\n            socket.on('timeout', () => this.requestData.requestEventDebugHandler('socket-timeout', { socket }));\n        });\n    }\n    makeRequest() {\n        this.buildRequest();\n        return new Promise((_resolve, _reject) => {\n            // Hooks to call when promise is fulfulled to cleanup the socket (shared between requests)\n            const resolve = value => {\n                cleanupListener.emit('complete');\n                _resolve(value);\n            };\n            const reject = value => {\n                cleanupListener.emit('complete');\n                _reject(value);\n            };\n            const cleanupListener = new events__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('socket', this.onSocketEventHandler.bind(this, reject, cleanupListener));\n            req.on('response', this.classicResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.options.timeout) {\n                req.on('timeout', this.timeoutErrorHandler.bind(this));\n            }\n            // Debug handlers\n            if (this.requestData.requestEventDebugHandler) {\n                this.registerRequestEventDebugHandlers(req);\n            }\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n    async makeRequestAsStream() {\n        const { req, res, requestData, originalResponse } = await this.makeRequestAndResolveWhenReady();\n        return new _stream_TweetStream__WEBPACK_IMPORTED_MODULE_2__[\"default\"](requestData, { req, res, originalResponse });\n    }\n    makeRequestAndResolveWhenReady() {\n        this.buildRequest();\n        return new Promise((resolve, reject) => {\n            const req = this.req;\n            // Handle request errors\n            req.on('error', this.requestErrorHandler.bind(this, reject));\n            req.on('response', this.streamResponseHandler.bind(this, resolve, reject));\n            if (this.requestData.body) {\n                req.write(this.requestData.body);\n            }\n            req.end();\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RequestHandlerHelper);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientRequestMaker: () => (/* binding */ ClientRequestMaker)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var _stream_TweetStream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stream/TweetStream */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js\");\n/* harmony import */ var _plugins_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../plugins/helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/plugins/helpers.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _oauth1_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./oauth1.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js\");\n/* harmony import */ var _request_handler_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./request-handler.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js\");\n/* harmony import */ var _request_param_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./request-param.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js\");\n/* harmony import */ var _oauth2_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./oauth2.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js\");\n\n\n\n\n\n\n\n\nclass ClientRequestMaker {\n    constructor(settings) {\n        this.rateLimits = {};\n        this.clientSettings = {};\n        if (settings) {\n            this.clientSettings = settings;\n        }\n    }\n    /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n    getRateLimits() {\n        return this.rateLimits;\n    }\n    saveRateLimit(originalUrl, rateLimit) {\n        this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n    async send(requestParams) {\n        var _a, _b, _c, _d, _e;\n        // Pre-request config hooks\n        if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n            const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n            if (possibleResponse) {\n                return possibleResponse;\n            }\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            timeout: requestParams.timeout,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        if (args.body) {\n            _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].setBodyLengthHeader(options, args.body);\n        }\n        // Pre-request hooks\n        if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n            await this.applyPreRequestHooks(requestParams, args, options);\n        }\n        let request = new _request_handler_helper__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            requestEventDebugHandler: requestParams.requestEventDebugHandler,\n            compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n            forceParseMode: requestParams.forceParseMode,\n        })\n            .makeRequest();\n        if ((0,_plugins_helpers__WEBPACK_IMPORTED_MODULE_2__.hasRequestErrorPlugins)(this)) {\n            request = this.applyResponseErrorHooks(requestParams, args, options, request);\n        }\n        const response = await request;\n        // Post-request hooks\n        if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n            const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n            if (responseOverride) {\n                return responseOverride.value;\n            }\n        }\n        return response;\n    }\n    sendStream(requestParams) {\n        var _a, _b;\n        // Pre-request hooks\n        if (this.clientSettings.plugins) {\n            this.applyPreStreamRequestConfigHooks(requestParams);\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        const enableAutoConnect = requestParams.autoConnect !== false;\n        if (args.body) {\n            _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].setBodyLengthHeader(options, args.body);\n        }\n        const requestData = {\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            payloadIsError: requestParams.payloadIsError,\n            compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true,\n        };\n        const stream = new _stream_TweetStream__WEBPACK_IMPORTED_MODULE_1__[\"default\"](requestData);\n        if (!enableAutoConnect) {\n            return stream;\n        }\n        return stream.connect();\n    }\n    /* Token helpers */\n    initializeToken(token) {\n        if (typeof token === 'string') {\n            this.bearerToken = token;\n        }\n        else if (typeof token === 'object' && 'appKey' in token) {\n            this.consumerToken = token.appKey;\n            this.consumerSecret = token.appSecret;\n            if (token.accessToken && token.accessSecret) {\n                this.accessToken = token.accessToken;\n                this.accessSecret = token.accessSecret;\n            }\n            this._oauth = this.buildOAuth();\n        }\n        else if (typeof token === 'object' && 'username' in token) {\n            const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n            this.basicToken = Buffer.from(key).toString('base64');\n        }\n        else if (typeof token === 'object' && 'clientId' in token) {\n            this.clientId = token.clientId;\n            this.clientSecret = token.clientSecret;\n        }\n    }\n    getActiveTokens() {\n        if (this.bearerToken) {\n            return {\n                type: 'oauth2',\n                bearerToken: this.bearerToken,\n            };\n        }\n        else if (this.basicToken) {\n            return {\n                type: 'basic',\n                token: this.basicToken,\n            };\n        }\n        else if (this.consumerSecret && this._oauth) {\n            return {\n                type: 'oauth-1.0a',\n                appKey: this.consumerToken,\n                appSecret: this.consumerSecret,\n                accessToken: this.accessToken,\n                accessSecret: this.accessSecret,\n            };\n        }\n        else if (this.clientId) {\n            return {\n                type: 'oauth2-user',\n                clientId: this.clientId,\n            };\n        }\n        return { type: 'none' };\n    }\n    buildOAuth() {\n        if (!this.consumerSecret || !this.consumerToken)\n            throw new Error('Invalid consumer tokens');\n        return new _oauth1_helper__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n            consumerKeys: { key: this.consumerToken, secret: this.consumerSecret },\n        });\n    }\n    getOAuthAccessTokens() {\n        if (!this.accessSecret || !this.accessToken)\n            return;\n        return {\n            key: this.accessToken,\n            secret: this.accessSecret,\n        };\n    }\n    /* Plugin helpers */\n    getPlugins() {\n        var _a;\n        return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n    hasPlugins() {\n        var _a;\n        return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n    async applyPluginMethod(method, args) {\n        var _a;\n        let returnValue;\n        for (const plugin of this.getPlugins()) {\n            const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n            if (value && value instanceof _types__WEBPACK_IMPORTED_MODULE_0__.TwitterApiPluginResponseOverride) {\n                returnValue = value;\n            }\n        }\n        return returnValue;\n    }\n    /* Request helpers */\n    writeAuthHeaders({ headers, bodyInSignature, url, method, query, body }) {\n        headers = { ...headers };\n        if (this.bearerToken) {\n            headers.Authorization = 'Bearer ' + this.bearerToken;\n        }\n        else if (this.basicToken) {\n            // Basic auth, to request a bearer token\n            headers.Authorization = 'Basic ' + this.basicToken;\n        }\n        else if (this.clientId && this.clientSecret) {\n            // Basic auth with clientId + clientSecret\n            headers.Authorization = 'Basic ' + _oauth2_helper__WEBPACK_IMPORTED_MODULE_7__.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n        }\n        else if (this.consumerSecret && this._oauth) {\n            // Merge query and body\n            const data = bodyInSignature ? _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].mergeQueryAndBodyForOAuth(query, body) : query;\n            const auth = this._oauth.authorize({\n                url: url.toString(),\n                method,\n                data,\n            }, this.getOAuthAccessTokens());\n            headers = { ...headers, ...this._oauth.toHeader(auth) };\n        }\n        return headers;\n    }\n    getUrlObjectFromUrlString(url) {\n        // Add protocol to URL if needed\n        if (!url.startsWith('http')) {\n            url = 'https://' + url;\n        }\n        // Convert URL to object that will receive all URL modifications\n        return new URL(url);\n    }\n    getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params, }) {\n        let body = undefined;\n        method = method.toUpperCase();\n        headers = headers !== null && headers !== void 0 ? headers : {};\n        // Add user agent header (Twitter recommends it)\n        if (!headers['x-user-agent']) {\n            headers['x-user-agent'] = 'Node.twitter-api-v2';\n        }\n        const url = this.getUrlObjectFromUrlString(stringUrl);\n        // URL without query string to save as endpoint name\n        const rawUrl = url.origin + url.pathname;\n        // Apply URL parameters\n        if (params) {\n            _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].applyRequestParametersToUrl(url, params);\n        }\n        // Build a URL without anything in QS, and QSP in query\n        const query = _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].formatQueryToString(rawQuery);\n        _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].moveUrlQueryParamsIntoObject(url, query);\n        // Delete undefined parameters\n        if (!(rawBody instanceof Buffer)) {\n            (0,_helpers__WEBPACK_IMPORTED_MODULE_3__.trimUndefinedProperties)(rawBody);\n        }\n        // OAuth signature should not include parameters when using multipart.\n        const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].autoDetectBodyType(url);\n        // If undefined or true, enable auth by headers\n        if (enableAuth !== false) {\n            // OAuth needs body signature only if body is URL encoded.\n            const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n            headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url, body: rawBody });\n        }\n        if (ClientRequestMaker.BODY_METHODS.has(method)) {\n            body = _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].constructBodyParams(rawBody, headers, bodyType) || undefined;\n        }\n        _request_param_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].addQueryParamsToUrl(url, query);\n        return {\n            rawUrl,\n            url,\n            method,\n            headers,\n            body,\n        };\n    }\n    /* Plugin helpers */\n    async applyPreRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            }));\n            if (result) {\n                return result;\n            }\n        }\n    }\n    applyPreStreamRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            });\n        }\n    }\n    async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n        await this.applyPluginMethod('onBeforeRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n        });\n    }\n    async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n        return await this.applyPluginMethod('onAfterRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            response,\n        });\n    }\n    applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n        return promise.catch(_plugins_helpers__WEBPACK_IMPORTED_MODULE_2__.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n}\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js":
/*!************************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestParamHelpers: () => (/* binding */ RequestParamHelpers),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _form_data_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-data.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/form-data.helper.js\");\n/* harmony import */ var _oauth1_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./oauth1.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth1.helper.js\");\n\n\n/* Helpers functions that are specific to this class but do not depends on instance */\nclass RequestParamHelpers {\n    static formatQueryToString(query) {\n        const formattedQuery = {};\n        for (const prop in query) {\n            if (typeof query[prop] === 'string') {\n                formattedQuery[prop] = query[prop];\n            }\n            else if (typeof query[prop] !== 'undefined') {\n                formattedQuery[prop] = String(query[prop]);\n            }\n        }\n        return formattedQuery;\n    }\n    static autoDetectBodyType(url) {\n        if (url.pathname.startsWith('/2/') || url.pathname.startsWith('/labs/2/')) {\n            // oauth2 takes url encoded\n            if (url.password.startsWith('/2/oauth2')) {\n                return 'url';\n            }\n            // Twitter API v2 has JSON-encoded requests for everything else\n            return 'json';\n        }\n        if (url.hostname === 'upload.x.com') {\n            if (url.pathname === '/1.1/media/upload.json') {\n                return 'form-data';\n            }\n            // json except for media/upload command, that is form-data.\n            return 'json';\n        }\n        const endpoint = url.pathname.split('/1.1/', 2)[1];\n        if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {\n            return 'json';\n        }\n        return 'url';\n    }\n    static addQueryParamsToUrl(url, query) {\n        const queryEntries = Object.entries(query);\n        if (queryEntries.length) {\n            let search = '';\n            for (const [key, value] of queryEntries) {\n                search += (search.length ? '&' : '?') + `${_oauth1_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].percentEncode(key)}=${_oauth1_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].percentEncode(value)}`;\n            }\n            url.search = search;\n        }\n    }\n    static constructBodyParams(body, headers, mode) {\n        if (body instanceof Buffer) {\n            return body;\n        }\n        if (mode === 'json') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/json;charset=UTF-8';\n            }\n            return JSON.stringify(body);\n        }\n        else if (mode === 'url') {\n            if (!headers['content-type']) {\n                headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n            }\n            if (Object.keys(body).length) {\n                return new URLSearchParams(body)\n                    .toString()\n                    .replace(/\\*/g, '%2A'); // URLSearchParams doesnt encode '*', but Twitter wants it encoded.\n            }\n            return '';\n        }\n        else if (mode === 'raw') {\n            throw new Error('You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).');\n        }\n        else {\n            const form = new _form_data_helper__WEBPACK_IMPORTED_MODULE_0__.FormDataHelper();\n            for (const parameter in body) {\n                form.append(parameter, body[parameter]);\n            }\n            if (!headers['content-type']) {\n                const formHeaders = form.getHeaders();\n                headers['content-type'] = formHeaders['content-type'];\n            }\n            return form.getBuffer();\n        }\n    }\n    static setBodyLengthHeader(options, body) {\n        var _a;\n        options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n        if (typeof body === 'string') {\n            options.headers['content-length'] = Buffer.byteLength(body);\n        }\n        else {\n            options.headers['content-length'] = body.length;\n        }\n    }\n    static isOAuthSerializable(item) {\n        return !(item instanceof Buffer);\n    }\n    static mergeQueryAndBodyForOAuth(query, body) {\n        const parameters = {};\n        for (const prop in query) {\n            parameters[prop] = query[prop];\n        }\n        if (this.isOAuthSerializable(body)) {\n            for (const prop in body) {\n                const bodyProp = body[prop];\n                if (this.isOAuthSerializable(bodyProp)) {\n                    parameters[prop] = typeof bodyProp === 'object' && bodyProp !== null && 'toString' in bodyProp\n                        ? bodyProp.toString()\n                        : bodyProp;\n                }\n            }\n        }\n        return parameters;\n    }\n    static moveUrlQueryParamsIntoObject(url, query) {\n        for (const [param, value] of url.searchParams) {\n            query[param] = value;\n        }\n        // Remove the query string\n        url.search = '';\n        return url;\n    }\n    /**\n     * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:\n     * `https://x.com/:id.json` + `{ id: '20' }` => `https://x.com/20.json`\n     */\n    static applyRequestParametersToUrl(url, parameters) {\n        url.pathname = url.pathname.replace(/:([A-Z_-]+)/ig, (fullMatch, paramName) => {\n            if (parameters[paramName] !== undefined) {\n                return String(parameters[paramName]);\n            }\n            return fullMatch;\n        });\n        return url;\n    }\n}\nRequestParamHelpers.JSON_1_1_ENDPOINTS = new Set([\n    'direct_messages/events/new.json',\n    'direct_messages/welcome_messages/new.json',\n    'direct_messages/welcome_messages/rules/new.json',\n    'media/metadata/create.json',\n    'collections/entries/curate.json',\n]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RequestParamHelpers);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LW1peGlucy9yZXF1ZXN0LXBhcmFtLmhlbHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ1Q7QUFDM0M7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxzREFBWSxvQkFBb0IsR0FBRyxzREFBWSxzQkFBc0I7QUFDaEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2REFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFVBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxtQkFBbUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LW1peGlucy9yZXF1ZXN0LXBhcmFtLmhlbHBlci5qcz9lN2VjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1EYXRhSGVscGVyIH0gZnJvbSAnLi9mb3JtLWRhdGEuaGVscGVyJztcbmltcG9ydCBPQXV0aDFIZWxwZXIgZnJvbSAnLi9vYXV0aDEuaGVscGVyJztcbi8qIEhlbHBlcnMgZnVuY3Rpb25zIHRoYXQgYXJlIHNwZWNpZmljIHRvIHRoaXMgY2xhc3MgYnV0IGRvIG5vdCBkZXBlbmRzIG9uIGluc3RhbmNlICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdFBhcmFtSGVscGVycyB7XG4gICAgc3RhdGljIGZvcm1hdFF1ZXJ5VG9TdHJpbmcocXVlcnkpIHtcbiAgICAgICAgY29uc3QgZm9ybWF0dGVkUXVlcnkgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBwcm9wIGluIHF1ZXJ5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHF1ZXJ5W3Byb3BdID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFF1ZXJ5W3Byb3BdID0gcXVlcnlbcHJvcF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgcXVlcnlbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkUXVlcnlbcHJvcF0gPSBTdHJpbmcocXVlcnlbcHJvcF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXR0ZWRRdWVyeTtcbiAgICB9XG4gICAgc3RhdGljIGF1dG9EZXRlY3RCb2R5VHlwZSh1cmwpIHtcbiAgICAgICAgaWYgKHVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvMi8nKSB8fCB1cmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL2xhYnMvMi8nKSkge1xuICAgICAgICAgICAgLy8gb2F1dGgyIHRha2VzIHVybCBlbmNvZGVkXG4gICAgICAgICAgICBpZiAodXJsLnBhc3N3b3JkLnN0YXJ0c1dpdGgoJy8yL29hdXRoMicpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICd1cmwnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVHdpdHRlciBBUEkgdjIgaGFzIEpTT04tZW5jb2RlZCByZXF1ZXN0cyBmb3IgZXZlcnl0aGluZyBlbHNlXG4gICAgICAgICAgICByZXR1cm4gJ2pzb24nO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1cmwuaG9zdG5hbWUgPT09ICd1cGxvYWQueC5jb20nKSB7XG4gICAgICAgICAgICBpZiAodXJsLnBhdGhuYW1lID09PSAnLzEuMS9tZWRpYS91cGxvYWQuanNvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2Zvcm0tZGF0YSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBqc29uIGV4Y2VwdCBmb3IgbWVkaWEvdXBsb2FkIGNvbW1hbmQsIHRoYXQgaXMgZm9ybS1kYXRhLlxuICAgICAgICAgICAgcmV0dXJuICdqc29uJztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbmRwb2ludCA9IHVybC5wYXRobmFtZS5zcGxpdCgnLzEuMS8nLCAyKVsxXTtcbiAgICAgICAgaWYgKHRoaXMuSlNPTl8xXzFfRU5EUE9JTlRTLmhhcyhlbmRwb2ludCkpIHtcbiAgICAgICAgICAgIHJldHVybiAnanNvbic7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICd1cmwnO1xuICAgIH1cbiAgICBzdGF0aWMgYWRkUXVlcnlQYXJhbXNUb1VybCh1cmwsIHF1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5RW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHF1ZXJ5KTtcbiAgICAgICAgaWYgKHF1ZXJ5RW50cmllcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxldCBzZWFyY2ggPSAnJztcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHF1ZXJ5RW50cmllcykge1xuICAgICAgICAgICAgICAgIHNlYXJjaCArPSAoc2VhcmNoLmxlbmd0aCA/ICcmJyA6ICc/JykgKyBgJHtPQXV0aDFIZWxwZXIucGVyY2VudEVuY29kZShrZXkpfT0ke09BdXRoMUhlbHBlci5wZXJjZW50RW5jb2RlKHZhbHVlKX1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXJsLnNlYXJjaCA9IHNlYXJjaDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgY29uc3RydWN0Qm9keVBhcmFtcyhib2R5LCBoZWFkZXJzLCBtb2RlKSB7XG4gICAgICAgIGlmIChib2R5IGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gYm9keTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kZSA9PT0gJ2pzb24nKSB7XG4gICAgICAgICAgICBpZiAoIWhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddKSB7XG4gICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShib2R5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChtb2RlID09PSAndXJsJykge1xuICAgICAgICAgICAgaWYgKCFoZWFkZXJzWydjb250ZW50LXR5cGUnXSkge1xuICAgICAgICAgICAgICAgIGhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhib2R5KS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFVSTFNlYXJjaFBhcmFtcyhib2R5KVxuICAgICAgICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwqL2csICclMkEnKTsgLy8gVVJMU2VhcmNoUGFyYW1zIGRvZXNudCBlbmNvZGUgJyonLCBidXQgVHdpdHRlciB3YW50cyBpdCBlbmNvZGVkLlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG1vZGUgPT09ICdyYXcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBjYW4gb25seSB1c2UgcmF3IGJvZHkgbW9kZSB3aXRoIEJ1ZmZlcnMuIFRvIGdpdmUgYSBzdHJpbmcsIHVzZSBCdWZmZXIuZnJvbShzdHIpLicpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZm9ybSA9IG5ldyBGb3JtRGF0YUhlbHBlcigpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBwYXJhbWV0ZXIgaW4gYm9keSkge1xuICAgICAgICAgICAgICAgIGZvcm0uYXBwZW5kKHBhcmFtZXRlciwgYm9keVtwYXJhbWV0ZXJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghaGVhZGVyc1snY29udGVudC10eXBlJ10pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmb3JtSGVhZGVycyA9IGZvcm0uZ2V0SGVhZGVycygpO1xuICAgICAgICAgICAgICAgIGhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddID0gZm9ybUhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZvcm0uZ2V0QnVmZmVyKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIHNldEJvZHlMZW5ndGhIZWFkZXIob3B0aW9ucywgYm9keSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIG9wdGlvbnMuaGVhZGVycyA9IChfYSA9IG9wdGlvbnMuaGVhZGVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDoge307XG4gICAgICAgIGlmICh0eXBlb2YgYm9keSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuaGVhZGVyc1snY29udGVudC1sZW5ndGgnXSA9IEJ1ZmZlci5ieXRlTGVuZ3RoKGJvZHkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb3B0aW9ucy5oZWFkZXJzWydjb250ZW50LWxlbmd0aCddID0gYm9keS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGlzT0F1dGhTZXJpYWxpemFibGUoaXRlbSkge1xuICAgICAgICByZXR1cm4gIShpdGVtIGluc3RhbmNlb2YgQnVmZmVyKTtcbiAgICB9XG4gICAgc3RhdGljIG1lcmdlUXVlcnlBbmRCb2R5Rm9yT0F1dGgocXVlcnksIGJvZHkpIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVycyA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gcXVlcnkpIHtcbiAgICAgICAgICAgIHBhcmFtZXRlcnNbcHJvcF0gPSBxdWVyeVtwcm9wXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pc09BdXRoU2VyaWFsaXphYmxlKGJvZHkpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gYm9keSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHlQcm9wID0gYm9keVtwcm9wXTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc09BdXRoU2VyaWFsaXphYmxlKGJvZHlQcm9wKSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbWV0ZXJzW3Byb3BdID0gdHlwZW9mIGJvZHlQcm9wID09PSAnb2JqZWN0JyAmJiBib2R5UHJvcCAhPT0gbnVsbCAmJiAndG9TdHJpbmcnIGluIGJvZHlQcm9wXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGJvZHlQcm9wLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogYm9keVByb3A7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXJhbWV0ZXJzO1xuICAgIH1cbiAgICBzdGF0aWMgbW92ZVVybFF1ZXJ5UGFyYW1zSW50b09iamVjdCh1cmwsIHF1ZXJ5KSB7XG4gICAgICAgIGZvciAoY29uc3QgW3BhcmFtLCB2YWx1ZV0gb2YgdXJsLnNlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgcXVlcnlbcGFyYW1dID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBxdWVyeSBzdHJpbmdcbiAgICAgICAgdXJsLnNlYXJjaCA9ICcnO1xuICAgICAgICByZXR1cm4gdXJsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIFVSTCBwYXJhbWV0ZXJzIGF2YWlsYWJsZSBpbiBwYXRobmFtZSwgbGlrZSBgOmlkYCwgd2l0aCBkYXRhIGdpdmVuIGluIGBwYXJhbWV0ZXJzYDpcbiAgICAgKiBgaHR0cHM6Ly94LmNvbS86aWQuanNvbmAgKyBgeyBpZDogJzIwJyB9YCA9PiBgaHR0cHM6Ly94LmNvbS8yMC5qc29uYFxuICAgICAqL1xuICAgIHN0YXRpYyBhcHBseVJlcXVlc3RQYXJhbWV0ZXJzVG9VcmwodXJsLCBwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHVybC5wYXRobmFtZSA9IHVybC5wYXRobmFtZS5yZXBsYWNlKC86KFtBLVpfLV0rKS9pZywgKGZ1bGxNYXRjaCwgcGFyYW1OYW1lKSA9PiB7XG4gICAgICAgICAgICBpZiAocGFyYW1ldGVyc1twYXJhbU5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKHBhcmFtZXRlcnNbcGFyYW1OYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZnVsbE1hdGNoO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG59XG5SZXF1ZXN0UGFyYW1IZWxwZXJzLkpTT05fMV8xX0VORFBPSU5UUyA9IG5ldyBTZXQoW1xuICAgICdkaXJlY3RfbWVzc2FnZXMvZXZlbnRzL25ldy5qc29uJyxcbiAgICAnZGlyZWN0X21lc3NhZ2VzL3dlbGNvbWVfbWVzc2FnZXMvbmV3Lmpzb24nLFxuICAgICdkaXJlY3RfbWVzc2FnZXMvd2VsY29tZV9tZXNzYWdlcy9ydWxlcy9uZXcuanNvbicsXG4gICAgJ21lZGlhL21ldGFkYXRhL2NyZWF0ZS5qc29uJyxcbiAgICAnY29sbGVjdGlvbnMvZW50cmllcy9jdXJhdGUuanNvbicsXG5dKTtcbmV4cG9ydCBkZWZhdWx0IFJlcXVlc3RQYXJhbUhlbHBlcnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client.base.js":
/*!*************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client.base.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiBase)\n/* harmony export */ });\n/* harmony import */ var _client_mixins_request_maker_mixin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client-mixins/request-maker.mixin */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-maker.mixin.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n\n\n\n/**\n * Base class for Twitter instances\n */\nclass TwitterApiBase {\n    constructor(token, settings = {}) {\n        this._currentUser = null;\n        this._currentUserV2 = null;\n        if (token instanceof TwitterApiBase) {\n            this._requestMaker = token._requestMaker;\n        }\n        else {\n            this._requestMaker = new _client_mixins_request_maker_mixin__WEBPACK_IMPORTED_MODULE_0__.ClientRequestMaker(settings);\n            this._requestMaker.initializeToken(token);\n        }\n    }\n    /* Prefix/Token handling */\n    setPrefix(prefix) {\n        this._prefix = prefix;\n    }\n    cloneWithPrefix(prefix) {\n        const clone = this.constructor(this);\n        clone.setPrefix(prefix);\n        return clone;\n    }\n    getActiveTokens() {\n        return this._requestMaker.getActiveTokens();\n    }\n    /* Rate limit cache / Plugins */\n    getPlugins() {\n        return this._requestMaker.getPlugins();\n    }\n    getPluginOfType(type) {\n        return this.getPlugins().find(plugin => plugin instanceof type);\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the Twitter rate limit for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    hasHitRateLimit(endpoint) {\n        var _a;\n        if (this.isRateLimitStatusObsolete(endpoint)) {\n            return false;\n        }\n        return ((_a = this.getLastRateLimitStatus(endpoint)) === null || _a === void 0 ? void 0 : _a.remaining) === 0;\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Tells if you hit the returned Twitter rate limit for {endpoint} has expired.\n     * If client has no saved rate limit data for {endpoint}, this will gives you `true`.\n     */\n    isRateLimitStatusObsolete(endpoint) {\n        const rateLimit = this.getLastRateLimitStatus(endpoint);\n        if (rateLimit === undefined) {\n            return true;\n        }\n        // Timestamps are exprimed in seconds, JS works with ms\n        return (rateLimit.reset * 1000) < Date.now();\n    }\n    /**\n     * @deprecated - Migrate to plugin `@twitter-api-v2/plugin-rate-limit`\n     *\n     * Get the last obtained Twitter rate limit information for {endpoint}.\n     * (local data only, this should not ask anything to Twitter)\n     */\n    getLastRateLimitStatus(endpoint) {\n        const endpointWithPrefix = endpoint.match(/^https?:\\/\\//) ? endpoint : (this._prefix + endpoint);\n        return this._requestMaker.getRateLimits()[endpointWithPrefix];\n    }\n    /* Current user cache */\n    /** Get cached current user. */\n    getCurrentUserObject(forceFetch = false) {\n        if (!forceFetch && this._currentUser) {\n            if (this._currentUser.value) {\n                return Promise.resolve(this._currentUser.value);\n            }\n            return this._currentUser.promise;\n        }\n        this._currentUser = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.sharedPromise)(() => this.get('account/verify_credentials.json', { tweet_mode: 'extended' }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_2__.API_V1_1_PREFIX }));\n        return this._currentUser.promise;\n    }\n    /**\n     * Get cached current user from v2 API.\n     * This can only be the slimest available `UserV2` object, with only `id`, `name` and `username` properties defined.\n     *\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    getCurrentUserV2Object(forceFetch = false) {\n        if (!forceFetch && this._currentUserV2) {\n            if (this._currentUserV2.value) {\n                return Promise.resolve(this._currentUserV2.value);\n            }\n            return this._currentUserV2.promise;\n        }\n        this._currentUserV2 = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.sharedPromise)(() => this.get('users/me', undefined, { prefix: _globals__WEBPACK_IMPORTED_MODULE_2__.API_V2_PREFIX }));\n        return this._currentUserV2.promise;\n    }\n    async get(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async delete(url, query = {}, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'DELETE',\n            query,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async post(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async put(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PUT',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    async patch(url, body, { fullResponse, prefix = this._prefix, ...rest } = {}) {\n        if (prefix)\n            url = prefix + url;\n        const resp = await this._requestMaker.send({\n            url,\n            method: 'PATCH',\n            body,\n            ...rest,\n        });\n        return fullResponse ? resp : resp.data;\n    }\n    getStream(url, query, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'GET',\n            query,\n            ...rest,\n        });\n    }\n    postStream(url, body, { prefix = this._prefix, ...rest } = {}) {\n        return this._requestMaker.sendStream({\n            url: prefix ? prefix + url : url,\n            method: 'POST',\n            body,\n            ...rest,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client.base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js":
/*!******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client.subclient.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiSubClient)\n/* harmony export */ });\n/* harmony import */ var _client_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.base */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.base.js\");\n\n/**\n * Base subclient for every v1 and v2 client.\n */\nclass TwitterApiSubClient extends _client_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(instance) {\n        if (!(instance instanceof _client_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\n            throw new Error('You must instance SubTwitterApi instance from existing TwitterApi instance.');\n        }\n        super(instance);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LnN1YmNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDZSxrQ0FBa0Msb0RBQWM7QUFDL0Q7QUFDQSxrQ0FBa0Msb0RBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50LnN1YmNsaWVudC5qcz8xYzg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUd2l0dGVyQXBpQmFzZSBmcm9tICcuL2NsaWVudC5iYXNlJztcbi8qKlxuICogQmFzZSBzdWJjbGllbnQgZm9yIGV2ZXJ5IHYxIGFuZCB2MiBjbGllbnQuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR3aXR0ZXJBcGlTdWJDbGllbnQgZXh0ZW5kcyBUd2l0dGVyQXBpQmFzZSB7XG4gICAgY29uc3RydWN0b3IoaW5zdGFuY2UpIHtcbiAgICAgICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBUd2l0dGVyQXBpQmFzZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG11c3QgaW5zdGFuY2UgU3ViVHdpdHRlckFwaSBpbnN0YW5jZSBmcm9tIGV4aXN0aW5nIFR3aXR0ZXJBcGkgaW5zdGFuY2UuJyk7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoaW5zdGFuY2UpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApi: () => (/* binding */ TwitterApi),\n/* harmony export */   TwitterApiReadOnly: () => (/* reexport safe */ _readonly__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   TwitterApiReadWrite: () => (/* reexport safe */ _readwrite__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v1_client_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../v1/client.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js\");\n/* harmony import */ var _v2_client_v2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../v2/client.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.js\");\n/* harmony import */ var _readwrite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readwrite */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readwrite.js\");\n/* harmony import */ var _ads_client_ads__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ads/client.ads */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/ads/client.ads.js\");\n/* harmony import */ var _readonly__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./readonly */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readonly.js\");\n\n\n\n\n// \"Real\" exported client for usage of TwitterApi.\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApi extends _readwrite__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new _v1_client_v1__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new _v2_client_v2__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /**\n     * Get Twitter Ads API client\n     */\n    get ads() {\n        if (this._ads)\n            return this._ads;\n        return this._ads = new _ads_client_ads__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n    }\n    /* Static helpers */\n    static getErrors(error) {\n        var _a;\n        if (typeof error !== 'object')\n            return [];\n        if (!('data' in error))\n            return [];\n        return (_a = error.data.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** Extract another image size than obtained in a `profile_image_url` or `profile_image_url_https` field of a user object. */\n    static getProfileImageInSize(profileImageUrl, size) {\n        const lastPart = profileImageUrl.split('/').pop();\n        const sizes = ['normal', 'bigger', 'mini'];\n        let originalUrl = profileImageUrl;\n        for (const availableSize of sizes) {\n            if (lastPart.includes(`_${availableSize}`)) {\n                originalUrl = profileImageUrl.replace(`_${availableSize}`, '');\n                break;\n            }\n        }\n        if (size === 'original') {\n            return originalUrl;\n        }\n        const extPos = originalUrl.lastIndexOf('.');\n        if (extPos !== -1) {\n            const ext = originalUrl.slice(extPos + 1);\n            return originalUrl.slice(0, extPos) + '_' + size + '.' + ext;\n        }\n        else {\n            return originalUrl + '_' + size;\n        }\n    }\n}\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterApi);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEyQztBQUNBO0FBQ0c7QUFDSDtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QixrREFBbUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsdURBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsY0FBYztBQUNwRCwwREFBMEQsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2RDtBQUNGO0FBQzNELGlFQUFlLFVBQVUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50L2luZGV4LmpzP2U2ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFR3aXR0ZXJBcGl2MSBmcm9tICcuLi92MS9jbGllbnQudjEnO1xuaW1wb3J0IFR3aXR0ZXJBcGl2MiBmcm9tICcuLi92Mi9jbGllbnQudjInO1xuaW1wb3J0IFR3aXR0ZXJBcGlSZWFkV3JpdGUgZnJvbSAnLi9yZWFkd3JpdGUnO1xuaW1wb3J0IFR3aXR0ZXJBZHMgZnJvbSAnLi4vYWRzL2NsaWVudC5hZHMnO1xuLy8gXCJSZWFsXCIgZXhwb3J0ZWQgY2xpZW50IGZvciB1c2FnZSBvZiBUd2l0dGVyQXBpLlxuLyoqXG4gKiBUd2l0dGVyIHYxLjEgYW5kIHYyIEFQSSBjbGllbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBUd2l0dGVyQXBpIGV4dGVuZHMgVHdpdHRlckFwaVJlYWRXcml0ZSB7XG4gICAgLyogRGlyZWN0IGFjY2VzcyB0byBzdWJjbGllbnRzICovXG4gICAgZ2V0IHYxKCkge1xuICAgICAgICBpZiAodGhpcy5fdjEpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdjE7XG4gICAgICAgIHJldHVybiB0aGlzLl92MSA9IG5ldyBUd2l0dGVyQXBpdjEodGhpcyk7XG4gICAgfVxuICAgIGdldCB2MigpIHtcbiAgICAgICAgaWYgKHRoaXMuX3YyKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3YyO1xuICAgICAgICByZXR1cm4gdGhpcy5fdjIgPSBuZXcgVHdpdHRlckFwaXYyKHRoaXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjbGllbnQgd2l0aCByZWFkL3dyaXRlIHJpZ2h0cy5cbiAgICAgKi9cbiAgICBnZXQgcmVhZFdyaXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IFR3aXR0ZXIgQWRzIEFQSSBjbGllbnRcbiAgICAgKi9cbiAgICBnZXQgYWRzKCkge1xuICAgICAgICBpZiAodGhpcy5fYWRzKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FkcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FkcyA9IG5ldyBUd2l0dGVyQWRzKHRoaXMpO1xuICAgIH1cbiAgICAvKiBTdGF0aWMgaGVscGVycyAqL1xuICAgIHN0YXRpYyBnZXRFcnJvcnMoZXJyb3IpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAodHlwZW9mIGVycm9yICE9PSAnb2JqZWN0JylcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgaWYgKCEoJ2RhdGEnIGluIGVycm9yKSlcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgcmV0dXJuIChfYSA9IGVycm9yLmRhdGEuZXJyb3JzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgLyoqIEV4dHJhY3QgYW5vdGhlciBpbWFnZSBzaXplIHRoYW4gb2J0YWluZWQgaW4gYSBgcHJvZmlsZV9pbWFnZV91cmxgIG9yIGBwcm9maWxlX2ltYWdlX3VybF9odHRwc2AgZmllbGQgb2YgYSB1c2VyIG9iamVjdC4gKi9cbiAgICBzdGF0aWMgZ2V0UHJvZmlsZUltYWdlSW5TaXplKHByb2ZpbGVJbWFnZVVybCwgc2l6ZSkge1xuICAgICAgICBjb25zdCBsYXN0UGFydCA9IHByb2ZpbGVJbWFnZVVybC5zcGxpdCgnLycpLnBvcCgpO1xuICAgICAgICBjb25zdCBzaXplcyA9IFsnbm9ybWFsJywgJ2JpZ2dlcicsICdtaW5pJ107XG4gICAgICAgIGxldCBvcmlnaW5hbFVybCA9IHByb2ZpbGVJbWFnZVVybDtcbiAgICAgICAgZm9yIChjb25zdCBhdmFpbGFibGVTaXplIG9mIHNpemVzKSB7XG4gICAgICAgICAgICBpZiAobGFzdFBhcnQuaW5jbHVkZXMoYF8ke2F2YWlsYWJsZVNpemV9YCkpIHtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbFVybCA9IHByb2ZpbGVJbWFnZVVybC5yZXBsYWNlKGBfJHthdmFpbGFibGVTaXplfWAsICcnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoc2l6ZSA9PT0gJ29yaWdpbmFsJykge1xuICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsVXJsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV4dFBvcyA9IG9yaWdpbmFsVXJsLmxhc3RJbmRleE9mKCcuJyk7XG4gICAgICAgIGlmIChleHRQb3MgIT09IC0xKSB7XG4gICAgICAgICAgICBjb25zdCBleHQgPSBvcmlnaW5hbFVybC5zbGljZShleHRQb3MgKyAxKTtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbFVybC5zbGljZSgwLCBleHRQb3MpICsgJ18nICsgc2l6ZSArICcuJyArIGV4dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbFVybCArICdfJyArIHNpemU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgeyBkZWZhdWx0IGFzIFR3aXR0ZXJBcGlSZWFkV3JpdGUgfSBmcm9tICcuL3JlYWR3cml0ZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFR3aXR0ZXJBcGlSZWFkT25seSB9IGZyb20gJy4vcmVhZG9ubHknO1xuZXhwb3J0IGRlZmF1bHQgVHdpdHRlckFwaTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readonly.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client/readonly.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiReadOnly)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client/index.js\");\n/* harmony import */ var _client_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client.base */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.base.js\");\n/* harmony import */ var _v1_client_v1_read__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../v1/client.v1.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js\");\n/* harmony import */ var _v2_client_v2_read__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../v2/client.v2.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js\");\n/* harmony import */ var _client_mixins_oauth2_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../client-mixins/oauth2.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/oauth2.helper.js\");\n/* harmony import */ var _client_mixins_request_param_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../client-mixins/request-param.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-param.helper.js\");\n\n\n\n\n\n\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadOnly extends _client_base__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new _v1_client_v1_read__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new _v2_client_v2_read__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a user authentication.\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     */\n    async currentUser(forceFetch = false) {\n        return await this.getCurrentUserObject(forceFetch);\n    }\n    /**\n     * Fetch and cache current user.\n     * This method can only be called with a OAuth 1.0a or OAuth2 user authentication.\n     *\n     * This can only be the slimest available `UserV2` object, with only id, name and username properties defined.\n     * To get a customized `UserV2Result`, use `.v2.me()`\n     *\n     * You can use this method to test if authentication was successful.\n     * Next calls to this methods will use the cached user, unless `forceFetch: true` is given.\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    async currentUserV2(forceFetch = false) {\n        return await this.getCurrentUserV2Object(forceFetch);\n    }\n    /* Shortcuts to endpoints */\n    search(what, options) {\n        return this.v2.search(what, options);\n    }\n    /* Authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 1.0 auth.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with consumer keys\n     * const client = new TwitterApi({ appKey: 'consumer_key', appSecret: 'consumer_secret' });\n     *\n     * const tokenRequest = await client.generateAuthLink('oob-or-your-callback-url');\n     * // redirect end-user to tokenRequest.url\n     *\n     * // Save tokenRequest.oauth_token_secret somewhere, it will be needed for next auth step.\n     * ```\n     */\n    async generateAuthLink(oauth_callback = 'oob', { authAccessType, linkMode = 'authenticate', forceLogin, screenName, } = {}) {\n        const oauthResult = await this.post('https://api.x.com/oauth/request_token', { oauth_callback, x_auth_access_type: authAccessType });\n        let url = `https://api.x.com/oauth/${linkMode}?oauth_token=${encodeURIComponent(oauthResult.oauth_token)}`;\n        if (forceLogin !== undefined) {\n            url += `&force_login=${encodeURIComponent(forceLogin)}`;\n        }\n        if (screenName !== undefined) {\n            url += `&screen_name=${encodeURIComponent(screenName)}`;\n        }\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth1RequestToken', {\n                client: this._requestMaker,\n                url,\n                oauthResult,\n            });\n        }\n        return {\n            url,\n            ...oauthResult,\n        };\n    }\n    /**\n     * Obtain access to user-based OAuth 1.0 auth.\n     *\n     * After user is redirect from your callback, use obtained oauth_token and oauth_verifier to\n     * instantiate the new TwitterApi instance.\n     *\n     * ```ts\n     * // Use the saved oauth_token_secret associated to oauth_token returned by callback\n     * const requestClient = new TwitterApi({\n     *  appKey: 'consumer_key',\n     *  appSecret: 'consumer_secret',\n     *  accessToken: 'oauth_token',\n     *  accessSecret: 'oauth_token_secret'\n     * });\n     *\n     * // Use oauth_verifier obtained from callback request\n     * const { client: userClient } = await requestClient.login('oauth_verifier');\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async login(oauth_verifier) {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept OAuth 1.0 login');\n        const oauth_result = await this.post('https://api.x.com/oauth/access_token', { oauth_token: tokens.accessToken, oauth_verifier });\n        const client = new ___WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            appKey: tokens.appKey,\n            appSecret: tokens.appSecret,\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n        }, this._requestMaker.clientSettings);\n        return {\n            accessToken: oauth_result.oauth_token,\n            accessSecret: oauth_result.oauth_token_secret,\n            userId: oauth_result.user_id,\n            screenName: oauth_result.screen_name,\n            client,\n        };\n    }\n    /**\n     * Enable application-only authentication.\n     *\n     * To make the request, instantiate TwitterApi with consumer and secret.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ appKey: 'consumer', appSecret: 'secret' });\n     * const appClient = await requestClient.appLogin();\n     *\n     * // Use {appClient} to make requests\n     * ```\n     */\n    async appLogin() {\n        const tokens = this.getActiveTokens();\n        if (tokens.type !== 'oauth-1.0a')\n            throw new Error('You must setup TwitterApi instance with consumer keys to accept app-only login');\n        // Create a client with Basic authentication\n        const basicClient = new ___WEBPACK_IMPORTED_MODULE_0__[\"default\"]({ username: tokens.appKey, password: tokens.appSecret }, this._requestMaker.clientSettings);\n        const res = await basicClient.post('https://api.x.com/oauth2/token', { grant_type: 'client_credentials' });\n        // New object with Bearer token\n        return new ___WEBPACK_IMPORTED_MODULE_0__[\"default\"](res.access_token, this._requestMaker.clientSettings);\n    }\n    /* OAuth 2 user authentication */\n    /**\n     * Generate the OAuth request token link for user-based OAuth 2.0 auth.\n     *\n     * - **You can only use v2 API endpoints with this authentication method.**\n     * - **You need to specify which scope you want to have when you create your auth link. Make sure it matches your needs.**\n     *\n     * See https://developer.x.com/en/docs/authentication/oauth-2-0/user-access-token for details.\n     *\n     * ```ts\n     * // Instantiate TwitterApi with client ID\n     * const client = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * // Generate a link to callback URL that will gives a token with tweet+user read access\n     * const link = client.generateOAuth2AuthLink('your-callback-url', { scope: ['tweet.read', 'users.read'] });\n     *\n     * // Extract props from generate link\n     * const { url, state, codeVerifier } = link;\n     *\n     * // redirect end-user to url\n     * // Save `state` and `codeVerifier` somewhere, it will be needed for next auth step.\n     * ```\n     */\n    generateOAuth2AuthLink(redirectUri, options = {}) {\n        var _a, _b;\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. You can find your client ID in Twitter Developer Portal. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const state = (_a = options.state) !== null && _a !== void 0 ? _a : _client_mixins_oauth2_helper__WEBPACK_IMPORTED_MODULE_4__.OAuth2Helper.generateRandomString(32);\n        const codeVerifier = _client_mixins_oauth2_helper__WEBPACK_IMPORTED_MODULE_4__.OAuth2Helper.getCodeVerifier();\n        const codeChallenge = _client_mixins_oauth2_helper__WEBPACK_IMPORTED_MODULE_4__.OAuth2Helper.getCodeChallengeFromVerifier(codeVerifier);\n        const rawScope = (_b = options.scope) !== null && _b !== void 0 ? _b : '';\n        const scope = Array.isArray(rawScope) ? rawScope.join(' ') : rawScope;\n        const url = new URL('https://x.com/i/oauth2/authorize');\n        const query = {\n            response_type: 'code',\n            client_id: this._requestMaker.clientId,\n            redirect_uri: redirectUri,\n            state,\n            code_challenge: codeChallenge,\n            code_challenge_method: 's256',\n            scope,\n        };\n        _client_mixins_request_param_helper__WEBPACK_IMPORTED_MODULE_5__[\"default\"].addQueryParamsToUrl(url, query);\n        const result = {\n            url: url.toString(),\n            state,\n            codeVerifier,\n            codeChallenge,\n        };\n        if (this._requestMaker.hasPlugins()) {\n            this._requestMaker.applyPluginMethod('onOAuth2RequestToken', {\n                client: this._requestMaker,\n                result,\n                redirectUri,\n            });\n        }\n        return result;\n    }\n    /**\n     * Obtain access to user-based OAuth 2.0 auth.\n     *\n     * After user is redirect from your callback, use obtained code to\n     * instantiate the new TwitterApi instance.\n     *\n     * You need to obtain `codeVerifier` from a call to `.generateOAuth2AuthLink`.\n     *\n     * ```ts\n     * // Use the saved codeVerifier associated to state (present in query string of callback)\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient, refreshToken } = await requestClient.loginWithOAuth2({\n     *  code: 'codeFromQueryString',\n     *  // the same URL given to generateOAuth2AuthLink\n     *  redirectUri,\n     *  // the verifier returned by generateOAuth2AuthLink\n     *  codeVerifier,\n     * });\n     *\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * // {refreshToken} is defined if 'offline.access' is in scope.\n     * ```\n     */\n    async loginWithOAuth2({ code, codeVerifier, redirectUri }) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.x.com/2/oauth2/token', {\n            code,\n            code_verifier: codeVerifier,\n            redirect_uri: redirectUri,\n            grant_type: 'authorization_code',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Obtain a new access token to user-based OAuth 2.0 auth from a refresh token.\n     *\n     * ```ts\n     * const requestClient = new TwitterApi({ clientId: 'yourClientId' });\n     *\n     * const { client: userClient } = await requestClient.refreshOAuth2Token('refreshToken');\n     * // {userClient} is a valid {TwitterApi} object you can use for future requests\n     * ```\n     */\n    async refreshOAuth2Token(refreshToken) {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        const accessTokenResult = await this.post('https://api.x.com/2/oauth2/token', {\n            refresh_token: refreshToken,\n            grant_type: 'refresh_token',\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n        });\n        return this.parseOAuth2AccessTokenResult(accessTokenResult);\n    }\n    /**\n     * Revoke a single user-based OAuth 2.0 token.\n     *\n     * You must specify its source, access token (directly after login)\n     * or refresh token (if you've called `.refreshOAuth2Token` before).\n     */\n    async revokeOAuth2Token(token, tokenType = 'access_token') {\n        if (!this._requestMaker.clientId) {\n            throw new Error('Twitter API instance is not initialized with client ID. ' +\n                'Please build an instance with: new TwitterApi({ clientId: \\'<yourClientId>\\' })');\n        }\n        return await this.post('https://api.x.com/2/oauth2/revoke', {\n            client_id: this._requestMaker.clientId,\n            client_secret: this._requestMaker.clientSecret,\n            token,\n            token_type_hint: tokenType,\n        });\n    }\n    parseOAuth2AccessTokenResult(result) {\n        const client = new ___WEBPACK_IMPORTED_MODULE_0__[\"default\"](result.access_token, this._requestMaker.clientSettings);\n        const scope = result.scope.split(' ').filter(e => e);\n        return {\n            client,\n            expiresIn: result.expires_in,\n            accessToken: result.access_token,\n            scope,\n            refreshToken: result.refresh_token,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readonly.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readwrite.js":
/*!******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/client/readwrite.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiReadWrite)\n/* harmony export */ });\n/* harmony import */ var _v1_client_v1_write__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../v1/client.v1.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js\");\n/* harmony import */ var _v2_client_v2_write__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../v2/client.v2.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js\");\n/* harmony import */ var _readonly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readonly */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readonly.js\");\n\n\n\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends _readonly__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new _v1_client_v1_write__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new _v2_client_v2_write__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n    }\n    /**\n     * Get a client with read only rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50L3JlYWR3cml0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQ0E7QUFDZDtBQUM1QztBQUNBO0FBQ0E7QUFDZSxrQ0FBa0MsaURBQWtCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDJEQUFxQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwyREFBcUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vY2xpZW50L3JlYWR3cml0ZS5qcz8yNjNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUd2l0dGVyQXBpdjFSZWFkV3JpdGUgZnJvbSAnLi4vdjEvY2xpZW50LnYxLndyaXRlJztcbmltcG9ydCBUd2l0dGVyQXBpdjJSZWFkV3JpdGUgZnJvbSAnLi4vdjIvY2xpZW50LnYyLndyaXRlJztcbmltcG9ydCBUd2l0dGVyQXBpUmVhZE9ubHkgZnJvbSAnLi9yZWFkb25seSc7XG4vKipcbiAqIFR3aXR0ZXIgdjEuMSBhbmQgdjIgQVBJIGNsaWVudC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHdpdHRlckFwaVJlYWRXcml0ZSBleHRlbmRzIFR3aXR0ZXJBcGlSZWFkT25seSB7XG4gICAgLyogRGlyZWN0IGFjY2VzcyB0byBzdWJjbGllbnRzICovXG4gICAgZ2V0IHYxKCkge1xuICAgICAgICBpZiAodGhpcy5fdjEpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdjE7XG4gICAgICAgIHJldHVybiB0aGlzLl92MSA9IG5ldyBUd2l0dGVyQXBpdjFSZWFkV3JpdGUodGhpcyk7XG4gICAgfVxuICAgIGdldCB2MigpIHtcbiAgICAgICAgaWYgKHRoaXMuX3YyKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3YyO1xuICAgICAgICByZXR1cm4gdGhpcy5fdjIgPSBuZXcgVHdpdHRlckFwaXYyUmVhZFdyaXRlKHRoaXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjbGllbnQgd2l0aCByZWFkIG9ubHkgcmlnaHRzLlxuICAgICAqL1xuICAgIGdldCByZWFkT25seSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/client/readwrite.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js":
/*!*********************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/globals.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_ADS_PREFIX: () => (/* binding */ API_ADS_PREFIX),\n/* harmony export */   API_ADS_SANDBOX_PREFIX: () => (/* binding */ API_ADS_SANDBOX_PREFIX),\n/* harmony export */   API_V1_1_PREFIX: () => (/* binding */ API_V1_1_PREFIX),\n/* harmony export */   API_V1_1_STREAM_PREFIX: () => (/* binding */ API_V1_1_STREAM_PREFIX),\n/* harmony export */   API_V1_1_UPLOAD_PREFIX: () => (/* binding */ API_V1_1_UPLOAD_PREFIX),\n/* harmony export */   API_V2_LABS_PREFIX: () => (/* binding */ API_V2_LABS_PREFIX),\n/* harmony export */   API_V2_PREFIX: () => (/* binding */ API_V2_PREFIX)\n/* harmony export */ });\nconst API_V2_PREFIX = 'https://api.x.com/2/';\nconst API_V2_LABS_PREFIX = 'https://api.x.com/labs/2/';\nconst API_V1_1_PREFIX = 'https://api.x.com/1.1/';\nconst API_V1_1_UPLOAD_PREFIX = 'https://upload.x.com/1.1/';\nconst API_V1_1_STREAM_PREFIX = 'https://stream.x.com/1.1/';\nconst API_ADS_PREFIX = 'https://ads-api.x.com/12/';\nconst API_ADS_SANDBOX_PREFIX = 'https://ads-api-sandbox.twitter.com/12/';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vZ2xvYmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQU87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL2dsb2JhbHMuanM/N2NkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQVBJX1YyX1BSRUZJWCA9ICdodHRwczovL2FwaS54LmNvbS8yLyc7XG5leHBvcnQgY29uc3QgQVBJX1YyX0xBQlNfUFJFRklYID0gJ2h0dHBzOi8vYXBpLnguY29tL2xhYnMvMi8nO1xuZXhwb3J0IGNvbnN0IEFQSV9WMV8xX1BSRUZJWCA9ICdodHRwczovL2FwaS54LmNvbS8xLjEvJztcbmV4cG9ydCBjb25zdCBBUElfVjFfMV9VUExPQURfUFJFRklYID0gJ2h0dHBzOi8vdXBsb2FkLnguY29tLzEuMS8nO1xuZXhwb3J0IGNvbnN0IEFQSV9WMV8xX1NUUkVBTV9QUkVGSVggPSAnaHR0cHM6Ly9zdHJlYW0ueC5jb20vMS4xLyc7XG5leHBvcnQgY29uc3QgQVBJX0FEU19QUkVGSVggPSAnaHR0cHM6Ly9hZHMtYXBpLnguY29tLzEyLyc7XG5leHBvcnQgY29uc3QgQVBJX0FEU19TQU5EQk9YX1BSRUZJWCA9ICdodHRwczovL2Fkcy1hcGktc2FuZGJveC50d2l0dGVyLmNvbS8xMi8nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js":
/*!*********************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/helpers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrayWrap: () => (/* binding */ arrayWrap),\n/* harmony export */   hasMultipleItems: () => (/* binding */ hasMultipleItems),\n/* harmony export */   isTweetStreamV2ErrorPayload: () => (/* binding */ isTweetStreamV2ErrorPayload),\n/* harmony export */   safeDeprecationWarning: () => (/* binding */ safeDeprecationWarning),\n/* harmony export */   sharedPromise: () => (/* binding */ sharedPromise),\n/* harmony export */   trimUndefinedProperties: () => (/* binding */ trimUndefinedProperties)\n/* harmony export */ });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/settings.js\");\n\nfunction sharedPromise(getter) {\n    const sharedPromise = {\n        value: undefined,\n        promise: getter().then(val => {\n            sharedPromise.value = val;\n            return val;\n        }),\n    };\n    return sharedPromise;\n}\nfunction arrayWrap(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [value];\n}\nfunction trimUndefinedProperties(object) {\n    // Delete undefined parameters\n    for (const parameter in object) {\n        if (object[parameter] === undefined)\n            delete object[parameter];\n    }\n}\nfunction isTweetStreamV2ErrorPayload(payload) {\n    // Is error only if 'errors' is present and 'data' does not exists\n    return typeof payload === 'object'\n        && 'errors' in payload\n        && !('data' in payload);\n}\nfunction hasMultipleItems(item) {\n    if (Array.isArray(item) && item.length > 1) {\n        return true;\n    }\n    return item.toString().includes(',');\n}\nconst deprecationWarningsCache = new Set();\nfunction safeDeprecationWarning(message) {\n    if (typeof console === 'undefined' || !console.warn || !_settings__WEBPACK_IMPORTED_MODULE_0__.TwitterApiV2Settings.deprecationWarnings) {\n        return;\n    }\n    const hash = `${message.instance}-${message.method}-${message.problem}`;\n    if (deprecationWarningsCache.has(hash)) {\n        return;\n    }\n    const formattedMsg = `[twitter-api-v2] Deprecation warning: In ${message.instance}.${message.method}() call` +\n        `, ${message.problem}.\\n${message.resolution}.`;\n    console.warn(formattedMsg);\n    console.warn('To disable this message, import variable TwitterApiV2Settings from twitter-api-v2 and set TwitterApiV2Settings.deprecationWarnings to false.');\n    deprecationWarningsCache.add(hash);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQzNDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0REFBNEQsMkRBQW9CO0FBQ2hGO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCLEdBQUcsZUFBZSxHQUFHLGdCQUFnQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsaUJBQWlCLEdBQUcsZUFBZTtBQUN4RyxhQUFhLGdCQUFnQixLQUFLLG1CQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vaGVscGVycy5qcz80MmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR3aXR0ZXJBcGlWMlNldHRpbmdzIH0gZnJvbSAnLi9zZXR0aW5ncyc7XG5leHBvcnQgZnVuY3Rpb24gc2hhcmVkUHJvbWlzZShnZXR0ZXIpIHtcbiAgICBjb25zdCBzaGFyZWRQcm9taXNlID0ge1xuICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgICBwcm9taXNlOiBnZXR0ZXIoKS50aGVuKHZhbCA9PiB7XG4gICAgICAgICAgICBzaGFyZWRQcm9taXNlLnZhbHVlID0gdmFsO1xuICAgICAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgICAgfSksXG4gICAgfTtcbiAgICByZXR1cm4gc2hhcmVkUHJvbWlzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhcnJheVdyYXAodmFsdWUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gW3ZhbHVlXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0cmltVW5kZWZpbmVkUHJvcGVydGllcyhvYmplY3QpIHtcbiAgICAvLyBEZWxldGUgdW5kZWZpbmVkIHBhcmFtZXRlcnNcbiAgICBmb3IgKGNvbnN0IHBhcmFtZXRlciBpbiBvYmplY3QpIHtcbiAgICAgICAgaWYgKG9iamVjdFtwYXJhbWV0ZXJdID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBkZWxldGUgb2JqZWN0W3BhcmFtZXRlcl07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVHdlZXRTdHJlYW1WMkVycm9yUGF5bG9hZChwYXlsb2FkKSB7XG4gICAgLy8gSXMgZXJyb3Igb25seSBpZiAnZXJyb3JzJyBpcyBwcmVzZW50IGFuZCAnZGF0YScgZG9lcyBub3QgZXhpc3RzXG4gICAgcmV0dXJuIHR5cGVvZiBwYXlsb2FkID09PSAnb2JqZWN0J1xuICAgICAgICAmJiAnZXJyb3JzJyBpbiBwYXlsb2FkXG4gICAgICAgICYmICEoJ2RhdGEnIGluIHBheWxvYWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc011bHRpcGxlSXRlbXMoaXRlbSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pICYmIGl0ZW0ubGVuZ3RoID4gMSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW0udG9TdHJpbmcoKS5pbmNsdWRlcygnLCcpO1xufVxuY29uc3QgZGVwcmVjYXRpb25XYXJuaW5nc0NhY2hlID0gbmV3IFNldCgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVEZXByZWNhdGlvbldhcm5pbmcobWVzc2FnZSkge1xuICAgIGlmICh0eXBlb2YgY29uc29sZSA9PT0gJ3VuZGVmaW5lZCcgfHwgIWNvbnNvbGUud2FybiB8fCAhVHdpdHRlckFwaVYyU2V0dGluZ3MuZGVwcmVjYXRpb25XYXJuaW5ncykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGhhc2ggPSBgJHttZXNzYWdlLmluc3RhbmNlfS0ke21lc3NhZ2UubWV0aG9kfS0ke21lc3NhZ2UucHJvYmxlbX1gO1xuICAgIGlmIChkZXByZWNhdGlvbldhcm5pbmdzQ2FjaGUuaGFzKGhhc2gpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZm9ybWF0dGVkTXNnID0gYFt0d2l0dGVyLWFwaS12Ml0gRGVwcmVjYXRpb24gd2FybmluZzogSW4gJHttZXNzYWdlLmluc3RhbmNlfS4ke21lc3NhZ2UubWV0aG9kfSgpIGNhbGxgICtcbiAgICAgICAgYCwgJHttZXNzYWdlLnByb2JsZW19LlxcbiR7bWVzc2FnZS5yZXNvbHV0aW9ufS5gO1xuICAgIGNvbnNvbGUud2Fybihmb3JtYXR0ZWRNc2cpO1xuICAgIGNvbnNvbGUud2FybignVG8gZGlzYWJsZSB0aGlzIG1lc3NhZ2UsIGltcG9ydCB2YXJpYWJsZSBUd2l0dGVyQXBpVjJTZXR0aW5ncyBmcm9tIHR3aXR0ZXItYXBpLXYyIGFuZCBzZXQgVHdpdHRlckFwaVYyU2V0dGluZ3MuZGVwcmVjYXRpb25XYXJuaW5ncyB0byBmYWxzZS4nKTtcbiAgICBkZXByZWNhdGlvbldhcm5pbmdzQ2FjaGUuYWRkKGhhc2gpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiPartialResponseError: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.ApiPartialResponseError),\n/* harmony export */   ApiRequestError: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.ApiRequestError),\n/* harmony export */   ApiResponseError: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.ApiResponseError),\n/* harmony export */   DmEventsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.DmEventsV1Paginator),\n/* harmony export */   EApiV1ErrorCode: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.EApiV1ErrorCode),\n/* harmony export */   EApiV2ErrorCode: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.EApiV2ErrorCode),\n/* harmony export */   EDirectMessageEventTypeV1: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.EDirectMessageEventTypeV1),\n/* harmony export */   ETwitterApiError: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.ETwitterApiError),\n/* harmony export */   ETwitterStreamEvent: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.ETwitterStreamEvent),\n/* harmony export */   EUploadMimeType: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.EUploadMimeType),\n/* harmony export */   FriendshipsIncomingV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.FriendshipsIncomingV1Paginator),\n/* harmony export */   FriendshipsOutgoingV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.FriendshipsOutgoingV1Paginator),\n/* harmony export */   HomeTimelineV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.HomeTimelineV1Paginator),\n/* harmony export */   ListMembersV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListMembersV1Paginator),\n/* harmony export */   ListMembershipsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListMembershipsV1Paginator),\n/* harmony export */   ListOwnershipsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListOwnershipsV1Paginator),\n/* harmony export */   ListSubscribersV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListSubscribersV1Paginator),\n/* harmony export */   ListSubscriptionsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListSubscriptionsV1Paginator),\n/* harmony export */   ListTimelineV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.ListTimelineV1Paginator),\n/* harmony export */   MentionTimelineV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.MentionTimelineV1Paginator),\n/* harmony export */   MuteUserIdsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.MuteUserIdsV1Paginator),\n/* harmony export */   MuteUserListV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.MuteUserListV1Paginator),\n/* harmony export */   PreviousableTwitterPaginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.PreviousableTwitterPaginator),\n/* harmony export */   QuotedTweetsTimelineV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.QuotedTweetsTimelineV2Paginator),\n/* harmony export */   TweetBookmarksTimelineV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetBookmarksTimelineV2Paginator),\n/* harmony export */   TweetHomeTimelineV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetHomeTimelineV2Paginator),\n/* harmony export */   TweetLikingUsersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetLikingUsersV2Paginator),\n/* harmony export */   TweetRetweetersUsersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetRetweetersUsersV2Paginator),\n/* harmony export */   TweetSearchAllV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetSearchAllV2Paginator),\n/* harmony export */   TweetSearchRecentV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetSearchRecentV2Paginator),\n/* harmony export */   TweetStream: () => (/* reexport safe */ _stream_TweetStream__WEBPACK_IMPORTED_MODULE_7__.TweetStream),\n/* harmony export */   TweetUserMentionTimelineV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetUserMentionTimelineV2Paginator),\n/* harmony export */   TweetUserTimelineV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetUserTimelineV2Paginator),\n/* harmony export */   TweetV2ListTweetsPaginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetV2ListTweetsPaginator),\n/* harmony export */   TweetV2UserLikedTweetsPaginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TweetV2UserLikedTweetsPaginator),\n/* harmony export */   TwitterApi: () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__.TwitterApi),\n/* harmony export */   TwitterApiPluginResponseOverride: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.TwitterApiPluginResponseOverride),\n/* harmony export */   TwitterApiReadOnly: () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__.TwitterApiReadOnly),\n/* harmony export */   TwitterApiReadWrite: () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__.TwitterApiReadWrite),\n/* harmony export */   TwitterApiV2Settings: () => (/* reexport safe */ _settings__WEBPACK_IMPORTED_MODULE_8__.TwitterApiV2Settings),\n/* harmony export */   TwitterApiv1: () => (/* reexport safe */ _v1_client_v1__WEBPACK_IMPORTED_MODULE_1__.TwitterApiv1),\n/* harmony export */   TwitterApiv2: () => (/* reexport safe */ _v2_client_v2__WEBPACK_IMPORTED_MODULE_2__.TwitterApiv2),\n/* harmony export */   TwitterApiv2Labs: () => (/* reexport safe */ _v2_labs_client_v2_labs__WEBPACK_IMPORTED_MODULE_4__.TwitterApiv2Labs),\n/* harmony export */   TwitterPaginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.TwitterPaginator),\n/* harmony export */   TwitterV2IncludesHelper: () => (/* reexport safe */ _v2_includes_v2_helper__WEBPACK_IMPORTED_MODULE_3__.TwitterV2IncludesHelper),\n/* harmony export */   UserBlockingUsersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserBlockingUsersV2Paginator),\n/* harmony export */   UserFavoritesV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFavoritesV1Paginator),\n/* harmony export */   UserFollowerIdsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFollowerIdsV1Paginator),\n/* harmony export */   UserFollowerListV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFollowerListV1Paginator),\n/* harmony export */   UserFollowersIdsV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFollowersIdsV1Paginator),\n/* harmony export */   UserFollowersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFollowersV2Paginator),\n/* harmony export */   UserFollowingV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFollowingV2Paginator),\n/* harmony export */   UserFriendListV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserFriendListV1Paginator),\n/* harmony export */   UserListFollowedV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserListFollowedV2Paginator),\n/* harmony export */   UserListFollowersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserListFollowersV2Paginator),\n/* harmony export */   UserListMembersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserListMembersV2Paginator),\n/* harmony export */   UserListMembershipsV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserListMembershipsV2Paginator),\n/* harmony export */   UserMutingUsersV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserMutingUsersV2Paginator),\n/* harmony export */   UserOwnedListsV2Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserOwnedListsV2Paginator),\n/* harmony export */   UserSearchV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserSearchV1Paginator),\n/* harmony export */   UserTimelineV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.UserTimelineV1Paginator),\n/* harmony export */   WelcomeDmV1Paginator: () => (/* reexport safe */ _paginators__WEBPACK_IMPORTED_MODULE_6__.WelcomeDmV1Paginator),\n/* harmony export */   \"default\": () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client/index.js\");\n/* harmony import */ var _v1_client_v1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v1/client.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js\");\n/* harmony import */ var _v2_client_v2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v2/client.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.js\");\n/* harmony import */ var _v2_includes_v2_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v2/includes.v2.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js\");\n/* harmony import */ var _v2_labs_client_v2_labs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./v2-labs/client.v2.labs */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var _paginators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./paginators */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/index.js\");\n/* harmony import */ var _stream_TweetStream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stream/TweetStream */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./settings */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/settings.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ3JCO0FBQ007QUFDQTtBQUNTO0FBQ0M7QUFDakI7QUFDSztBQUNRO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL2luZGV4LmpzP2YzMmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBkZWZhdWx0IH0gZnJvbSAnLi9jbGllbnQnO1xuZXhwb3J0ICogZnJvbSAnLi9jbGllbnQnO1xuZXhwb3J0ICogZnJvbSAnLi92MS9jbGllbnQudjEnO1xuZXhwb3J0ICogZnJvbSAnLi92Mi9jbGllbnQudjInO1xuZXhwb3J0ICogZnJvbSAnLi92Mi9pbmNsdWRlcy52Mi5oZWxwZXInO1xuZXhwb3J0ICogZnJvbSAnLi92Mi1sYWJzL2NsaWVudC52Mi5sYWJzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9wYWdpbmF0b3JzJztcbmV4cG9ydCAqIGZyb20gJy4vc3RyZWFtL1R3ZWV0U3RyZWFtJztcbmV4cG9ydCAqIGZyb20gJy4vc2V0dGluZ3MnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PreviousableTwitterPaginator: () => (/* binding */ PreviousableTwitterPaginator),\n/* harmony export */   TwitterPaginator: () => (/* binding */ TwitterPaginator),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/** TwitterPaginator: able to get consume data from initial request, then fetch next data sequentially. */\nclass TwitterPaginator {\n    // noinspection TypeScriptAbstractClassConstructorCanBeMadeProtected\n    constructor({ realData, rateLimit, instance, queryParams, sharedParams }) {\n        this._maxResultsWhenFetchLast = 100;\n        this._realData = realData;\n        this._rateLimit = rateLimit;\n        this._instance = instance;\n        this._queryParams = queryParams;\n        this._sharedParams = sharedParams;\n    }\n    get _isRateLimitOk() {\n        if (!this._rateLimit) {\n            return true;\n        }\n        const resetDate = this._rateLimit.reset * 1000;\n        if (resetDate < Date.now()) {\n            return true;\n        }\n        return this._rateLimit.remaining > 0;\n    }\n    makeRequest(queryParams) {\n        return this._instance.get(this.getEndpoint(), queryParams, { fullResponse: true, params: this._sharedParams });\n    }\n    makeNewInstanceFromResult(result, queryParams) {\n        // Construct a subclass\n        return new this.constructor({\n            realData: result.data,\n            rateLimit: result.rateLimit,\n            instance: this._instance,\n            queryParams,\n            sharedParams: this._sharedParams,\n        });\n    }\n    getEndpoint() {\n        return this._endpoint;\n    }\n    injectQueryParams(maxResults) {\n        return {\n            ...(maxResults ? { max_results: maxResults } : {}),\n            ...this._queryParams,\n        };\n    }\n    /* ---------------------- */\n    /* Real paginator methods */\n    /* ---------------------- */\n    /**\n     * Next page.\n     */\n    async next(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Next page, but store it in current instance.\n     */\n    async fetchNext(maxResults) {\n        const queryParams = this.getNextQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        // Await in case of async sub-methods\n        await this.refreshInstanceFromResult(result, true);\n        return this;\n    }\n    /**\n     * Fetch up to {count} items after current page,\n     * as long as rate limit is not hit and Twitter has some results\n     */\n    async fetchLast(count = Infinity) {\n        let queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        let resultCount = 0;\n        // Break at rate limit limit\n        while (resultCount < count && this._isRateLimitOk) {\n            const response = await this.makeRequest(queryParams);\n            await this.refreshInstanceFromResult(response, true);\n            resultCount += this.getPageLengthFromRequest(response);\n            if (this.isFetchLastOver(response)) {\n                break;\n            }\n            queryParams = this.getNextQueryParams(this._maxResultsWhenFetchLast);\n        }\n        return this;\n    }\n    get rateLimit() {\n        var _a;\n        return { ...(_a = this._rateLimit) !== null && _a !== void 0 ? _a : {} };\n    }\n    /** Get raw data returned by Twitter API. */\n    get data() {\n        return this._realData;\n    }\n    get done() {\n        return !this.canFetchNextPage(this._realData);\n    }\n    /**\n     * Iterate over currently fetched items.\n     */\n    *[Symbol.iterator]() {\n        yield* this.getItemArray();\n    }\n    /**\n     * Iterate over items \"indefinitely\" (until rate limit is hit / they're no more items available)\n     * This will **mutate the current instance** and fill data, metas, etc. inside this instance.\n     *\n     * If you need to handle concurrent requests, or you need to rely on immutability, please use `.fetchAndIterate()` instead.\n     */\n    async *[Symbol.asyncIterator]() {\n        yield* this.getItemArray();\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            const items = next.getItemArray();\n            yield* items;\n            paginator = next;\n        }\n    }\n    /**\n     * Iterate over items \"indefinitely\" without modifying the current instance (until rate limit is hit / they're no more items available)\n     *\n     * This will **NOT** mutate the current instance, meaning that current instance will not inherit from `includes` and `meta` (v2 API only).\n     * Use `Symbol.asyncIterator` (`for-await of`) to directly access items with current instance mutation.\n     */\n    async *fetchAndIterate() {\n        for (const item of this.getItemArray()) {\n            yield [item, this];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let paginator = this;\n        let canFetchNextPage = this.canFetchNextPage(this._realData);\n        while (canFetchNextPage && this._isRateLimitOk && paginator.getItemArray().length > 0) {\n            const next = await paginator.next(this._maxResultsWhenFetchLast);\n            // Store data into current instance [needed to access includes and meta]\n            this.refreshInstanceFromResult({ data: next._realData, headers: {}, rateLimit: next._rateLimit }, true);\n            canFetchNextPage = this.canFetchNextPage(next._realData);\n            for (const item of next.getItemArray()) {\n                yield [item, next];\n            }\n            this._rateLimit = next._rateLimit;\n            paginator = next;\n        }\n    }\n}\n/** PreviousableTwitterPaginator: a TwitterPaginator able to get consume data from both side, next and previous. */\nclass PreviousableTwitterPaginator extends TwitterPaginator {\n    /**\n     * Previous page (new tweets)\n     */\n    async previous(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        return this.makeNewInstanceFromResult(result, queryParams);\n    }\n    /**\n     * Previous page, but in current instance.\n     */\n    async fetchPrevious(maxResults) {\n        const queryParams = this.getPreviousQueryParams(maxResults);\n        const result = await this.makeRequest(queryParams);\n        await this.refreshInstanceFromResult(result, false);\n        return this;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterPaginator);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DmEventsV1Paginator: () => (/* binding */ DmEventsV1Paginator),\n/* harmony export */   WelcomeDmV1Paginator: () => (/* binding */ WelcomeDmV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\nclass DmEventsV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/events/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.events.push(...result.events);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.events.length;\n    }\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        return this._realData.events;\n    }\n}\nclass WelcomeDmV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'direct_messages/welcome_messages/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.welcome_messages.push(...result.welcome_messages);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.welcome_messages.length;\n    }\n    getItemArray() {\n        return this.welcomeMessages;\n    }\n    get welcomeMessages() {\n        return this._realData.welcome_messages;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9kbS5wYWdpbmF0b3IudjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFEO0FBQzlDLGtDQUFrQyw4REFBbUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtQ0FBbUMsOERBQW1CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9wYWdpbmF0b3JzL2RtLnBhZ2luYXRvci52MS5qcz9hZjJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEN1cnNvcmVkVjFQYWdpbmF0b3IgfSBmcm9tICcuL3BhZ2luYXRvci52MSc7XG5leHBvcnQgY2xhc3MgRG1FdmVudHNWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdkaXJlY3RfbWVzc2FnZXMvZXZlbnRzL2xpc3QuanNvbic7XG4gICAgfVxuICAgIHJlZnJlc2hJbnN0YW5jZUZyb21SZXN1bHQocmVzcG9uc2UsIGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEuZXZlbnRzLnB1c2goLi4ucmVzdWx0LmV2ZW50cyk7XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS5uZXh0X2N1cnNvciA9IHJlc3VsdC5uZXh0X2N1cnNvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRQYWdlTGVuZ3RoRnJvbVJlcXVlc3QocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YS5ldmVudHMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXRJdGVtQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXZlbnRzIHJldHVybmVkIGJ5IHBhZ2luYXRvci5cbiAgICAgKi9cbiAgICBnZXQgZXZlbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhbERhdGEuZXZlbnRzO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBXZWxjb21lRG1WMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdkaXJlY3RfbWVzc2FnZXMvd2VsY29tZV9tZXNzYWdlcy9saXN0Lmpzb24nO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLndlbGNvbWVfbWVzc2FnZXMucHVzaCguLi5yZXN1bHQud2VsY29tZV9tZXNzYWdlcyk7XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS5uZXh0X2N1cnNvciA9IHJlc3VsdC5uZXh0X2N1cnNvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRQYWdlTGVuZ3RoRnJvbVJlcXVlc3QocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YS53ZWxjb21lX21lc3NhZ2VzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy53ZWxjb21lTWVzc2FnZXM7XG4gICAgfVxuICAgIGdldCB3ZWxjb21lTWVzc2FnZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFsRGF0YS53ZWxjb21lX21lc3NhZ2VzO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v2.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v2.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConversationDMTimelineV2Paginator: () => (/* binding */ ConversationDMTimelineV2Paginator),\n/* harmony export */   DMTimelineV2Paginator: () => (/* binding */ DMTimelineV2Paginator),\n/* harmony export */   FullDMTimelineV2Paginator: () => (/* binding */ FullDMTimelineV2Paginator),\n/* harmony export */   OneToOneDMTimelineV2Paginator: () => (/* binding */ OneToOneDMTimelineV2Paginator)\n/* harmony export */ });\n/* harmony import */ var _v2_paginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.paginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js\");\n\nclass DMTimelineV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TimelineV2Paginator {\n    getItemArray() {\n        return this.events;\n    }\n    /**\n     * Events returned by paginator.\n     */\n    get events() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass FullDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_events';\n    }\n}\nclass OneToOneDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/with/:participant_id/dm_events';\n    }\n}\nclass ConversationDMTimelineV2Paginator extends DMTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'dm_conversations/:dm_conversation_id/dm_events';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9kbS5wYWdpbmF0b3IudjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUQ7QUFDOUMsb0NBQW9DLDhEQUFtQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9wYWdpbmF0b3JzL2RtLnBhZ2luYXRvci52Mi5qcz9lOWMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbWVsaW5lVjJQYWdpbmF0b3IgfSBmcm9tICcuL3YyLnBhZ2luYXRvcic7XG5leHBvcnQgY2xhc3MgRE1UaW1lbGluZVYyUGFnaW5hdG9yIGV4dGVuZHMgVGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ldmVudHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV2ZW50cyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IGV2ZW50cygpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fcmVhbERhdGEuZGF0YSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgfVxuICAgIGdldCBtZXRhKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIubWV0YTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRnVsbERNVGltZWxpbmVWMlBhZ2luYXRvciBleHRlbmRzIERNVGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ2RtX2V2ZW50cyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIE9uZVRvT25lRE1UaW1lbGluZVYyUGFnaW5hdG9yIGV4dGVuZHMgRE1UaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnZG1fY29udmVyc2F0aW9ucy93aXRoLzpwYXJ0aWNpcGFudF9pZC9kbV9ldmVudHMnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb252ZXJzYXRpb25ETVRpbWVsaW5lVjJQYWdpbmF0b3IgZXh0ZW5kcyBETVRpbWVsaW5lVjJQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdkbV9jb252ZXJzYXRpb25zLzpkbV9jb252ZXJzYXRpb25faWQvZG1fZXZlbnRzJztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserFollowerIdsV1Paginator: () => (/* binding */ UserFollowerIdsV1Paginator),\n/* harmony export */   UserFollowerListV1Paginator: () => (/* binding */ UserFollowerListV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\nclass UserFollowerListV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass UserFollowerIdsV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'followers/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9mb2xsb3dlcnMucGFnaW5hdG9yLnYxLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUM5QywwQ0FBMEMsOERBQW1CO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seUNBQXlDLDhEQUFtQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9wYWdpbmF0b3JzL2ZvbGxvd2Vycy5wYWdpbmF0b3IudjEuanM/ZDEyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDdXJzb3JlZFYxUGFnaW5hdG9yIH0gZnJvbSAnLi9wYWdpbmF0b3IudjEnO1xuZXhwb3J0IGNsYXNzIFVzZXJGb2xsb3dlckxpc3RWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdmb2xsb3dlcnMvbGlzdC5qc29uJztcbiAgICB9XG4gICAgcmVmcmVzaEluc3RhbmNlRnJvbVJlc3VsdChyZXNwb25zZSwgaXNOZXh0UGFnZSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICB0aGlzLl9yYXRlTGltaXQgPSByZXNwb25zZS5yYXRlTGltaXQ7XG4gICAgICAgIGlmIChpc05leHRQYWdlKSB7XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS51c2Vycy5wdXNoKC4uLnJlc3VsdC51c2Vycyk7XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS5uZXh0X2N1cnNvciA9IHJlc3VsdC5uZXh0X2N1cnNvcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRQYWdlTGVuZ3RoRnJvbVJlcXVlc3QocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YS51c2Vycy5sZW5ndGg7XG4gICAgfVxuICAgIGdldEl0ZW1BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXNlcnM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZXJzIHJldHVybmVkIGJ5IHBhZ2luYXRvci5cbiAgICAgKi9cbiAgICBnZXQgdXNlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFsRGF0YS51c2VycztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVXNlckZvbGxvd2VySWRzVjFQYWdpbmF0b3IgZXh0ZW5kcyBDdXJzb3JlZFYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnZm9sbG93ZXJzL2lkcy5qc29uJztcbiAgICAgICAgdGhpcy5fbWF4UmVzdWx0c1doZW5GZXRjaExhc3QgPSA1MDAwO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmlkcy5wdXNoKC4uLnJlc3VsdC5pZHMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEuaWRzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZXJzIElEcyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IGlkcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWxEYXRhLmlkcztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserFollowersIdsV1Paginator: () => (/* binding */ UserFollowersIdsV1Paginator),\n/* harmony export */   UserFriendListV1Paginator: () => (/* binding */ UserFriendListV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\nclass UserFriendListV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass UserFollowersIdsV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friends/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9mcmllbmRzLnBhZ2luYXRvci52MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDOUMsd0NBQXdDLDhEQUFtQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQyw4REFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9mcmllbmRzLnBhZ2luYXRvci52MS5qcz8xNDQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEN1cnNvcmVkVjFQYWdpbmF0b3IgfSBmcm9tICcuL3BhZ2luYXRvci52MSc7XG5leHBvcnQgY2xhc3MgVXNlckZyaWVuZExpc3RWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdmcmllbmRzL2xpc3QuanNvbic7XG4gICAgfVxuICAgIHJlZnJlc2hJbnN0YW5jZUZyb21SZXN1bHQocmVzcG9uc2UsIGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEudXNlcnMucHVzaCguLi5yZXN1bHQudXNlcnMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEudXNlcnMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXRJdGVtQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXJzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VycyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IHVzZXJzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhbERhdGEudXNlcnM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJGb2xsb3dlcnNJZHNWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdmcmllbmRzL2lkcy5qc29uJztcbiAgICAgICAgdGhpcy5fbWF4UmVzdWx0c1doZW5GZXRjaExhc3QgPSA1MDAwO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmlkcy5wdXNoKC4uLnJlc3VsdC5pZHMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEuaWRzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZXJzIElEcyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IGlkcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWxEYXRhLmlkcztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DmEventsV1Paginator: () => (/* reexport safe */ _dm_paginator_v1__WEBPACK_IMPORTED_MODULE_2__.DmEventsV1Paginator),\n/* harmony export */   FriendshipsIncomingV1Paginator: () => (/* reexport safe */ _user_paginator_v1__WEBPACK_IMPORTED_MODULE_5__.FriendshipsIncomingV1Paginator),\n/* harmony export */   FriendshipsOutgoingV1Paginator: () => (/* reexport safe */ _user_paginator_v1__WEBPACK_IMPORTED_MODULE_5__.FriendshipsOutgoingV1Paginator),\n/* harmony export */   HomeTimelineV1Paginator: () => (/* reexport safe */ _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.HomeTimelineV1Paginator),\n/* harmony export */   ListMembersV1Paginator: () => (/* reexport safe */ _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.ListMembersV1Paginator),\n/* harmony export */   ListMembershipsV1Paginator: () => (/* reexport safe */ _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.ListMembershipsV1Paginator),\n/* harmony export */   ListOwnershipsV1Paginator: () => (/* reexport safe */ _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.ListOwnershipsV1Paginator),\n/* harmony export */   ListSubscribersV1Paginator: () => (/* reexport safe */ _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.ListSubscribersV1Paginator),\n/* harmony export */   ListSubscriptionsV1Paginator: () => (/* reexport safe */ _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.ListSubscriptionsV1Paginator),\n/* harmony export */   ListTimelineV1Paginator: () => (/* reexport safe */ _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.ListTimelineV1Paginator),\n/* harmony export */   MentionTimelineV1Paginator: () => (/* reexport safe */ _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.MentionTimelineV1Paginator),\n/* harmony export */   MuteUserIdsV1Paginator: () => (/* reexport safe */ _mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_3__.MuteUserIdsV1Paginator),\n/* harmony export */   MuteUserListV1Paginator: () => (/* reexport safe */ _mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_3__.MuteUserListV1Paginator),\n/* harmony export */   PreviousableTwitterPaginator: () => (/* reexport safe */ _TwitterPaginator__WEBPACK_IMPORTED_MODULE_1__.PreviousableTwitterPaginator),\n/* harmony export */   QuotedTweetsTimelineV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.QuotedTweetsTimelineV2Paginator),\n/* harmony export */   TweetBookmarksTimelineV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetBookmarksTimelineV2Paginator),\n/* harmony export */   TweetHomeTimelineV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetHomeTimelineV2Paginator),\n/* harmony export */   TweetLikingUsersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.TweetLikingUsersV2Paginator),\n/* harmony export */   TweetRetweetersUsersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.TweetRetweetersUsersV2Paginator),\n/* harmony export */   TweetSearchAllV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetSearchAllV2Paginator),\n/* harmony export */   TweetSearchRecentV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetSearchRecentV2Paginator),\n/* harmony export */   TweetUserMentionTimelineV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetUserMentionTimelineV2Paginator),\n/* harmony export */   TweetUserTimelineV2Paginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetUserTimelineV2Paginator),\n/* harmony export */   TweetV2ListTweetsPaginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetV2ListTweetsPaginator),\n/* harmony export */   TweetV2UserLikedTweetsPaginator: () => (/* reexport safe */ _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__.TweetV2UserLikedTweetsPaginator),\n/* harmony export */   TwitterPaginator: () => (/* reexport safe */ _TwitterPaginator__WEBPACK_IMPORTED_MODULE_1__.TwitterPaginator),\n/* harmony export */   UserBlockingUsersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserBlockingUsersV2Paginator),\n/* harmony export */   UserFavoritesV1Paginator: () => (/* reexport safe */ _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserFavoritesV1Paginator),\n/* harmony export */   UserFollowerIdsV1Paginator: () => (/* reexport safe */ _followers_paginator_v1__WEBPACK_IMPORTED_MODULE_10__.UserFollowerIdsV1Paginator),\n/* harmony export */   UserFollowerListV1Paginator: () => (/* reexport safe */ _followers_paginator_v1__WEBPACK_IMPORTED_MODULE_10__.UserFollowerListV1Paginator),\n/* harmony export */   UserFollowersIdsV1Paginator: () => (/* reexport safe */ _friends_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.UserFollowersIdsV1Paginator),\n/* harmony export */   UserFollowersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserFollowersV2Paginator),\n/* harmony export */   UserFollowingV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserFollowingV2Paginator),\n/* harmony export */   UserFriendListV1Paginator: () => (/* reexport safe */ _friends_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.UserFriendListV1Paginator),\n/* harmony export */   UserListFollowedV2Paginator: () => (/* reexport safe */ _list_paginator_v2__WEBPACK_IMPORTED_MODULE_8__.UserListFollowedV2Paginator),\n/* harmony export */   UserListFollowersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserListFollowersV2Paginator),\n/* harmony export */   UserListMembersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserListMembersV2Paginator),\n/* harmony export */   UserListMembershipsV2Paginator: () => (/* reexport safe */ _list_paginator_v2__WEBPACK_IMPORTED_MODULE_8__.UserListMembershipsV2Paginator),\n/* harmony export */   UserMutingUsersV2Paginator: () => (/* reexport safe */ _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.UserMutingUsersV2Paginator),\n/* harmony export */   UserOwnedListsV2Paginator: () => (/* reexport safe */ _list_paginator_v2__WEBPACK_IMPORTED_MODULE_8__.UserOwnedListsV2Paginator),\n/* harmony export */   UserSearchV1Paginator: () => (/* reexport safe */ _user_paginator_v1__WEBPACK_IMPORTED_MODULE_5__.UserSearchV1Paginator),\n/* harmony export */   UserTimelineV1Paginator: () => (/* reexport safe */ _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserTimelineV1Paginator),\n/* harmony export */   WelcomeDmV1Paginator: () => (/* reexport safe */ _dm_paginator_v1__WEBPACK_IMPORTED_MODULE_2__.WelcomeDmV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _tweet_paginator_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tweet.paginator.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v2.js\");\n/* harmony import */ var _TwitterPaginator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TwitterPaginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\");\n/* harmony import */ var _dm_paginator_v1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dm.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js\");\n/* harmony import */ var _mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mutes.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js\");\n/* harmony import */ var _tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tweet.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js\");\n/* harmony import */ var _user_paginator_v1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js\");\n/* harmony import */ var _user_paginator_v2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./user.paginator.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js\");\n/* harmony import */ var _list_paginator_v1__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./list.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js\");\n/* harmony import */ var _list_paginator_v2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./list.paginator.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v2.js\");\n/* harmony import */ var _friends_paginator_v1__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./friends.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js\");\n/* harmony import */ var _followers_paginator_v1__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./followers.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDRjtBQUNEO0FBQ0c7QUFDQTtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0c7QUFDRSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9pbmRleC5qcz9lMGE1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vdHdlZXQucGFnaW5hdG9yLnYyJztcbmV4cG9ydCAqIGZyb20gJy4vVHdpdHRlclBhZ2luYXRvcic7XG5leHBvcnQgKiBmcm9tICcuL2RtLnBhZ2luYXRvci52MSc7XG5leHBvcnQgKiBmcm9tICcuL211dGVzLnBhZ2luYXRvci52MSc7XG5leHBvcnQgKiBmcm9tICcuL3R3ZWV0LnBhZ2luYXRvci52MSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZXIucGFnaW5hdG9yLnYxJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlci5wYWdpbmF0b3IudjInO1xuZXhwb3J0ICogZnJvbSAnLi9saXN0LnBhZ2luYXRvci52MSc7XG5leHBvcnQgKiBmcm9tICcuL2xpc3QucGFnaW5hdG9yLnYyJztcbmV4cG9ydCAqIGZyb20gJy4vZnJpZW5kcy5wYWdpbmF0b3IudjEnO1xuZXhwb3J0ICogZnJvbSAnLi9mb2xsb3dlcnMucGFnaW5hdG9yLnYxJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListMembersV1Paginator: () => (/* binding */ ListMembersV1Paginator),\n/* harmony export */   ListMembershipsV1Paginator: () => (/* binding */ ListMembershipsV1Paginator),\n/* harmony export */   ListOwnershipsV1Paginator: () => (/* binding */ ListOwnershipsV1Paginator),\n/* harmony export */   ListSubscribersV1Paginator: () => (/* binding */ ListSubscribersV1Paginator),\n/* harmony export */   ListSubscriptionsV1Paginator: () => (/* binding */ ListSubscriptionsV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\nclass ListListsV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.lists.push(...result.lists);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.lists.length;\n    }\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        return this._realData.lists;\n    }\n}\nclass ListMembershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/memberships.json';\n    }\n}\nclass ListOwnershipsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/ownerships.json';\n    }\n}\nclass ListSubscriptionsV1Paginator extends ListListsV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscriptions.json';\n    }\n}\nclass ListUsersV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass ListMembersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/members.json';\n    }\n}\nclass ListSubscribersV1Paginator extends ListUsersV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/subscribers.json';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9saXN0LnBhZ2luYXRvci52MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUQ7QUFDckQsbUNBQW1DLDhEQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsOERBQW1CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9saXN0LnBhZ2luYXRvci52MS5qcz8wOTkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEN1cnNvcmVkVjFQYWdpbmF0b3IgfSBmcm9tICcuL3BhZ2luYXRvci52MSc7XG5jbGFzcyBMaXN0TGlzdHNWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIHJlZnJlc2hJbnN0YW5jZUZyb21SZXN1bHQocmVzcG9uc2UsIGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubGlzdHMucHVzaCguLi5yZXN1bHQubGlzdHMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEubGlzdHMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXRJdGVtQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3RzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0cyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IGxpc3RzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhbERhdGEubGlzdHM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExpc3RNZW1iZXJzaGlwc1YxUGFnaW5hdG9yIGV4dGVuZHMgTGlzdExpc3RzVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdsaXN0cy9tZW1iZXJzaGlwcy5qc29uJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTGlzdE93bmVyc2hpcHNWMVBhZ2luYXRvciBleHRlbmRzIExpc3RMaXN0c1YxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnbGlzdHMvb3duZXJzaGlwcy5qc29uJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTGlzdFN1YnNjcmlwdGlvbnNWMVBhZ2luYXRvciBleHRlbmRzIExpc3RMaXN0c1YxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnbGlzdHMvc3Vic2NyaXB0aW9ucy5qc29uJztcbiAgICB9XG59XG5jbGFzcyBMaXN0VXNlcnNWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIHJlZnJlc2hJbnN0YW5jZUZyb21SZXN1bHQocmVzcG9uc2UsIGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEudXNlcnMucHVzaCguLi5yZXN1bHQudXNlcnMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEudXNlcnMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXRJdGVtQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXJzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VycyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IHVzZXJzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhbERhdGEudXNlcnM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExpc3RNZW1iZXJzVjFQYWdpbmF0b3IgZXh0ZW5kcyBMaXN0VXNlcnNWMVBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ2xpc3RzL21lbWJlcnMuanNvbic7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExpc3RTdWJzY3JpYmVyc1YxUGFnaW5hdG9yIGV4dGVuZHMgTGlzdFVzZXJzVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdsaXN0cy9zdWJzY3JpYmVycy5qc29uJztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v2.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v2.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserListFollowedV2Paginator: () => (/* binding */ UserListFollowedV2Paginator),\n/* harmony export */   UserListMembershipsV2Paginator: () => (/* binding */ UserListMembershipsV2Paginator),\n/* harmony export */   UserOwnedListsV2Paginator: () => (/* binding */ UserOwnedListsV2Paginator)\n/* harmony export */ });\n/* harmony import */ var _v2_paginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.paginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js\");\n\nclass ListTimelineV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TimelineV2Paginator {\n    getItemArray() {\n        return this.lists;\n    }\n    /**\n     * Lists returned by paginator.\n     */\n    get lists() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserOwnedListsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/owned_lists';\n    }\n}\nclass UserListMembershipsV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/list_memberships';\n    }\n}\nclass UserListFollowedV2Paginator extends ListTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followed_lists';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9saXN0LnBhZ2luYXRvci52Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBQ3JELHNDQUFzQyw4REFBbUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9saXN0LnBhZ2luYXRvci52Mi5qcz85YjdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbWVsaW5lVjJQYWdpbmF0b3IgfSBmcm9tICcuL3YyLnBhZ2luYXRvcic7XG5jbGFzcyBMaXN0VGltZWxpbmVWMlBhZ2luYXRvciBleHRlbmRzIFRpbWVsaW5lVjJQYWdpbmF0b3Ige1xuICAgIGdldEl0ZW1BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RzIHJldHVybmVkIGJ5IHBhZ2luYXRvci5cbiAgICAgKi9cbiAgICBnZXQgbGlzdHMoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX3JlYWxEYXRhLmRhdGEpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgIH1cbiAgICBnZXQgbWV0YSgpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLm1ldGE7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJPd25lZExpc3RzVjJQYWdpbmF0b3IgZXh0ZW5kcyBMaXN0VGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ3VzZXJzLzppZC9vd25lZF9saXN0cyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJMaXN0TWVtYmVyc2hpcHNWMlBhZ2luYXRvciBleHRlbmRzIExpc3RUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndXNlcnMvOmlkL2xpc3RfbWVtYmVyc2hpcHMnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBVc2VyTGlzdEZvbGxvd2VkVjJQYWdpbmF0b3IgZXh0ZW5kcyBMaXN0VGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ3VzZXJzLzppZC9mb2xsb3dlZF9saXN0cyc7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MuteUserIdsV1Paginator: () => (/* binding */ MuteUserIdsV1Paginator),\n/* harmony export */   MuteUserListV1Paginator: () => (/* binding */ MuteUserListV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\nclass MuteUserListV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/list.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.users.push(...result.users);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.users.length;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData.users;\n    }\n}\nclass MuteUserIdsV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_0__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'mutes/users/ids.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9tdXRlcy5wYWdpbmF0b3IudjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFEO0FBQzlDLHNDQUFzQyw4REFBbUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQ0FBcUMsOERBQW1CO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3BhZ2luYXRvcnMvbXV0ZXMucGFnaW5hdG9yLnYxLmpzPzM0MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3Vyc29yZWRWMVBhZ2luYXRvciB9IGZyb20gJy4vcGFnaW5hdG9yLnYxJztcbmV4cG9ydCBjbGFzcyBNdXRlVXNlckxpc3RWMVBhZ2luYXRvciBleHRlbmRzIEN1cnNvcmVkVjFQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdtdXRlcy91c2Vycy9saXN0Lmpzb24nO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLnVzZXJzLnB1c2goLi4ucmVzdWx0LnVzZXJzKTtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLm5leHRfY3Vyc29yID0gcmVzdWx0Lm5leHRfY3Vyc29yO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFBhZ2VMZW5ndGhGcm9tUmVxdWVzdChyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhLnVzZXJzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy51c2VycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlcnMgcmV0dXJuZWQgYnkgcGFnaW5hdG9yLlxuICAgICAqL1xuICAgIGdldCB1c2VycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWxEYXRhLnVzZXJzO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBNdXRlVXNlcklkc1YxUGFnaW5hdG9yIGV4dGVuZHMgQ3Vyc29yZWRWMVBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ211dGVzL3VzZXJzL2lkcy5qc29uJztcbiAgICAgICAgdGhpcy5fbWF4UmVzdWx0c1doZW5GZXRjaExhc3QgPSA1MDAwO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmlkcy5wdXNoKC4uLnJlc3VsdC5pZHMpO1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3IgPSByZXN1bHQubmV4dF9jdXJzb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEuaWRzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZXJzIElEcyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IGlkcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWxEYXRhLmlkcztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CursoredV1Paginator: () => (/* binding */ CursoredV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TwitterPaginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\");\n\nclass CursoredV1Paginator extends _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    getNextQueryParams(maxResults) {\n        var _a;\n        return {\n            ...this._queryParams,\n            cursor: (_a = this._realData.next_cursor_str) !== null && _a !== void 0 ? _a : this._realData.next_cursor,\n            ...(maxResults ? { count: maxResults } : {}),\n        };\n    }\n    isFetchLastOver(result) {\n        // If we cant fetch next page\n        return !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        // If one of cursor is valid\n        return !this.isNextCursorInvalid(result.next_cursor) || !this.isNextCursorInvalid(result.next_cursor_str);\n    }\n    isNextCursorInvalid(value) {\n        return value === undefined\n            || value === 0\n            || value === -1\n            || value === '0'\n            || value === '-1';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9wYWdpbmF0b3IudjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFDM0Msa0NBQWtDLHlEQUFnQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG9CQUFvQixJQUFJO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy9wYWdpbmF0b3IudjEuanM/NGE2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHdpdHRlclBhZ2luYXRvciBmcm9tICcuL1R3aXR0ZXJQYWdpbmF0b3InO1xuZXhwb3J0IGNsYXNzIEN1cnNvcmVkVjFQYWdpbmF0b3IgZXh0ZW5kcyBUd2l0dGVyUGFnaW5hdG9yIHtcbiAgICBnZXROZXh0UXVlcnlQYXJhbXMobWF4UmVzdWx0cykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi50aGlzLl9xdWVyeVBhcmFtcyxcbiAgICAgICAgICAgIGN1cnNvcjogKF9hID0gdGhpcy5fcmVhbERhdGEubmV4dF9jdXJzb3Jfc3RyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0aGlzLl9yZWFsRGF0YS5uZXh0X2N1cnNvcixcbiAgICAgICAgICAgIC4uLihtYXhSZXN1bHRzID8geyBjb3VudDogbWF4UmVzdWx0cyB9IDoge30pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpc0ZldGNoTGFzdE92ZXIocmVzdWx0KSB7XG4gICAgICAgIC8vIElmIHdlIGNhbnQgZmV0Y2ggbmV4dCBwYWdlXG4gICAgICAgIHJldHVybiAhdGhpcy5jYW5GZXRjaE5leHRQYWdlKHJlc3VsdC5kYXRhKTtcbiAgICB9XG4gICAgY2FuRmV0Y2hOZXh0UGFnZShyZXN1bHQpIHtcbiAgICAgICAgLy8gSWYgb25lIG9mIGN1cnNvciBpcyB2YWxpZFxuICAgICAgICByZXR1cm4gIXRoaXMuaXNOZXh0Q3Vyc29ySW52YWxpZChyZXN1bHQubmV4dF9jdXJzb3IpIHx8ICF0aGlzLmlzTmV4dEN1cnNvckludmFsaWQocmVzdWx0Lm5leHRfY3Vyc29yX3N0cik7XG4gICAgfVxuICAgIGlzTmV4dEN1cnNvckludmFsaWQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgIHx8IHZhbHVlID09PSAwXG4gICAgICAgICAgICB8fCB2YWx1ZSA9PT0gLTFcbiAgICAgICAgICAgIHx8IHZhbHVlID09PSAnMCdcbiAgICAgICAgICAgIHx8IHZhbHVlID09PSAnLTEnO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HomeTimelineV1Paginator: () => (/* binding */ HomeTimelineV1Paginator),\n/* harmony export */   ListTimelineV1Paginator: () => (/* binding */ ListTimelineV1Paginator),\n/* harmony export */   MentionTimelineV1Paginator: () => (/* binding */ MentionTimelineV1Paginator),\n/* harmony export */   UserFavoritesV1Paginator: () => (/* binding */ UserFavoritesV1Paginator),\n/* harmony export */   UserTimelineV1Paginator: () => (/* binding */ UserTimelineV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TwitterPaginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\");\n\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass TweetTimelineV1Paginator extends _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this.hasFinishedFetch = false;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n            // HINT: This is an approximation, as \"end\" of pagination cannot be safely determined without cursors.\n            this.hasFinishedFetch = result.length === 0;\n        }\n    }\n    getNextQueryParams(maxResults) {\n        const latestId = BigInt(this._realData[this._realData.length - 1].id_str);\n        return {\n            ...this.injectQueryParams(maxResults),\n            max_id: (latestId - BigInt(1)).toString(),\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        return this._realData;\n    }\n    get done() {\n        return super.done || this.hasFinishedFetch;\n    }\n}\n// Timelines\n// Home\nclass HomeTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/home_timeline.json';\n    }\n}\n// Mention\nclass MentionTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/mentions_timeline.json';\n    }\n}\n// User\nclass UserTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'statuses/user_timeline.json';\n    }\n}\n// Lists\nclass ListTimelineV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/statuses.json';\n    }\n}\n// Favorites\nclass UserFavoritesV1Paginator extends TweetTimelineV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'favorites/list.json';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy90d2VldC5wYWdpbmF0b3IudjEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtEO0FBQ2xEO0FBQ0EsdUNBQXVDLHlEQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3BhZ2luYXRvcnMvdHdlZXQucGFnaW5hdG9yLnYxLmpzPzcyMGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFR3aXR0ZXJQYWdpbmF0b3IgZnJvbSAnLi9Ud2l0dGVyUGFnaW5hdG9yJztcbi8qKiBBIGdlbmVyaWMgVHdpdHRlclBhZ2luYXRvciBhYmxlIHRvIGNvbnN1bWUgVHdlZXRWMSB0aW1lbGluZXMuICovXG5jbGFzcyBUd2VldFRpbWVsaW5lVjFQYWdpbmF0b3IgZXh0ZW5kcyBUd2l0dGVyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5oYXNGaW5pc2hlZEZldGNoID0gZmFsc2U7XG4gICAgfVxuICAgIHJlZnJlc2hJbnN0YW5jZUZyb21SZXN1bHQocmVzcG9uc2UsIGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEucHVzaCguLi5yZXN1bHQpO1xuICAgICAgICAgICAgLy8gSElOVDogVGhpcyBpcyBhbiBhcHByb3hpbWF0aW9uLCBhcyBcImVuZFwiIG9mIHBhZ2luYXRpb24gY2Fubm90IGJlIHNhZmVseSBkZXRlcm1pbmVkIHdpdGhvdXQgY3Vyc29ycy5cbiAgICAgICAgICAgIHRoaXMuaGFzRmluaXNoZWRGZXRjaCA9IHJlc3VsdC5sZW5ndGggPT09IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0TmV4dFF1ZXJ5UGFyYW1zKG1heFJlc3VsdHMpIHtcbiAgICAgICAgY29uc3QgbGF0ZXN0SWQgPSBCaWdJbnQodGhpcy5fcmVhbERhdGFbdGhpcy5fcmVhbERhdGEubGVuZ3RoIC0gMV0uaWRfc3RyKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnRoaXMuaW5qZWN0UXVlcnlQYXJhbXMobWF4UmVzdWx0cyksXG4gICAgICAgICAgICBtYXhfaWQ6IChsYXRlc3RJZCAtIEJpZ0ludCgxKSkudG9TdHJpbmcoKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0UGFnZUxlbmd0aEZyb21SZXF1ZXN0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEubGVuZ3RoO1xuICAgIH1cbiAgICBpc0ZldGNoTGFzdE92ZXIocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiAhcmVzdWx0LmRhdGEubGVuZ3RoO1xuICAgIH1cbiAgICBjYW5GZXRjaE5leHRQYWdlKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGdldEl0ZW1BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHdlZXRzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUd2VldHMgcmV0dXJuZWQgYnkgcGFnaW5hdG9yLlxuICAgICAqL1xuICAgIGdldCB0d2VldHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFsRGF0YTtcbiAgICB9XG4gICAgZ2V0IGRvbmUoKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5kb25lIHx8IHRoaXMuaGFzRmluaXNoZWRGZXRjaDtcbiAgICB9XG59XG4vLyBUaW1lbGluZXNcbi8vIEhvbWVcbmV4cG9ydCBjbGFzcyBIb21lVGltZWxpbmVWMVBhZ2luYXRvciBleHRlbmRzIFR3ZWV0VGltZWxpbmVWMVBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ3N0YXR1c2VzL2hvbWVfdGltZWxpbmUuanNvbic7XG4gICAgfVxufVxuLy8gTWVudGlvblxuZXhwb3J0IGNsYXNzIE1lbnRpb25UaW1lbGluZVYxUGFnaW5hdG9yIGV4dGVuZHMgVHdlZXRUaW1lbGluZVYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnc3RhdHVzZXMvbWVudGlvbnNfdGltZWxpbmUuanNvbic7XG4gICAgfVxufVxuLy8gVXNlclxuZXhwb3J0IGNsYXNzIFVzZXJUaW1lbGluZVYxUGFnaW5hdG9yIGV4dGVuZHMgVHdlZXRUaW1lbGluZVYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnc3RhdHVzZXMvdXNlcl90aW1lbGluZS5qc29uJztcbiAgICB9XG59XG4vLyBMaXN0c1xuZXhwb3J0IGNsYXNzIExpc3RUaW1lbGluZVYxUGFnaW5hdG9yIGV4dGVuZHMgVHdlZXRUaW1lbGluZVYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnbGlzdHMvc3RhdHVzZXMuanNvbic7XG4gICAgfVxufVxuLy8gRmF2b3JpdGVzXG5leHBvcnQgY2xhc3MgVXNlckZhdm9yaXRlc1YxUGFnaW5hdG9yIGV4dGVuZHMgVHdlZXRUaW1lbGluZVYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnZmF2b3JpdGVzL2xpc3QuanNvbic7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v2.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v2.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuotedTweetsTimelineV2Paginator: () => (/* binding */ QuotedTweetsTimelineV2Paginator),\n/* harmony export */   TweetBookmarksTimelineV2Paginator: () => (/* binding */ TweetBookmarksTimelineV2Paginator),\n/* harmony export */   TweetHomeTimelineV2Paginator: () => (/* binding */ TweetHomeTimelineV2Paginator),\n/* harmony export */   TweetSearchAllV2Paginator: () => (/* binding */ TweetSearchAllV2Paginator),\n/* harmony export */   TweetSearchRecentV2Paginator: () => (/* binding */ TweetSearchRecentV2Paginator),\n/* harmony export */   TweetUserMentionTimelineV2Paginator: () => (/* binding */ TweetUserMentionTimelineV2Paginator),\n/* harmony export */   TweetUserTimelineV2Paginator: () => (/* binding */ TweetUserTimelineV2Paginator),\n/* harmony export */   TweetV2ListTweetsPaginator: () => (/* binding */ TweetV2ListTweetsPaginator),\n/* harmony export */   TweetV2UserLikedTweetsPaginator: () => (/* binding */ TweetV2UserLikedTweetsPaginator)\n/* harmony export */ });\n/* harmony import */ var _v2_paginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.paginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js\");\n\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with since_id, until_id and next_token (when available). */\nclass TweetTimelineV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        const params = { ...this.injectQueryParams(maxResults) };\n        if (this._realData.meta.next_token) {\n            params.next_token = this._realData.meta.next_token;\n        }\n        else {\n            if (params.start_time) {\n                // until_id and start_time are forbidden together for some reason, so convert start_time to a since_id.\n                params.since_id = this.dateStringToSnowflakeId(params.start_time);\n                delete params.start_time;\n            }\n            if (params.end_time) {\n                // until_id overrides end_time, so delete it\n                delete params.end_time;\n            }\n            params.until_id = this._realData.meta.oldest_id;\n        }\n        return params;\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            since_id: this._realData.meta.newest_id,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        return !!result.meta.next_token;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    dateStringToSnowflakeId(dateStr) {\n        const TWITTER_START_EPOCH = BigInt('1288834974657');\n        const date = new Date(dateStr);\n        if (isNaN(date.valueOf())) {\n            throw new Error('Unable to convert start_time/end_time to a valid date. A ISO 8601 DateTime is excepted, please check your input.');\n        }\n        const dateTimestamp = BigInt(date.valueOf());\n        return ((dateTimestamp - TWITTER_START_EPOCH) << BigInt('22')).toString();\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with pagination_tokens. */\nclass TweetPaginableTimelineV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TimelineV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        super.refreshInstanceFromResult(response, isNextPage);\n        const result = response.data;\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n        }\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n// ----------------\n// - Tweet search -\n// ----------------\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/recent';\n    }\n}\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/all';\n    }\n}\nclass QuotedTweetsTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/quote_tweets';\n    }\n}\n// -----------------\n// - Home timeline -\n// -----------------\nclass TweetHomeTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/timelines/reverse_chronological';\n    }\n}\nclass TweetUserTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/tweets';\n    }\n}\nclass TweetUserMentionTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/mentions';\n    }\n}\n// -------------\n// - Bookmarks -\n// -------------\nclass TweetBookmarksTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/bookmarks';\n    }\n}\n// ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\nclass TweetListV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TimelineV2Paginator {\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n}\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/liked_tweets';\n    }\n}\nclass TweetV2ListTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/tweets';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FriendshipsIncomingV1Paginator: () => (/* binding */ FriendshipsIncomingV1Paginator),\n/* harmony export */   FriendshipsOutgoingV1Paginator: () => (/* binding */ FriendshipsOutgoingV1Paginator),\n/* harmony export */   UserSearchV1Paginator: () => (/* binding */ UserSearchV1Paginator)\n/* harmony export */ });\n/* harmony import */ var _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TwitterPaginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\");\n/* harmony import */ var _paginator_v1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/paginator.v1.js\");\n\n\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends _TwitterPaginator__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/search.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n        }\n    }\n    getNextQueryParams(maxResults) {\n        var _a;\n        const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n        return {\n            ...this._queryParams,\n            page: previousPage + 1,\n            ...maxResults ? { count: maxResults } : {},\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData;\n    }\n}\nclass FriendshipsIncomingV1Paginator extends _paginator_v1__WEBPACK_IMPORTED_MODULE_1__.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/incoming.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/outgoing.json';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy91c2VyLnBhZ2luYXRvci52MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFrRDtBQUNHO0FBQ3JEO0FBQ08sb0NBQW9DLHlEQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG9CQUFvQixJQUFJO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDZDQUE2Qyw4REFBbUI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy91c2VyLnBhZ2luYXRvci52MS5qcz83NTNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUd2l0dGVyUGFnaW5hdG9yIGZyb20gJy4vVHdpdHRlclBhZ2luYXRvcic7XG5pbXBvcnQgeyBDdXJzb3JlZFYxUGFnaW5hdG9yIH0gZnJvbSAnLi9wYWdpbmF0b3IudjEnO1xuLyoqIEEgZ2VuZXJpYyBUd2l0dGVyUGFnaW5hdG9yIGFibGUgdG8gY29uc3VtZSBUd2VldFYxIHRpbWVsaW5lcy4gKi9cbmV4cG9ydCBjbGFzcyBVc2VyU2VhcmNoVjFQYWdpbmF0b3IgZXh0ZW5kcyBUd2l0dGVyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndXNlcnMvc2VhcmNoLmpzb24nO1xuICAgIH1cbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIHRoaXMuX3JhdGVMaW1pdCA9IHJlc3BvbnNlLnJhdGVMaW1pdDtcbiAgICAgICAgaWYgKGlzTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLnB1c2goLi4ucmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXROZXh0UXVlcnlQYXJhbXMobWF4UmVzdWx0cykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHByZXZpb3VzUGFnZSA9IE51bWJlcigoX2EgPSB0aGlzLl9xdWVyeVBhcmFtcy5wYWdlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnMScpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4udGhpcy5fcXVlcnlQYXJhbXMsXG4gICAgICAgICAgICBwYWdlOiBwcmV2aW91c1BhZ2UgKyAxLFxuICAgICAgICAgICAgLi4ubWF4UmVzdWx0cyA/IHsgY291bnQ6IG1heFJlc3VsdHMgfSA6IHt9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXRQYWdlTGVuZ3RoRnJvbVJlcXVlc3QocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZXN1bHQuZGF0YS5sZW5ndGg7XG4gICAgfVxuICAgIGlzRmV0Y2hMYXN0T3ZlcihyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuICFyZXN1bHQuZGF0YS5sZW5ndGg7XG4gICAgfVxuICAgIGNhbkZldGNoTmV4dFBhZ2UocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZXN1bHQubGVuZ3RoID4gMDtcbiAgICB9XG4gICAgZ2V0SXRlbUFycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy51c2VycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlcnMgcmV0dXJuZWQgYnkgcGFnaW5hdG9yLlxuICAgICAqL1xuICAgIGdldCB1c2VycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWxEYXRhO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBGcmllbmRzaGlwc0luY29taW5nVjFQYWdpbmF0b3IgZXh0ZW5kcyBDdXJzb3JlZFYxUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAnZnJpZW5kc2hpcHMvaW5jb21pbmcuanNvbic7XG4gICAgICAgIHRoaXMuX21heFJlc3VsdHNXaGVuRmV0Y2hMYXN0ID0gNTAwMDtcbiAgICB9XG4gICAgcmVmcmVzaEluc3RhbmNlRnJvbVJlc3VsdChyZXNwb25zZSwgaXNOZXh0UGFnZSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICB0aGlzLl9yYXRlTGltaXQgPSByZXNwb25zZS5yYXRlTGltaXQ7XG4gICAgICAgIGlmIChpc05leHRQYWdlKSB7XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS5pZHMucHVzaCguLi5yZXN1bHQuaWRzKTtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLm5leHRfY3Vyc29yID0gcmVzdWx0Lm5leHRfY3Vyc29yO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFBhZ2VMZW5ndGhGcm9tUmVxdWVzdChyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhLmlkcy5sZW5ndGg7XG4gICAgfVxuICAgIGdldEl0ZW1BcnJheSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VycyBJRHMgcmV0dXJuZWQgYnkgcGFnaW5hdG9yLlxuICAgICAqL1xuICAgIGdldCBpZHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFsRGF0YS5pZHM7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEZyaWVuZHNoaXBzT3V0Z29pbmdWMVBhZ2luYXRvciBleHRlbmRzIEZyaWVuZHNoaXBzSW5jb21pbmdWMVBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ2ZyaWVuZHNoaXBzL291dGdvaW5nLmpzb24nO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TweetLikingUsersV2Paginator: () => (/* binding */ TweetLikingUsersV2Paginator),\n/* harmony export */   TweetRetweetersUsersV2Paginator: () => (/* binding */ TweetRetweetersUsersV2Paginator),\n/* harmony export */   UserBlockingUsersV2Paginator: () => (/* binding */ UserBlockingUsersV2Paginator),\n/* harmony export */   UserFollowersV2Paginator: () => (/* binding */ UserFollowersV2Paginator),\n/* harmony export */   UserFollowingV2Paginator: () => (/* binding */ UserFollowingV2Paginator),\n/* harmony export */   UserListFollowersV2Paginator: () => (/* binding */ UserListFollowersV2Paginator),\n/* harmony export */   UserListMembersV2Paginator: () => (/* binding */ UserListMembersV2Paginator),\n/* harmony export */   UserMutingUsersV2Paginator: () => (/* binding */ UserMutingUsersV2Paginator)\n/* harmony export */ });\n/* harmony import */ var _v2_paginator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v2.paginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js\");\n\n/** A generic PreviousableTwitterPaginator able to consume UserV2 timelines. */\nclass UserTimelineV2Paginator extends _v2_paginator__WEBPACK_IMPORTED_MODULE_0__.TimelineV2Paginator {\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\nclass UserBlockingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/blocking';\n    }\n}\nclass UserMutingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/muting';\n    }\n}\nclass UserFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/followers';\n    }\n}\nclass UserFollowingV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/following';\n    }\n}\nclass UserListMembersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/members';\n    }\n}\nclass UserListFollowersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/followers';\n    }\n}\nclass TweetLikingUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/liking_users';\n    }\n}\nclass TweetRetweetersUsersV2Paginator extends UserTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/retweeted_by';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy91c2VyLnBhZ2luYXRvci52Mi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDckQ7QUFDQSxzQ0FBc0MsOERBQW1CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3BhZ2luYXRvcnMvdXNlci5wYWdpbmF0b3IudjIuanM/NzY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lbGluZVYyUGFnaW5hdG9yIH0gZnJvbSAnLi92Mi5wYWdpbmF0b3InO1xuLyoqIEEgZ2VuZXJpYyBQcmV2aW91c2FibGVUd2l0dGVyUGFnaW5hdG9yIGFibGUgdG8gY29uc3VtZSBVc2VyVjIgdGltZWxpbmVzLiAqL1xuY2xhc3MgVXNlclRpbWVsaW5lVjJQYWdpbmF0b3IgZXh0ZW5kcyBUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBnZXRJdGVtQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnVzZXJzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2VycyByZXR1cm5lZCBieSBwYWdpbmF0b3IuXG4gICAgICovXG4gICAgZ2V0IHVzZXJzKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9yZWFsRGF0YS5kYXRhKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgZ2V0IG1ldGEoKSB7XG4gICAgICAgIHJldHVybiBzdXBlci5tZXRhO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBVc2VyQmxvY2tpbmdVc2Vyc1YyUGFnaW5hdG9yIGV4dGVuZHMgVXNlclRpbWVsaW5lVjJQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICd1c2Vycy86aWQvYmxvY2tpbmcnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBVc2VyTXV0aW5nVXNlcnNWMlBhZ2luYXRvciBleHRlbmRzIFVzZXJUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndXNlcnMvOmlkL211dGluZyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJGb2xsb3dlcnNWMlBhZ2luYXRvciBleHRlbmRzIFVzZXJUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndXNlcnMvOmlkL2ZvbGxvd2Vycyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJGb2xsb3dpbmdWMlBhZ2luYXRvciBleHRlbmRzIFVzZXJUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndXNlcnMvOmlkL2ZvbGxvd2luZyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJMaXN0TWVtYmVyc1YyUGFnaW5hdG9yIGV4dGVuZHMgVXNlclRpbWVsaW5lVjJQYWdpbmF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9lbmRwb2ludCA9ICdsaXN0cy86aWQvbWVtYmVycyc7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFVzZXJMaXN0Rm9sbG93ZXJzVjJQYWdpbmF0b3IgZXh0ZW5kcyBVc2VyVGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ2xpc3RzLzppZC9mb2xsb3dlcnMnO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBUd2VldExpa2luZ1VzZXJzVjJQYWdpbmF0b3IgZXh0ZW5kcyBVc2VyVGltZWxpbmVWMlBhZ2luYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX2VuZHBvaW50ID0gJ3R3ZWV0cy86aWQvbGlraW5nX3VzZXJzJztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgVHdlZXRSZXR3ZWV0ZXJzVXNlcnNWMlBhZ2luYXRvciBleHRlbmRzIFVzZXJUaW1lbGluZVYyUGFnaW5hdG9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZW5kcG9pbnQgPSAndHdlZXRzLzppZC9yZXR3ZWV0ZWRfYnknO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimelineV2Paginator: () => (/* binding */ TimelineV2Paginator),\n/* harmony export */   TwitterV2Paginator: () => (/* binding */ TwitterV2Paginator)\n/* harmony export */ });\n/* harmony import */ var _v2_includes_v2_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../v2/includes.v2.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js\");\n/* harmony import */ var _TwitterPaginator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TwitterPaginator */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/TwitterPaginator.js\");\n\n\n/** A generic PreviousableTwitterPaginator with common v2 helper methods. */\nclass TwitterV2Paginator extends _TwitterPaginator__WEBPACK_IMPORTED_MODULE_1__.PreviousableTwitterPaginator {\n    updateIncludes(data) {\n        // Update errors\n        if (data.errors) {\n            if (!this._realData.errors) {\n                this._realData.errors = [];\n            }\n            this._realData.errors = [...this._realData.errors, ...data.errors];\n        }\n        // Update includes\n        if (!data.includes) {\n            return;\n        }\n        if (!this._realData.includes) {\n            this._realData.includes = {};\n        }\n        const includesRealData = this._realData.includes;\n        for (const [includeKey, includeArray] of Object.entries(data.includes)) {\n            if (!includesRealData[includeKey]) {\n                includesRealData[includeKey] = [];\n            }\n            includesRealData[includeKey] = [\n                ...includesRealData[includeKey],\n                ...includeArray,\n            ];\n        }\n    }\n    /** Throw if the current paginator is not usable. */\n    assertUsable() {\n        if (this.unusable) {\n            throw new Error('Unable to use this paginator to fetch more data, as it does not contain any metadata.' +\n                ' Check .errors property for more details.');\n        }\n    }\n    get meta() {\n        return this._realData.meta;\n    }\n    get includes() {\n        var _a;\n        if (!((_a = this._realData) === null || _a === void 0 ? void 0 : _a.includes)) {\n            return new _v2_includes_v2_helper__WEBPACK_IMPORTED_MODULE_0__.TwitterV2IncludesHelper(this._realData);\n        }\n        if (this._includesInstance) {\n            return this._includesInstance;\n        }\n        return this._includesInstance = new _v2_includes_v2_helper__WEBPACK_IMPORTED_MODULE_0__.TwitterV2IncludesHelper(this._realData);\n    }\n    get errors() {\n        var _a;\n        return (_a = this._realData.errors) !== null && _a !== void 0 ? _a : [];\n    }\n    /** `true` if this paginator only contains error payload and no metadata found to consume data. */\n    get unusable() {\n        return this.errors.length > 0 && !this._realData.meta && !this._realData.data;\n    }\n}\n/** A generic TwitterV2Paginator able to consume v2 timelines that use max_results and pagination tokens. */\nclass TimelineV2Paginator extends TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.previous_token = result.meta.previous_token;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.next_token,\n        };\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            pagination_token: this._realData.meta.previous_token,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        var _a;\n        return !!((_a = result.meta) === null || _a === void 0 ? void 0 : _a.next_token);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGFnaW5hdG9ycy92Mi5wYWdpbmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRTtBQUNEO0FBQ2xFO0FBQ08saUNBQWlDLDJFQUE0QjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkVBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDJFQUF1QjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9wYWdpbmF0b3JzL3YyLnBhZ2luYXRvci5qcz85YTBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR3aXR0ZXJWMkluY2x1ZGVzSGVscGVyIH0gZnJvbSAnLi4vdjIvaW5jbHVkZXMudjIuaGVscGVyJztcbmltcG9ydCB7IFByZXZpb3VzYWJsZVR3aXR0ZXJQYWdpbmF0b3IgfSBmcm9tICcuL1R3aXR0ZXJQYWdpbmF0b3InO1xuLyoqIEEgZ2VuZXJpYyBQcmV2aW91c2FibGVUd2l0dGVyUGFnaW5hdG9yIHdpdGggY29tbW9uIHYyIGhlbHBlciBtZXRob2RzLiAqL1xuZXhwb3J0IGNsYXNzIFR3aXR0ZXJWMlBhZ2luYXRvciBleHRlbmRzIFByZXZpb3VzYWJsZVR3aXR0ZXJQYWdpbmF0b3Ige1xuICAgIHVwZGF0ZUluY2x1ZGVzKGRhdGEpIHtcbiAgICAgICAgLy8gVXBkYXRlIGVycm9yc1xuICAgICAgICBpZiAoZGF0YS5lcnJvcnMpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fcmVhbERhdGEuZXJyb3JzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEuZXJyb3JzID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9yZWFsRGF0YS5lcnJvcnMgPSBbLi4udGhpcy5fcmVhbERhdGEuZXJyb3JzLCAuLi5kYXRhLmVycm9yc107XG4gICAgICAgIH1cbiAgICAgICAgLy8gVXBkYXRlIGluY2x1ZGVzXG4gICAgICAgIGlmICghZGF0YS5pbmNsdWRlcykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fcmVhbERhdGEuaW5jbHVkZXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmluY2x1ZGVzID0ge307XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW5jbHVkZXNSZWFsRGF0YSA9IHRoaXMuX3JlYWxEYXRhLmluY2x1ZGVzO1xuICAgICAgICBmb3IgKGNvbnN0IFtpbmNsdWRlS2V5LCBpbmNsdWRlQXJyYXldIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEuaW5jbHVkZXMpKSB7XG4gICAgICAgICAgICBpZiAoIWluY2x1ZGVzUmVhbERhdGFbaW5jbHVkZUtleV0pIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlc1JlYWxEYXRhW2luY2x1ZGVLZXldID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbmNsdWRlc1JlYWxEYXRhW2luY2x1ZGVLZXldID0gW1xuICAgICAgICAgICAgICAgIC4uLmluY2x1ZGVzUmVhbERhdGFbaW5jbHVkZUtleV0sXG4gICAgICAgICAgICAgICAgLi4uaW5jbHVkZUFycmF5LFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogVGhyb3cgaWYgdGhlIGN1cnJlbnQgcGFnaW5hdG9yIGlzIG5vdCB1c2FibGUuICovXG4gICAgYXNzZXJ0VXNhYmxlKCkge1xuICAgICAgICBpZiAodGhpcy51bnVzYWJsZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gdXNlIHRoaXMgcGFnaW5hdG9yIHRvIGZldGNoIG1vcmUgZGF0YSwgYXMgaXQgZG9lcyBub3QgY29udGFpbiBhbnkgbWV0YWRhdGEuJyArXG4gICAgICAgICAgICAgICAgJyBDaGVjayAuZXJyb3JzIHByb3BlcnR5IGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG1ldGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFsRGF0YS5tZXRhO1xuICAgIH1cbiAgICBnZXQgaW5jbHVkZXMoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCEoKF9hID0gdGhpcy5fcmVhbERhdGEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pbmNsdWRlcykpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVHdpdHRlclYySW5jbHVkZXNIZWxwZXIodGhpcy5fcmVhbERhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9pbmNsdWRlc0luc3RhbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faW5jbHVkZXNJbnN0YW5jZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faW5jbHVkZXNJbnN0YW5jZSA9IG5ldyBUd2l0dGVyVjJJbmNsdWRlc0hlbHBlcih0aGlzLl9yZWFsRGF0YSk7XG4gICAgfVxuICAgIGdldCBlcnJvcnMoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX3JlYWxEYXRhLmVycm9ycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgfVxuICAgIC8qKiBgdHJ1ZWAgaWYgdGhpcyBwYWdpbmF0b3Igb25seSBjb250YWlucyBlcnJvciBwYXlsb2FkIGFuZCBubyBtZXRhZGF0YSBmb3VuZCB0byBjb25zdW1lIGRhdGEuICovXG4gICAgZ2V0IHVudXNhYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lcnJvcnMubGVuZ3RoID4gMCAmJiAhdGhpcy5fcmVhbERhdGEubWV0YSAmJiAhdGhpcy5fcmVhbERhdGEuZGF0YTtcbiAgICB9XG59XG4vKiogQSBnZW5lcmljIFR3aXR0ZXJWMlBhZ2luYXRvciBhYmxlIHRvIGNvbnN1bWUgdjIgdGltZWxpbmVzIHRoYXQgdXNlIG1heF9yZXN1bHRzIGFuZCBwYWdpbmF0aW9uIHRva2Vucy4gKi9cbmV4cG9ydCBjbGFzcyBUaW1lbGluZVYyUGFnaW5hdG9yIGV4dGVuZHMgVHdpdHRlclYyUGFnaW5hdG9yIHtcbiAgICByZWZyZXNoSW5zdGFuY2VGcm9tUmVzdWx0KHJlc3BvbnNlLCBpc05leHRQYWdlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgY29uc3QgcmVzdWx0RGF0YSA9IChfYSA9IHJlc3VsdC5kYXRhKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICAgICAgdGhpcy5fcmF0ZUxpbWl0ID0gcmVzcG9uc2UucmF0ZUxpbWl0O1xuICAgICAgICBpZiAoIXRoaXMuX3JlYWxEYXRhLmRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmRhdGEgPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNOZXh0UGFnZSkge1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubWV0YS5yZXN1bHRfY291bnQgKz0gcmVzdWx0Lm1ldGEucmVzdWx0X2NvdW50O1xuICAgICAgICAgICAgdGhpcy5fcmVhbERhdGEubWV0YS5uZXh0X3Rva2VuID0gcmVzdWx0Lm1ldGEubmV4dF90b2tlbjtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmRhdGEucHVzaCguLi5yZXN1bHREYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLm1ldGEucmVzdWx0X2NvdW50ICs9IHJlc3VsdC5tZXRhLnJlc3VsdF9jb3VudDtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLm1ldGEucHJldmlvdXNfdG9rZW4gPSByZXN1bHQubWV0YS5wcmV2aW91c190b2tlbjtcbiAgICAgICAgICAgIHRoaXMuX3JlYWxEYXRhLmRhdGEudW5zaGlmdCguLi5yZXN1bHREYXRhKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVwZGF0ZUluY2x1ZGVzKHJlc3VsdCk7XG4gICAgfVxuICAgIGdldE5leHRRdWVyeVBhcmFtcyhtYXhSZXN1bHRzKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0VXNhYmxlKCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi50aGlzLmluamVjdFF1ZXJ5UGFyYW1zKG1heFJlc3VsdHMpLFxuICAgICAgICAgICAgcGFnaW5hdGlvbl90b2tlbjogdGhpcy5fcmVhbERhdGEubWV0YS5uZXh0X3Rva2VuLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXRQcmV2aW91c1F1ZXJ5UGFyYW1zKG1heFJlc3VsdHMpIHtcbiAgICAgICAgdGhpcy5hc3NlcnRVc2FibGUoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnRoaXMuaW5qZWN0UXVlcnlQYXJhbXMobWF4UmVzdWx0cyksXG4gICAgICAgICAgICBwYWdpbmF0aW9uX3Rva2VuOiB0aGlzLl9yZWFsRGF0YS5tZXRhLnByZXZpb3VzX3Rva2VuLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXRQYWdlTGVuZ3RoRnJvbVJlcXVlc3QocmVzdWx0KSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHJldHVybiAoX2IgPSAoX2EgPSByZXN1bHQuZGF0YS5kYXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAwO1xuICAgIH1cbiAgICBpc0ZldGNoTGFzdE92ZXIocmVzdWx0KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuICEoKF9hID0gcmVzdWx0LmRhdGEuZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgfHwgIXRoaXMuY2FuRmV0Y2hOZXh0UGFnZShyZXN1bHQuZGF0YSk7XG4gICAgfVxuICAgIGNhbkZldGNoTmV4dFBhZ2UocmVzdWx0KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuICEhKChfYSA9IHJlc3VsdC5tZXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmV4dF90b2tlbik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/v2.paginator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/plugins/helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/plugins/helpers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyResponseHooks: () => (/* binding */ applyResponseHooks),\n/* harmony export */   hasRequestErrorPlugins: () => (/* binding */ hasRequestErrorPlugins)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n\n/* Plugin helpers */\nfunction hasRequestErrorPlugins(client) {\n    var _a;\n    if (!((_a = client.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length)) {\n        return false;\n    }\n    for (const plugin of client.clientSettings.plugins) {\n        if (plugin.onRequestError || plugin.onResponseError) {\n            return true;\n        }\n    }\n    return false;\n}\nasync function applyResponseHooks(requestParams, computedParams, requestOptions, error) {\n    let override;\n    if (error instanceof _types__WEBPACK_IMPORTED_MODULE_0__.ApiRequestError || error instanceof _types__WEBPACK_IMPORTED_MODULE_0__.ApiPartialResponseError) {\n        override = await this.applyPluginMethod('onRequestError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    else if (error instanceof _types__WEBPACK_IMPORTED_MODULE_0__.ApiResponseError) {\n        override = await this.applyPluginMethod('onResponseError', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            error,\n        });\n    }\n    if (override && override instanceof _types__WEBPACK_IMPORTED_MODULE_0__.TwitterApiPluginResponseOverride) {\n        return override.value;\n    }\n    return Promise.reject(error);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vcGx1Z2lucy9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3SDtBQUN4SDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx5QkFBeUIsbURBQWUscUJBQXFCLDJEQUF1QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDhCQUE4QixvREFBZ0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx3Q0FBd0Msb0VBQWdDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9wbHVnaW5zL2hlbHBlcnMuanM/NjgzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQYXJ0aWFsUmVzcG9uc2VFcnJvciwgQXBpUmVxdWVzdEVycm9yLCBBcGlSZXNwb25zZUVycm9yLCBUd2l0dGVyQXBpUGx1Z2luUmVzcG9uc2VPdmVycmlkZSB9IGZyb20gJy4uL3R5cGVzJztcbi8qIFBsdWdpbiBoZWxwZXJzICovXG5leHBvcnQgZnVuY3Rpb24gaGFzUmVxdWVzdEVycm9yUGx1Z2lucyhjbGllbnQpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKCEoKF9hID0gY2xpZW50LmNsaWVudFNldHRpbmdzLnBsdWdpbnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwbHVnaW4gb2YgY2xpZW50LmNsaWVudFNldHRpbmdzLnBsdWdpbnMpIHtcbiAgICAgICAgaWYgKHBsdWdpbi5vblJlcXVlc3RFcnJvciB8fCBwbHVnaW4ub25SZXNwb25zZUVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBwbHlSZXNwb25zZUhvb2tzKHJlcXVlc3RQYXJhbXMsIGNvbXB1dGVkUGFyYW1zLCByZXF1ZXN0T3B0aW9ucywgZXJyb3IpIHtcbiAgICBsZXQgb3ZlcnJpZGU7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQXBpUmVxdWVzdEVycm9yIHx8IGVycm9yIGluc3RhbmNlb2YgQXBpUGFydGlhbFJlc3BvbnNlRXJyb3IpIHtcbiAgICAgICAgb3ZlcnJpZGUgPSBhd2FpdCB0aGlzLmFwcGx5UGx1Z2luTWV0aG9kKCdvblJlcXVlc3RFcnJvcicsIHtcbiAgICAgICAgICAgIGNsaWVudDogdGhpcyxcbiAgICAgICAgICAgIHVybDogdGhpcy5nZXRVcmxPYmplY3RGcm9tVXJsU3RyaW5nKHJlcXVlc3RQYXJhbXMudXJsKSxcbiAgICAgICAgICAgIHBhcmFtczogcmVxdWVzdFBhcmFtcyxcbiAgICAgICAgICAgIGNvbXB1dGVkUGFyYW1zLFxuICAgICAgICAgICAgcmVxdWVzdE9wdGlvbnMsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGVycm9yIGluc3RhbmNlb2YgQXBpUmVzcG9uc2VFcnJvcikge1xuICAgICAgICBvdmVycmlkZSA9IGF3YWl0IHRoaXMuYXBwbHlQbHVnaW5NZXRob2QoJ29uUmVzcG9uc2VFcnJvcicsIHtcbiAgICAgICAgICAgIGNsaWVudDogdGhpcyxcbiAgICAgICAgICAgIHVybDogdGhpcy5nZXRVcmxPYmplY3RGcm9tVXJsU3RyaW5nKHJlcXVlc3RQYXJhbXMudXJsKSxcbiAgICAgICAgICAgIHBhcmFtczogcmVxdWVzdFBhcmFtcyxcbiAgICAgICAgICAgIGNvbXB1dGVkUGFyYW1zLFxuICAgICAgICAgICAgcmVxdWVzdE9wdGlvbnMsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChvdmVycmlkZSAmJiBvdmVycmlkZSBpbnN0YW5jZW9mIFR3aXR0ZXJBcGlQbHVnaW5SZXNwb25zZU92ZXJyaWRlKSB7XG4gICAgICAgIHJldHVybiBvdmVycmlkZS52YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/plugins/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/settings.js":
/*!**********************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/settings.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiV2Settings: () => (/* binding */ TwitterApiV2Settings)\n/* harmony export */ });\nconst TwitterApiV2Settings = {\n    debug: false,\n    deprecationWarnings: true,\n    logger: { log: console.log.bind(console) },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vc2V0dGluZ3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBLGNBQWMsZ0NBQWdDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9zZXR0aW5ncy5qcz9hYzVlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBUd2l0dGVyQXBpVjJTZXR0aW5ncyA9IHtcbiAgICBkZWJ1ZzogZmFsc2UsXG4gICAgZGVwcmVjYXRpb25XYXJuaW5nczogdHJ1ZSxcbiAgICBsb2dnZXI6IHsgbG9nOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/settings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TweetStream: () => (/* binding */ TweetStream),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _client_mixins_request_handler_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client-mixins/request-handler.helper */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client-mixins/request-handler.helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var _TweetStreamEventCombiner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TweetStreamEventCombiner */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamEventCombiner.js\");\n/* harmony import */ var _TweetStreamParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TweetStreamParser */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamParser.js\");\n\n\n\n\n\n// In seconds\nconst basicRetriesAttempt = [5, 15, 30, 60, 90, 120, 180, 300, 600, 900];\n// Default retry function\nconst basicReconnectRetry = tryOccurrence => tryOccurrence > basicRetriesAttempt.length\n    ? 901000\n    : basicRetriesAttempt[tryOccurrence - 1] * 1000;\nclass TweetStream extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    constructor(requestData, connection) {\n        super();\n        this.requestData = requestData;\n        this.autoReconnect = false;\n        this.autoReconnectRetries = 5;\n        // 2 minutes without any Twitter signal\n        this.keepAliveTimeoutMs = 1000 * 120;\n        this.nextRetryTimeout = basicReconnectRetry;\n        this.parser = new _TweetStreamParser__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n        this.connectionProcessRunning = false;\n        this.onKeepAliveTimeout = this.onKeepAliveTimeout.bind(this);\n        this.initEventsFromParser();\n        if (connection) {\n            this.req = connection.req;\n            this.res = connection.res;\n            this.originalResponse = connection.originalResponse;\n            this.initEventsFromRequest();\n        }\n    }\n    on(event, handler) {\n        return super.on(event, handler);\n    }\n    initEventsFromRequest() {\n        if (!this.req || !this.res) {\n            throw new Error('TweetStream error: You cannot init TweetStream without a request and response object.');\n        }\n        const errorHandler = (err) => {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionError, err);\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Error, {\n                type: _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionError,\n                error: err,\n                message: 'Connection lost or closed by Twitter.',\n            });\n            this.onConnectionError();\n        };\n        this.req.on('error', errorHandler);\n        this.res.on('error', errorHandler);\n        // Usually, connection should not be closed by Twitter!\n        this.res.on('close', () => errorHandler(new Error('Connection closed by Twitter.')));\n        this.res.on('data', (chunk) => {\n            this.resetKeepAliveTimeout();\n            if (chunk.toString() === '\\r\\n') {\n                return this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.DataKeepAlive);\n            }\n            this.parser.push(chunk.toString());\n        });\n        // Starts the keep alive timeout\n        this.resetKeepAliveTimeout();\n    }\n    initEventsFromParser() {\n        const payloadIsError = this.requestData.payloadIsError;\n        this.parser.on(_TweetStreamParser__WEBPACK_IMPORTED_MODULE_4__.EStreamParserEvent.ParsedData, (eventData) => {\n            if (payloadIsError && payloadIsError(eventData)) {\n                this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.DataError, eventData);\n                this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Error, {\n                    type: _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.DataError,\n                    error: eventData,\n                    message: 'Twitter sent a payload that is detected as an error payload.',\n                });\n            }\n            else {\n                this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Data, eventData);\n            }\n        });\n        this.parser.on(_TweetStreamParser__WEBPACK_IMPORTED_MODULE_4__.EStreamParserEvent.ParseError, (error) => {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.TweetParseError, error);\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Error, {\n                type: _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.TweetParseError,\n                error,\n                message: 'Failed to parse stream data.',\n            });\n        });\n    }\n    resetKeepAliveTimeout() {\n        this.unbindKeepAliveTimeout();\n        if (this.keepAliveTimeoutMs !== Infinity) {\n            this.keepAliveTimeout = setTimeout(this.onKeepAliveTimeout, this.keepAliveTimeoutMs);\n        }\n    }\n    onKeepAliveTimeout() {\n        this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionLost);\n        this.onConnectionError();\n    }\n    unbindTimeouts() {\n        this.unbindRetryTimeout();\n        this.unbindKeepAliveTimeout();\n    }\n    unbindKeepAliveTimeout() {\n        if (this.keepAliveTimeout) {\n            clearTimeout(this.keepAliveTimeout);\n            this.keepAliveTimeout = undefined;\n        }\n    }\n    unbindRetryTimeout() {\n        if (this.retryTimeout) {\n            clearTimeout(this.retryTimeout);\n            this.retryTimeout = undefined;\n        }\n    }\n    closeWithoutEmit() {\n        this.unbindTimeouts();\n        if (this.res) {\n            this.res.removeAllListeners();\n            // Close response silently\n            this.res.destroy();\n        }\n        if (this.req) {\n            this.req.removeAllListeners();\n            // Close connection silently\n            this.req.destroy();\n        }\n    }\n    /** Terminate connection to Twitter. */\n    close() {\n        this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionClosed);\n        this.closeWithoutEmit();\n    }\n    /** Unbind all listeners, and close connection. */\n    destroy() {\n        this.removeAllListeners();\n        this.close();\n    }\n    /**\n     * Make a new request that creates a new `TweetStream` instance with\n     * the same parameters, and bind current listeners to new stream.\n     */\n    async clone() {\n        const newRequest = new _client_mixins_request_handler_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.requestData);\n        const newStream = await newRequest.makeRequestAsStream();\n        // Clone attached listeners\n        const listenerNames = this.eventNames();\n        for (const listener of listenerNames) {\n            const callbacks = this.listeners(listener);\n            for (const callback of callbacks) {\n                newStream.on(listener, callback);\n            }\n        }\n        return newStream;\n    }\n    /** Start initial stream connection, setup options on current instance and returns itself. */\n    async connect(options = {}) {\n        if (typeof options.autoReconnect !== 'undefined') {\n            this.autoReconnect = options.autoReconnect;\n        }\n        if (typeof options.autoReconnectRetries !== 'undefined') {\n            this.autoReconnectRetries = options.autoReconnectRetries === 'unlimited'\n                ? Infinity\n                : options.autoReconnectRetries;\n        }\n        if (typeof options.keepAliveTimeout !== 'undefined') {\n            this.keepAliveTimeoutMs = options.keepAliveTimeout === 'disable'\n                ? Infinity\n                : options.keepAliveTimeout;\n        }\n        if (typeof options.nextRetryTimeout !== 'undefined') {\n            this.nextRetryTimeout = options.nextRetryTimeout;\n        }\n        // Make the connection\n        this.unbindTimeouts();\n        try {\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectError, 0);\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Error, {\n                type: _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectError,\n                error: e,\n                message: 'Connect error - Initial connection just failed.',\n            });\n            // Only make a reconnection attempt if autoReconnect is true!\n            // Otherwise, let error be propagated\n            if (this.autoReconnect) {\n                this.makeAutoReconnectRetry(0, e);\n            }\n            else {\n                throw e;\n            }\n        }\n        return this;\n    }\n    /** Make a new request to (re)connect to Twitter. */\n    async reconnect() {\n        if (this.connectionProcessRunning) {\n            throw new Error('Connection process is already running.');\n        }\n        this.connectionProcessRunning = true;\n        try {\n            let initialConnection = true;\n            if (this.req) {\n                initialConnection = false;\n                this.closeWithoutEmit();\n            }\n            const { req, res, originalResponse } = await new _client_mixins_request_handler_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.requestData).makeRequestAndResolveWhenReady();\n            this.req = req;\n            this.res = res;\n            this.originalResponse = originalResponse;\n            this.emit(initialConnection ? _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Connected : _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Reconnected);\n            this.parser.reset();\n            this.initEventsFromRequest();\n        }\n        finally {\n            this.connectionProcessRunning = false;\n        }\n    }\n    async onConnectionError(retryOccurrence = 0) {\n        this.unbindTimeouts();\n        // Close the request if necessary\n        this.closeWithoutEmit();\n        // Terminate stream by events if necessary (no auto-reconnect or retries exceeded)\n        if (!this.autoReconnect) {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        if (retryOccurrence >= this.autoReconnectRetries) {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ReconnectLimitExceeded);\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ConnectionClosed);\n            return;\n        }\n        // If all other conditions fails, do a reconnect attempt\n        try {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ReconnectAttempt, retryOccurrence);\n            await this.reconnect();\n        }\n        catch (e) {\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ReconnectError, retryOccurrence);\n            this.emit(_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.Error, {\n                type: _types__WEBPACK_IMPORTED_MODULE_2__.ETwitterStreamEvent.ReconnectError,\n                error: e,\n                message: `Reconnect error - ${retryOccurrence + 1} attempts made yet.`,\n            });\n            this.makeAutoReconnectRetry(retryOccurrence, e);\n        }\n    }\n    makeAutoReconnectRetry(retryOccurrence, error) {\n        const nextRetry = this.nextRetryTimeout(retryOccurrence + 1, error);\n        this.retryTimeout = setTimeout(() => {\n            this.onConnectionError(retryOccurrence + 1);\n        }, nextRetry);\n    }\n    async *[Symbol.asyncIterator]() {\n        const eventCombiner = new _TweetStreamEventCombiner__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n        try {\n            while (true) {\n                if (!this.req || this.req.aborted) {\n                    throw new Error('Connection closed');\n                }\n                if (eventCombiner.hasStack()) {\n                    yield* eventCombiner.popStack();\n                }\n                const { type, payload } = await eventCombiner.nextEvent();\n                if (type === 'error') {\n                    throw payload;\n                }\n            }\n        }\n        finally {\n            eventCombiner.destroy();\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TweetStream);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamEventCombiner.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamEventCombiner.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TweetStreamEventCombiner: () => (/* binding */ TweetStreamEventCombiner),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n\n\nclass TweetStreamEventCombiner extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    constructor(stream) {\n        super();\n        this.stream = stream;\n        this.stack = [];\n        this.onStreamData = this.onStreamData.bind(this);\n        this.onStreamError = this.onStreamError.bind(this);\n        this.onceNewEvent = this.once.bind(this, 'event');\n        // Init events from stream\n        stream.on(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.Data, this.onStreamData);\n        // Ignore reconnect errors: Don't close event combiner until connection error/closed\n        stream.on(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        stream.on(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        stream.on(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    /** Returns a new `Promise` that will `resolve` on next event (`data` or any sort of error). */\n    nextEvent() {\n        return new Promise(this.onceNewEvent);\n    }\n    /** Returns `true` if there's something in the stack. */\n    hasStack() {\n        return this.stack.length > 0;\n    }\n    /** Returns stacked data events, and clean the stack. */\n    popStack() {\n        const stack = this.stack;\n        this.stack = [];\n        return stack;\n    }\n    /** Cleanup all the listeners attached on stream. */\n    destroy() {\n        this.removeAllListeners();\n        this.stream.off(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.Data, this.onStreamData);\n        this.stream.off(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.ConnectionError, this.onStreamError);\n        this.stream.off(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.TweetParseError, this.onStreamError);\n        this.stream.off(_types__WEBPACK_IMPORTED_MODULE_1__.ETwitterStreamEvent.ConnectionClosed, this.onStreamError);\n    }\n    emitEvent(type, payload) {\n        this.emit('event', { type, payload });\n    }\n    onStreamError(payload) {\n        this.emitEvent('error', payload);\n    }\n    onStreamData(payload) {\n        this.stack.push(payload);\n        this.emitEvent('data', payload);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TweetStreamEventCombiner);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vc3RyZWFtL1R3ZWV0U3RyZWFtRXZlbnRDb21iaW5lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzQztBQUNTO0FBQ3hDLHVDQUF1QyxnREFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFtQjtBQUNyQztBQUNBLGtCQUFrQix1REFBbUI7QUFDckMsa0JBQWtCLHVEQUFtQjtBQUNyQyxrQkFBa0IsdURBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1REFBbUI7QUFDM0Msd0JBQXdCLHVEQUFtQjtBQUMzQyx3QkFBd0IsdURBQW1CO0FBQzNDLHdCQUF3Qix1REFBbUI7QUFDM0M7QUFDQTtBQUNBLDZCQUE2QixlQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLHdCQUF3QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS9zdHJlYW0vVHdlZXRTdHJlYW1FdmVudENvbWJpbmVyLmpzPzhjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRzJztcbmltcG9ydCB7IEVUd2l0dGVyU3RyZWFtRXZlbnQgfSBmcm9tICcuLi90eXBlcyc7XG5leHBvcnQgY2xhc3MgVHdlZXRTdHJlYW1FdmVudENvbWJpbmVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcihzdHJlYW0pIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5zdHJlYW0gPSBzdHJlYW07XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5vblN0cmVhbURhdGEgPSB0aGlzLm9uU3RyZWFtRGF0YS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm9uU3RyZWFtRXJyb3IgPSB0aGlzLm9uU3RyZWFtRXJyb3IuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5vbmNlTmV3RXZlbnQgPSB0aGlzLm9uY2UuYmluZCh0aGlzLCAnZXZlbnQnKTtcbiAgICAgICAgLy8gSW5pdCBldmVudHMgZnJvbSBzdHJlYW1cbiAgICAgICAgc3RyZWFtLm9uKEVUd2l0dGVyU3RyZWFtRXZlbnQuRGF0YSwgdGhpcy5vblN0cmVhbURhdGEpO1xuICAgICAgICAvLyBJZ25vcmUgcmVjb25uZWN0IGVycm9yczogRG9uJ3QgY2xvc2UgZXZlbnQgY29tYmluZXIgdW50aWwgY29ubmVjdGlvbiBlcnJvci9jbG9zZWRcbiAgICAgICAgc3RyZWFtLm9uKEVUd2l0dGVyU3RyZWFtRXZlbnQuQ29ubmVjdGlvbkVycm9yLCB0aGlzLm9uU3RyZWFtRXJyb3IpO1xuICAgICAgICBzdHJlYW0ub24oRVR3aXR0ZXJTdHJlYW1FdmVudC5Ud2VldFBhcnNlRXJyb3IsIHRoaXMub25TdHJlYW1FcnJvcik7XG4gICAgICAgIHN0cmVhbS5vbihFVHdpdHRlclN0cmVhbUV2ZW50LkNvbm5lY3Rpb25DbG9zZWQsIHRoaXMub25TdHJlYW1FcnJvcik7XG4gICAgfVxuICAgIC8qKiBSZXR1cm5zIGEgbmV3IGBQcm9taXNlYCB0aGF0IHdpbGwgYHJlc29sdmVgIG9uIG5leHQgZXZlbnQgKGBkYXRhYCBvciBhbnkgc29ydCBvZiBlcnJvcikuICovXG4gICAgbmV4dEV2ZW50KCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UodGhpcy5vbmNlTmV3RXZlbnQpO1xuICAgIH1cbiAgICAvKiogUmV0dXJucyBgdHJ1ZWAgaWYgdGhlcmUncyBzb21ldGhpbmcgaW4gdGhlIHN0YWNrLiAqL1xuICAgIGhhc1N0YWNrKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPiAwO1xuICAgIH1cbiAgICAvKiogUmV0dXJucyBzdGFja2VkIGRhdGEgZXZlbnRzLCBhbmQgY2xlYW4gdGhlIHN0YWNrLiAqL1xuICAgIHBvcFN0YWNrKCkge1xuICAgICAgICBjb25zdCBzdGFjayA9IHRoaXMuc3RhY2s7XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbXTtcbiAgICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH1cbiAgICAvKiogQ2xlYW51cCBhbGwgdGhlIGxpc3RlbmVycyBhdHRhY2hlZCBvbiBzdHJlYW0uICovXG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5zdHJlYW0ub2ZmKEVUd2l0dGVyU3RyZWFtRXZlbnQuRGF0YSwgdGhpcy5vblN0cmVhbURhdGEpO1xuICAgICAgICB0aGlzLnN0cmVhbS5vZmYoRVR3aXR0ZXJTdHJlYW1FdmVudC5Db25uZWN0aW9uRXJyb3IsIHRoaXMub25TdHJlYW1FcnJvcik7XG4gICAgICAgIHRoaXMuc3RyZWFtLm9mZihFVHdpdHRlclN0cmVhbUV2ZW50LlR3ZWV0UGFyc2VFcnJvciwgdGhpcy5vblN0cmVhbUVycm9yKTtcbiAgICAgICAgdGhpcy5zdHJlYW0ub2ZmKEVUd2l0dGVyU3RyZWFtRXZlbnQuQ29ubmVjdGlvbkNsb3NlZCwgdGhpcy5vblN0cmVhbUVycm9yKTtcbiAgICB9XG4gICAgZW1pdEV2ZW50KHR5cGUsIHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5lbWl0KCdldmVudCcsIHsgdHlwZSwgcGF5bG9hZCB9KTtcbiAgICB9XG4gICAgb25TdHJlYW1FcnJvcihwYXlsb2FkKSB7XG4gICAgICAgIHRoaXMuZW1pdEV2ZW50KCdlcnJvcicsIHBheWxvYWQpO1xuICAgIH1cbiAgICBvblN0cmVhbURhdGEocGF5bG9hZCkge1xuICAgICAgICB0aGlzLnN0YWNrLnB1c2gocGF5bG9hZCk7XG4gICAgICAgIHRoaXMuZW1pdEV2ZW50KCdkYXRhJywgcGF5bG9hZCk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVHdlZXRTdHJlYW1FdmVudENvbWJpbmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamEventCombiner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamParser.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamParser.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EStreamParserEvent: () => (/* binding */ EStreamParserEvent),\n/* harmony export */   \"default\": () => (/* binding */ TweetStreamParser)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n\nclass TweetStreamParser extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.currentMessage = '';\n    }\n    // Code partially belongs to twitter-stream-api for this\n    // https://github.com/trygve-lie/twitter-stream-api/blob/master/lib/parser.js\n    push(chunk) {\n        this.currentMessage += chunk;\n        chunk = this.currentMessage;\n        const size = chunk.length;\n        let start = 0;\n        let offset = 0;\n        while (offset < size) {\n            // Take [offset, offset+1] inside a new string\n            if (chunk.slice(offset, offset + 2) === '\\r\\n') {\n                // If chunk contains \\r\\n after current offset,\n                // parse [start, ..., offset] as a tweet\n                const piece = chunk.slice(start, offset);\n                start = offset += 2;\n                // If empty object\n                if (!piece.length) {\n                    continue;\n                }\n                try {\n                    const payload = JSON.parse(piece);\n                    if (payload) {\n                        this.emit(EStreamParserEvent.ParsedData, payload);\n                        continue;\n                    }\n                }\n                catch (error) {\n                    this.emit(EStreamParserEvent.ParseError, error);\n                }\n            }\n            offset++;\n        }\n        this.currentMessage = chunk.slice(start, size);\n    }\n    /** Reset the currently stored message (f.e. on connection reset) */\n    reset() {\n        this.currentMessage = '';\n    }\n}\nvar EStreamParserEvent;\n(function (EStreamParserEvent) {\n    EStreamParserEvent[\"ParsedData\"] = \"parsed data\";\n    EStreamParserEvent[\"ParseError\"] = \"parse error\";\n})(EStreamParserEvent || (EStreamParserEvent = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vc3RyZWFtL1R3ZWV0U3RyZWFtUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0M7QUFDdkIsZ0NBQWdDLGdEQUFZO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vc3RyZWFtL1R3ZWV0U3RyZWFtUGFyc2VyLmpzP2VlNTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRzJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR3ZWV0U3RyZWFtUGFyc2VyIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jdXJyZW50TWVzc2FnZSA9ICcnO1xuICAgIH1cbiAgICAvLyBDb2RlIHBhcnRpYWxseSBiZWxvbmdzIHRvIHR3aXR0ZXItc3RyZWFtLWFwaSBmb3IgdGhpc1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90cnlndmUtbGllL3R3aXR0ZXItc3RyZWFtLWFwaS9ibG9iL21hc3Rlci9saWIvcGFyc2VyLmpzXG4gICAgcHVzaChjaHVuaykge1xuICAgICAgICB0aGlzLmN1cnJlbnRNZXNzYWdlICs9IGNodW5rO1xuICAgICAgICBjaHVuayA9IHRoaXMuY3VycmVudE1lc3NhZ2U7XG4gICAgICAgIGNvbnN0IHNpemUgPSBjaHVuay5sZW5ndGg7XG4gICAgICAgIGxldCBzdGFydCA9IDA7XG4gICAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgICB3aGlsZSAob2Zmc2V0IDwgc2l6ZSkge1xuICAgICAgICAgICAgLy8gVGFrZSBbb2Zmc2V0LCBvZmZzZXQrMV0gaW5zaWRlIGEgbmV3IHN0cmluZ1xuICAgICAgICAgICAgaWYgKGNodW5rLnNsaWNlKG9mZnNldCwgb2Zmc2V0ICsgMikgPT09ICdcXHJcXG4nKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgY2h1bmsgY29udGFpbnMgXFxyXFxuIGFmdGVyIGN1cnJlbnQgb2Zmc2V0LFxuICAgICAgICAgICAgICAgIC8vIHBhcnNlIFtzdGFydCwgLi4uLCBvZmZzZXRdIGFzIGEgdHdlZXRcbiAgICAgICAgICAgICAgICBjb25zdCBwaWVjZSA9IGNodW5rLnNsaWNlKHN0YXJ0LCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gb2Zmc2V0ICs9IDI7XG4gICAgICAgICAgICAgICAgLy8gSWYgZW1wdHkgb2JqZWN0XG4gICAgICAgICAgICAgICAgaWYgKCFwaWVjZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnBhcnNlKHBpZWNlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBheWxvYWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdChFU3RyZWFtUGFyc2VyRXZlbnQuUGFyc2VkRGF0YSwgcGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0KEVTdHJlYW1QYXJzZXJFdmVudC5QYXJzZUVycm9yLCBlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb2Zmc2V0Kys7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jdXJyZW50TWVzc2FnZSA9IGNodW5rLnNsaWNlKHN0YXJ0LCBzaXplKTtcbiAgICB9XG4gICAgLyoqIFJlc2V0IHRoZSBjdXJyZW50bHkgc3RvcmVkIG1lc3NhZ2UgKGYuZS4gb24gY29ubmVjdGlvbiByZXNldCkgKi9cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50TWVzc2FnZSA9ICcnO1xuICAgIH1cbn1cbmV4cG9ydCB2YXIgRVN0cmVhbVBhcnNlckV2ZW50O1xuKGZ1bmN0aW9uIChFU3RyZWFtUGFyc2VyRXZlbnQpIHtcbiAgICBFU3RyZWFtUGFyc2VyRXZlbnRbXCJQYXJzZWREYXRhXCJdID0gXCJwYXJzZWQgZGF0YVwiO1xuICAgIEVTdHJlYW1QYXJzZXJFdmVudFtcIlBhcnNlRXJyb3JcIl0gPSBcInBhcnNlIGVycm9yXCI7XG59KShFU3RyZWFtUGFyc2VyRXZlbnQgfHwgKEVTdHJlYW1QYXJzZXJFdmVudCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/stream/TweetStreamParser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/auth.types.js":
/*!******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/auth.types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvYXV0aC50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL2F1dGgudHlwZXMuanM/ZTUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/auth.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/client.types.js":
/*!********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/client.types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ETwitterStreamEvent: () => (/* binding */ ETwitterStreamEvent)\n/* harmony export */ });\nvar ETwitterStreamEvent;\n(function (ETwitterStreamEvent) {\n    ETwitterStreamEvent[\"Connected\"] = \"connected\";\n    ETwitterStreamEvent[\"ConnectError\"] = \"connect error\";\n    ETwitterStreamEvent[\"ConnectionError\"] = \"connection error\";\n    ETwitterStreamEvent[\"ConnectionClosed\"] = \"connection closed\";\n    ETwitterStreamEvent[\"ConnectionLost\"] = \"connection lost\";\n    ETwitterStreamEvent[\"ReconnectAttempt\"] = \"reconnect attempt\";\n    ETwitterStreamEvent[\"Reconnected\"] = \"reconnected\";\n    ETwitterStreamEvent[\"ReconnectError\"] = \"reconnect error\";\n    ETwitterStreamEvent[\"ReconnectLimitExceeded\"] = \"reconnect limit exceeded\";\n    ETwitterStreamEvent[\"DataKeepAlive\"] = \"data keep-alive\";\n    ETwitterStreamEvent[\"Data\"] = \"data event content\";\n    ETwitterStreamEvent[\"DataError\"] = \"data twitter error\";\n    ETwitterStreamEvent[\"TweetParseError\"] = \"data tweet parse error\";\n    ETwitterStreamEvent[\"Error\"] = \"stream error\";\n})(ETwitterStreamEvent || (ETwitterStreamEvent = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvY2xpZW50LnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS90eXBlcy9jbGllbnQudHlwZXMuanM/NDE3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIEVUd2l0dGVyU3RyZWFtRXZlbnQ7XG4oZnVuY3Rpb24gKEVUd2l0dGVyU3RyZWFtRXZlbnQpIHtcbiAgICBFVHdpdHRlclN0cmVhbUV2ZW50W1wiQ29ubmVjdGVkXCJdID0gXCJjb25uZWN0ZWRcIjtcbiAgICBFVHdpdHRlclN0cmVhbUV2ZW50W1wiQ29ubmVjdEVycm9yXCJdID0gXCJjb25uZWN0IGVycm9yXCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIkNvbm5lY3Rpb25FcnJvclwiXSA9IFwiY29ubmVjdGlvbiBlcnJvclwiO1xuICAgIEVUd2l0dGVyU3RyZWFtRXZlbnRbXCJDb25uZWN0aW9uQ2xvc2VkXCJdID0gXCJjb25uZWN0aW9uIGNsb3NlZFwiO1xuICAgIEVUd2l0dGVyU3RyZWFtRXZlbnRbXCJDb25uZWN0aW9uTG9zdFwiXSA9IFwiY29ubmVjdGlvbiBsb3N0XCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIlJlY29ubmVjdEF0dGVtcHRcIl0gPSBcInJlY29ubmVjdCBhdHRlbXB0XCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIlJlY29ubmVjdGVkXCJdID0gXCJyZWNvbm5lY3RlZFwiO1xuICAgIEVUd2l0dGVyU3RyZWFtRXZlbnRbXCJSZWNvbm5lY3RFcnJvclwiXSA9IFwicmVjb25uZWN0IGVycm9yXCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIlJlY29ubmVjdExpbWl0RXhjZWVkZWRcIl0gPSBcInJlY29ubmVjdCBsaW1pdCBleGNlZWRlZFwiO1xuICAgIEVUd2l0dGVyU3RyZWFtRXZlbnRbXCJEYXRhS2VlcEFsaXZlXCJdID0gXCJkYXRhIGtlZXAtYWxpdmVcIjtcbiAgICBFVHdpdHRlclN0cmVhbUV2ZW50W1wiRGF0YVwiXSA9IFwiZGF0YSBldmVudCBjb250ZW50XCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIkRhdGFFcnJvclwiXSA9IFwiZGF0YSB0d2l0dGVyIGVycm9yXCI7XG4gICAgRVR3aXR0ZXJTdHJlYW1FdmVudFtcIlR3ZWV0UGFyc2VFcnJvclwiXSA9IFwiZGF0YSB0d2VldCBwYXJzZSBlcnJvclwiO1xuICAgIEVUd2l0dGVyU3RyZWFtRXZlbnRbXCJFcnJvclwiXSA9IFwic3RyZWFtIGVycm9yXCI7XG59KShFVHdpdHRlclN0cmVhbUV2ZW50IHx8IChFVHdpdHRlclN0cmVhbUV2ZW50ID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/client.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/errors.types.js":
/*!********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/errors.types.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiPartialResponseError: () => (/* binding */ ApiPartialResponseError),\n/* harmony export */   ApiRequestError: () => (/* binding */ ApiRequestError),\n/* harmony export */   ApiResponseError: () => (/* binding */ ApiResponseError),\n/* harmony export */   EApiV1ErrorCode: () => (/* binding */ EApiV1ErrorCode),\n/* harmony export */   EApiV2ErrorCode: () => (/* binding */ EApiV2ErrorCode),\n/* harmony export */   ETwitterApiError: () => (/* binding */ ETwitterApiError)\n/* harmony export */ });\nvar ETwitterApiError;\n(function (ETwitterApiError) {\n    ETwitterApiError[\"Request\"] = \"request\";\n    ETwitterApiError[\"PartialResponse\"] = \"partial-response\";\n    ETwitterApiError[\"Response\"] = \"response\";\n})(ETwitterApiError || (ETwitterApiError = {}));\n/* ERRORS INSTANCES */\nclass ApiError extends Error {\n    constructor() {\n        super(...arguments);\n        this.error = true;\n    }\n}\nclass ApiRequestError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Request;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get requestError() {\n        return this._options.requestError;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.requestError,\n        };\n    }\n}\nclass ApiPartialResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.PartialResponse;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    get responseError() {\n        return this._options.responseError;\n    }\n    get rawContent() {\n        return this._options.rawContent;\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            error: this.responseError,\n        };\n    }\n}\nclass ApiResponseError extends ApiError {\n    constructor(message, options) {\n        super(message);\n        this.type = ETwitterApiError.Response;\n        Error.captureStackTrace(this, this.constructor);\n        // Do not show on Node stack trace\n        Object.defineProperty(this, '_options', { value: options });\n        this.code = options.code;\n        this.headers = options.headers;\n        this.rateLimit = options.rateLimit;\n        // Fix bad error data payload on some v1 endpoints (see https://github.com/PLhery/node-twitter-api-v2/issues/342)\n        if (options.data && typeof options.data === 'object' && 'error' in options.data && !options.data.errors) {\n            const data = { ...options.data };\n            data.errors = [{\n                    code: EApiV1ErrorCode.InternalError,\n                    message: data.error,\n                }];\n            this.data = data;\n        }\n        else {\n            this.data = options.data;\n        }\n    }\n    get request() {\n        return this._options.request;\n    }\n    get response() {\n        return this._options.response;\n    }\n    /** Check for presence of one of given v1/v2 error codes. */\n    hasErrorCode(...codes) {\n        const errors = this.errors;\n        // No errors\n        if (!(errors === null || errors === void 0 ? void 0 : errors.length)) {\n            return false;\n        }\n        // v1 errors\n        if ('code' in errors[0]) {\n            const v1errors = errors;\n            return v1errors.some(error => codes.includes(error.code));\n        }\n        // v2 error\n        const v2error = this.data;\n        return codes.includes(v2error.type);\n    }\n    get errors() {\n        var _a;\n        return (_a = this.data) === null || _a === void 0 ? void 0 : _a.errors;\n    }\n    get rateLimitError() {\n        return this.code === 420 || this.code === 429;\n    }\n    get isAuthError() {\n        if (this.code === 401) {\n            return true;\n        }\n        return this.hasErrorCode(EApiV1ErrorCode.AuthTimestampInvalid, EApiV1ErrorCode.AuthenticationFail, EApiV1ErrorCode.BadAuthenticationData, EApiV1ErrorCode.InvalidOrExpiredToken);\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            code: this.code,\n            error: this.data,\n            rateLimit: this.rateLimit,\n            headers: this.headers,\n        };\n    }\n}\nvar EApiV1ErrorCode;\n(function (EApiV1ErrorCode) {\n    // Location errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidCoordinates\"] = 3] = \"InvalidCoordinates\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoLocationFound\"] = 13] = \"NoLocationFound\";\n    // Authentication failures\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthenticationFail\"] = 32] = \"AuthenticationFail\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidOrExpiredToken\"] = 89] = \"InvalidOrExpiredToken\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToVerifyCredentials\"] = 99] = \"UnableToVerifyCredentials\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AuthTimestampInvalid\"] = 135] = \"AuthTimestampInvalid\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"BadAuthenticationData\"] = 215] = \"BadAuthenticationData\";\n    // Resources not found or visible\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoUserMatch\"] = 17] = \"NoUserMatch\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UserNotFound\"] = 50] = \"UserNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ResourceNotFound\"] = 34] = \"ResourceNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotFound\"] = 144] = \"TweetNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNotVisible\"] = 179] = \"TweetNotVisible\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NotAllowedResource\"] = 220] = \"NotAllowedResource\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MediaIdNotFound\"] = 325] = \"MediaIdNotFound\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetNoLongerAvailable\"] = 421] = \"TweetNoLongerAvailable\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetViolatedRules\"] = 422] = \"TweetViolatedRules\";\n    // Account errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TargetUserSuspended\"] = 63] = \"TargetUserSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"YouAreSuspended\"] = 64] = \"YouAreSuspended\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountUpdateFailed\"] = 120] = \"AccountUpdateFailed\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfSpamReport\"] = 36] = \"NoSelfSpamReport\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoSelfMute\"] = 271] = \"NoSelfMute\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"AccountLocked\"] = 326] = \"AccountLocked\";\n    // Application live errors / Twitter errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RateLimitExceeded\"] = 88] = \"RateLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoDMRightForApp\"] = 93] = \"NoDMRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OverCapacity\"] = 130] = \"OverCapacity\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InternalError\"] = 131] = \"InternalError\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyFollowings\"] = 161] = \"TooManyFollowings\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetLimitExceeded\"] = 185] = \"TweetLimitExceeded\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DuplicatedTweet\"] = 187] = \"DuplicatedTweet\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManySpamReports\"] = 205] = \"TooManySpamReports\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"RequestLooksLikeSpam\"] = 226] = \"RequestLooksLikeSpam\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoWriteRightForApp\"] = 261] = \"NoWriteRightForApp\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetActionsDisabled\"] = 425] = \"TweetActionsDisabled\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetRepliesRestricted\"] = 433] = \"TweetRepliesRestricted\";\n    // Invalid request parameters\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NamedParameterMissing\"] = 38] = \"NamedParameterMissing\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidAttachmentUrl\"] = 44] = \"InvalidAttachmentUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetTextTooLong\"] = 186] = \"TweetTextTooLong\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MissingUrlParameter\"] = 195] = \"MissingUrlParameter\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"NoMultipleGifs\"] = 323] = \"NoMultipleGifs\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidMediaIds\"] = 324] = \"InvalidMediaIds\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"InvalidUrl\"] = 407] = \"InvalidUrl\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TooManyTweetAttachments\"] = 386] = \"TooManyTweetAttachments\";\n    // Already sent/deleted item\n    EApiV1ErrorCode[EApiV1ErrorCode[\"StatusAlreadyFavorited\"] = 139] = \"StatusAlreadyFavorited\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"FollowRequestAlreadySent\"] = 160] = \"FollowRequestAlreadySent\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotUnmuteANonMutedAccount\"] = 272] = \"CannotUnmuteANonMutedAccount\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"TweetAlreadyRetweeted\"] = 327] = \"TweetAlreadyRetweeted\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"ReplyToDeletedTweet\"] = 385] = \"ReplyToDeletedTweet\";\n    // DM Errors\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMReceiverNotFollowingYou\"] = 150] = \"DMReceiverNotFollowingYou\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"UnableToSendDM\"] = 151] = \"UnableToSendDM\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"MustAllowDMFromAnyone\"] = 214] = \"MustAllowDMFromAnyone\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CannotSendDMToThisUser\"] = 349] = \"CannotSendDMToThisUser\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"DMTextTooLong\"] = 354] = \"DMTextTooLong\";\n    // Application misconfiguration\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SubscriptionAlreadyExists\"] = 355] = \"SubscriptionAlreadyExists\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"CallbackUrlNotApproved\"] = 415] = \"CallbackUrlNotApproved\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"SuspendedApplication\"] = 416] = \"SuspendedApplication\";\n    EApiV1ErrorCode[EApiV1ErrorCode[\"OobOauthIsNotAllowed\"] = 417] = \"OobOauthIsNotAllowed\";\n})(EApiV1ErrorCode || (EApiV1ErrorCode = {}));\nvar EApiV2ErrorCode;\n(function (EApiV2ErrorCode) {\n    // Request errors\n    EApiV2ErrorCode[\"InvalidRequest\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#invalid-request\";\n    EApiV2ErrorCode[\"ClientForbidden\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#client-forbidden\";\n    EApiV2ErrorCode[\"UnsupportedAuthentication\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#unsupported-authentication\";\n    // Stream rules errors\n    EApiV2ErrorCode[\"InvalidRules\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#invalid-rules\";\n    EApiV2ErrorCode[\"TooManyRules\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#rule-cap\";\n    EApiV2ErrorCode[\"DuplicatedRules\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#duplicate-rules\";\n    // Twitter errors\n    EApiV2ErrorCode[\"RateLimitExceeded\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#usage-capped\";\n    EApiV2ErrorCode[\"ConnectionError\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#streaming-connection\";\n    EApiV2ErrorCode[\"ClientDisconnected\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#client-disconnected\";\n    EApiV2ErrorCode[\"TwitterDisconnectedYou\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#operational-disconnect\";\n    // Resource errors\n    EApiV2ErrorCode[\"ResourceNotFound\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#resource-not-found\";\n    EApiV2ErrorCode[\"ResourceUnauthorized\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#not-authorized-for-resource\";\n    EApiV2ErrorCode[\"DisallowedResource\"] = \"https://developer.x.com/en/support/x-api/error-troubleshooting#disallowed-resource\";\n})(EApiV2ErrorCode || (EApiV2ErrorCode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/errors.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiPartialResponseError: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.ApiPartialResponseError),\n/* harmony export */   ApiRequestError: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.ApiRequestError),\n/* harmony export */   ApiResponseError: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.ApiResponseError),\n/* harmony export */   EApiV1ErrorCode: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.EApiV1ErrorCode),\n/* harmony export */   EApiV2ErrorCode: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.EApiV2ErrorCode),\n/* harmony export */   EDirectMessageEventTypeV1: () => (/* reexport safe */ _v1__WEBPACK_IMPORTED_MODULE_0__.EDirectMessageEventTypeV1),\n/* harmony export */   ETwitterApiError: () => (/* reexport safe */ _errors_types__WEBPACK_IMPORTED_MODULE_2__.ETwitterApiError),\n/* harmony export */   ETwitterStreamEvent: () => (/* reexport safe */ _client_types__WEBPACK_IMPORTED_MODULE_4__.ETwitterStreamEvent),\n/* harmony export */   EUploadMimeType: () => (/* reexport safe */ _v1__WEBPACK_IMPORTED_MODULE_0__.EUploadMimeType),\n/* harmony export */   TwitterApiPluginResponseOverride: () => (/* reexport safe */ _plugins__WEBPACK_IMPORTED_MODULE_6__.TwitterApiPluginResponseOverride)\n/* harmony export */ });\n/* harmony import */ var _v1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/index.js\");\n/* harmony import */ var _v2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/index.js\");\n/* harmony import */ var _errors_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/errors.types.js\");\n/* harmony import */ var _responses_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./responses.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/responses.types.js\");\n/* harmony import */ var _client_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/client.types.js\");\n/* harmony import */ var _auth_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/auth.types.js\");\n/* harmony import */ var _plugins__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./plugins */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/index.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUI7QUFDQTtBQUNVO0FBQ0c7QUFDSDtBQUNGO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL2luZGV4LmpzPzFhOGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi92MSc7XG5leHBvcnQgKiBmcm9tICcuL3YyJztcbmV4cG9ydCAqIGZyb20gJy4vZXJyb3JzLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vcmVzcG9uc2VzLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vY2xpZW50LnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vYXV0aC50eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL3BsdWdpbnMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/client.plugins.types.js":
/*!************************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/plugins/client.plugins.types.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiPluginResponseOverride: () => (/* binding */ TwitterApiPluginResponseOverride)\n/* harmony export */ });\nclass TwitterApiPluginResponseOverride {\n    constructor(value) {\n        this.value = value;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcGx1Z2lucy9jbGllbnQucGx1Z2lucy50eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcGx1Z2lucy9jbGllbnQucGx1Z2lucy50eXBlcy5qcz8xYTc5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUd2l0dGVyQXBpUGx1Z2luUmVzcG9uc2VPdmVycmlkZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/client.plugins.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/plugins/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiPluginResponseOverride: () => (/* reexport safe */ _client_plugins_types__WEBPACK_IMPORTED_MODULE_0__.TwitterApiPluginResponseOverride)\n/* harmony export */ });\n/* harmony import */ var _client_plugins_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.plugins.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/client.plugins.types.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcGx1Z2lucy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcGx1Z2lucy9pbmRleC5qcz80NGM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vY2xpZW50LnBsdWdpbnMudHlwZXMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/plugins/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/responses.types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/responses.types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcmVzcG9uc2VzLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvcmVzcG9uc2VzLnR5cGVzLmpzP2NkMTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/responses.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dev-utilities.v1.types.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/dev-utilities.v1.types.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZGV2LXV0aWxpdGllcy52MS50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YxL2Rldi11dGlsaXRpZXMudjEudHlwZXMuanM/OTNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dev-utilities.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dm.v1.types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/dm.v1.types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EDirectMessageEventTypeV1: () => (/* binding */ EDirectMessageEventTypeV1)\n/* harmony export */ });\n// Creation of DMs\nvar EDirectMessageEventTypeV1;\n(function (EDirectMessageEventTypeV1) {\n    EDirectMessageEventTypeV1[\"Create\"] = \"message_create\";\n    EDirectMessageEventTypeV1[\"WelcomeCreate\"] = \"welcome_message\";\n})(EDirectMessageEventTypeV1 || (EDirectMessageEventTypeV1 = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZG0udjEudHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhEQUE4RCIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZG0udjEudHlwZXMuanM/ZDU5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDcmVhdGlvbiBvZiBETXNcbmV4cG9ydCB2YXIgRURpcmVjdE1lc3NhZ2VFdmVudFR5cGVWMTtcbihmdW5jdGlvbiAoRURpcmVjdE1lc3NhZ2VFdmVudFR5cGVWMSkge1xuICAgIEVEaXJlY3RNZXNzYWdlRXZlbnRUeXBlVjFbXCJDcmVhdGVcIl0gPSBcIm1lc3NhZ2VfY3JlYXRlXCI7XG4gICAgRURpcmVjdE1lc3NhZ2VFdmVudFR5cGVWMVtcIldlbGNvbWVDcmVhdGVcIl0gPSBcIndlbGNvbWVfbWVzc2FnZVwiO1xufSkoRURpcmVjdE1lc3NhZ2VFdmVudFR5cGVWMSB8fCAoRURpcmVjdE1lc3NhZ2VFdmVudFR5cGVWMSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dm.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/entities.v1.types.js":
/*!****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/entities.v1.types.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZW50aXRpZXMudjEudHlwZXMuanMiLCJtYXBwaW5ncyI6IjtBQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS90eXBlcy92MS9lbnRpdGllcy52MS50eXBlcy5qcz8yNzhhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/entities.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/geo.v1.types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/geo.v1.types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZ2VvLnYxLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvZ2VvLnYxLnR5cGVzLmpzPzFlZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/geo.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EDirectMessageEventTypeV1: () => (/* reexport safe */ _dm_v1_types__WEBPACK_IMPORTED_MODULE_7__.EDirectMessageEventTypeV1),\n/* harmony export */   EUploadMimeType: () => (/* reexport safe */ _tweet_v1_types__WEBPACK_IMPORTED_MODULE_1__.EUploadMimeType)\n/* harmony export */ });\n/* harmony import */ var _streaming_v1_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./streaming.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/streaming.v1.types.js\");\n/* harmony import */ var _tweet_v1_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tweet.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/tweet.v1.types.js\");\n/* harmony import */ var _entities_v1_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entities.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/entities.v1.types.js\");\n/* harmony import */ var _user_v1_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./user.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/user.v1.types.js\");\n/* harmony import */ var _dev_utilities_v1_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dev-utilities.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dev-utilities.v1.types.js\");\n/* harmony import */ var _geo_v1_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geo.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/geo.v1.types.js\");\n/* harmony import */ var _trends_v1_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./trends.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/trends.v1.types.js\");\n/* harmony import */ var _dm_v1_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dm.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/dm.v1.types.js\");\n/* harmony import */ var _list_v1_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./list.v1.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/list.v1.types.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDSjtBQUNHO0FBQ0o7QUFDUztBQUNWO0FBQ0c7QUFDSjtBQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS90eXBlcy92MS9pbmRleC5qcz9mMmVlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vc3RyZWFtaW5nLnYxLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vdHdlZXQudjEudHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdGllcy52MS50eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL3VzZXIudjEudHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9kZXYtdXRpbGl0aWVzLnYxLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vZ2VvLnYxLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vdHJlbmRzLnYxLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vZG0udjEudHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9saXN0LnYxLnR5cGVzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/list.v1.types.js":
/*!************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/list.v1.types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvbGlzdC52MS50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YxL2xpc3QudjEudHlwZXMuanM/YzBjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/list.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/streaming.v1.types.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/streaming.v1.types.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvc3RyZWFtaW5nLnYxLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvc3RyZWFtaW5nLnYxLnR5cGVzLmpzPzU0N2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/streaming.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/trends.v1.types.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/trends.v1.types.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvdHJlbmRzLnYxLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvdHJlbmRzLnYxLnR5cGVzLmpzPzBlYzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/trends.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/tweet.v1.types.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/tweet.v1.types.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EUploadMimeType: () => (/* binding */ EUploadMimeType)\n/* harmony export */ });\nvar EUploadMimeType;\n(function (EUploadMimeType) {\n    EUploadMimeType[\"Jpeg\"] = \"image/jpeg\";\n    EUploadMimeType[\"Mp4\"] = \"video/mp4\";\n    EUploadMimeType[\"Mov\"] = \"video/quicktime\";\n    EUploadMimeType[\"Gif\"] = \"image/gif\";\n    EUploadMimeType[\"Png\"] = \"image/png\";\n    EUploadMimeType[\"Srt\"] = \"text/plain\";\n    EUploadMimeType[\"Webp\"] = \"image/webp\";\n})(EUploadMimeType || (EUploadMimeType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvdHdlZXQudjEudHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS90eXBlcy92MS90d2VldC52MS50eXBlcy5qcz9hNmQyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRVVwbG9hZE1pbWVUeXBlO1xuKGZ1bmN0aW9uIChFVXBsb2FkTWltZVR5cGUpIHtcbiAgICBFVXBsb2FkTWltZVR5cGVbXCJKcGVnXCJdID0gXCJpbWFnZS9qcGVnXCI7XG4gICAgRVVwbG9hZE1pbWVUeXBlW1wiTXA0XCJdID0gXCJ2aWRlby9tcDRcIjtcbiAgICBFVXBsb2FkTWltZVR5cGVbXCJNb3ZcIl0gPSBcInZpZGVvL3F1aWNrdGltZVwiO1xuICAgIEVVcGxvYWRNaW1lVHlwZVtcIkdpZlwiXSA9IFwiaW1hZ2UvZ2lmXCI7XG4gICAgRVVwbG9hZE1pbWVUeXBlW1wiUG5nXCJdID0gXCJpbWFnZS9wbmdcIjtcbiAgICBFVXBsb2FkTWltZVR5cGVbXCJTcnRcIl0gPSBcInRleHQvcGxhaW5cIjtcbiAgICBFVXBsb2FkTWltZVR5cGVbXCJXZWJwXCJdID0gXCJpbWFnZS93ZWJwXCI7XG59KShFVXBsb2FkTWltZVR5cGUgfHwgKEVVcGxvYWRNaW1lVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/tweet.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/user.v1.types.js":
/*!************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v1/user.v1.types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjEvdXNlci52MS50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YxL3VzZXIudjEudHlwZXMuanM/MmE0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v1/user.v1.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/community.v2.types.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/community.v2.types.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvY29tbXVuaXR5LnYyLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvY29tbXVuaXR5LnYyLnR5cGVzLmpzPzJjYWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/community.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _streaming_v2_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./streaming.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/streaming.v2.types.js\");\n/* harmony import */ var _tweet_v2_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tweet.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.v2.types.js\");\n/* harmony import */ var _tweet_definition_v2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tweet.definition.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.definition.v2.js\");\n/* harmony import */ var _user_v2_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./user.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/user.v2.types.js\");\n/* harmony import */ var _spaces_v2_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spaces.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/spaces.v2.types.js\");\n/* harmony import */ var _list_v2_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./list.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/list.v2.types.js\");\n/* harmony import */ var _community_v2_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./community.v2.types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/community.v2.types.js\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUM7QUFDSjtBQUNLO0FBQ047QUFDRTtBQUNGO0FBQ0siLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YyL2luZGV4LmpzP2M1Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9zdHJlYW1pbmcudjIudHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi90d2VldC52Mi50eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL3R3ZWV0LmRlZmluaXRpb24udjInO1xuZXhwb3J0ICogZnJvbSAnLi91c2VyLnYyLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vc3BhY2VzLnYyLnR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vbGlzdC52Mi50eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbW11bml0eS52Mi50eXBlcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/list.v2.types.js":
/*!************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/list.v2.types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvbGlzdC52Mi50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YyL2xpc3QudjIudHlwZXMuanM/ZjFmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/list.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/spaces.v2.types.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/spaces.v2.types.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvc3BhY2VzLnYyLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvc3BhY2VzLnYyLnR5cGVzLmpzPzNmNmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/spaces.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/streaming.v2.types.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/streaming.v2.types.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// ---------------\n// -- Streaming --\n// ---------------\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvc3RyZWFtaW5nLnYyLnR5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDVSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvc3RyZWFtaW5nLnYyLnR5cGVzLmpzP2Q1ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLS0tLS0tLS0tLS0tLS0tXG4vLyAtLSBTdHJlYW1pbmcgLS1cbi8vIC0tLS0tLS0tLS0tLS0tLVxuZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/streaming.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.definition.v2.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.definition.v2.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvdHdlZXQuZGVmaW5pdGlvbi52Mi5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YyL3R3ZWV0LmRlZmluaXRpb24udjIuanM/MDY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.definition.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.v2.types.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.v2.types.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvdHdlZXQudjIudHlwZXMuanMiLCJtYXBwaW5ncyI6IjtBQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS90eXBlcy92Mi90d2VldC52Mi50eXBlcy5qcz80NjE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/tweet.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/user.v2.types.js":
/*!************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/types/v2/user.v2.types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdHlwZXMvdjIvdXNlci52Mi50eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3R5cGVzL3YyL3VzZXIudjIudHlwZXMuanM/ODQ4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/types/v2/user.v2.types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js":
/*!**************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiv1: () => (/* binding */ TwitterApiv1),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _paginators_dm_paginator_v1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../paginators/dm.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v1.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var _client_v1_write__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client.v1.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js\");\n\n\n\n\n/**\n * Twitter v1.1 API client with read/write/DMs rights.\n */\nclass TwitterApiv1 extends _client_v1_write__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /* Direct messages */\n    // Part: Sending and receiving events\n    /**\n     * Publishes a new message_create event resulting in a Direct Message sent to a specified user from the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event\n     */\n    sendDm({ recipient_id, custom_profile_id, ...params }) {\n        const args = {\n            event: {\n                type: _types__WEBPACK_IMPORTED_MODULE_2__.EDirectMessageEventTypeV1.Create,\n                [_types__WEBPACK_IMPORTED_MODULE_2__.EDirectMessageEventTypeV1.Create]: {\n                    target: { recipient_id },\n                    message_data: params,\n                },\n            },\n        };\n        if (custom_profile_id) {\n            args.event[_types__WEBPACK_IMPORTED_MODULE_2__.EDirectMessageEventTypeV1.Create].custom_profile_id = custom_profile_id;\n        }\n        return this.post('direct_messages/events/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a single Direct Message event by the given id.\n     *\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/get-event\n     */\n    getDmEvent(id) {\n        return this.get('direct_messages/events/show.json', { id });\n    }\n    /**\n     * Deletes the direct message specified in the required ID parameter.\n     * The authenticating user must be the recipient of the specified direct message.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/delete-message-event\n     */\n    deleteDm(id) {\n        return this.delete('direct_messages/events/destroy.json', { id });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listDmEvents(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/events/list.json', queryParams, { fullResponse: true });\n        return new _paginators_dm_paginator_v1__WEBPACK_IMPORTED_MODULE_1__.DmEventsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome messages (events)\n    /**\n     * Creates a new Welcome Message that will be stored and sent in the future from the authenticating user in defined circumstances.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message\n     */\n    newWelcomeDm(name, data) {\n        const args = {\n            [_types__WEBPACK_IMPORTED_MODULE_2__.EDirectMessageEventTypeV1.WelcomeCreate]: {\n                name,\n                message_data: data,\n            },\n        };\n        return this.post('direct_messages/welcome_messages/new.json', args, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message by the given id.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message\n     */\n    getWelcomeDm(id) {\n        return this.get('direct_messages/welcome_messages/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message by the given id.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message\n     */\n    deleteWelcomeDm(id) {\n        return this.delete('direct_messages/welcome_messages/destroy.json', { id });\n    }\n    /**\n     * Updates a Welcome Message by the given ID.\n     * Updates to the welcome_message object are atomic.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/update-welcome-message\n     */\n    updateWelcomeDm(id, data) {\n        const args = { message_data: data };\n        return this.put('direct_messages/welcome_messages/update.json', args, {\n            forceBodyMode: 'json',\n            query: { id },\n        });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n    async listWelcomeDms(args = {}) {\n        const queryParams = { ...args };\n        const initialRq = await this.get('direct_messages/welcome_messages/list.json', queryParams, { fullResponse: true });\n        return new _paginators_dm_paginator_v1__WEBPACK_IMPORTED_MODULE_1__.WelcomeDmV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    // Part: Welcome message (rules)\n    /**\n     * Creates a new Welcome Message Rule that determines which Welcome Message will be shown in a given conversation.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message-rule\n     */\n    newWelcomeDmRule(welcomeMessageId) {\n        return this.post('direct_messages/welcome_messages/rules/new.json', {\n            welcome_message_rule: { welcome_message_id: welcomeMessageId },\n        }, {\n            forceBodyMode: 'json',\n        });\n    }\n    /**\n     * Returns a Welcome Message Rule by the given id.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message-rule\n     */\n    getWelcomeDmRule(id) {\n        return this.get('direct_messages/welcome_messages/rules/show.json', { id });\n    }\n    /**\n     * Deletes a Welcome Message Rule by the given id.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message-rule\n     */\n    deleteWelcomeDmRule(id) {\n        return this.delete('direct_messages/welcome_messages/rules/destroy.json', { id });\n    }\n    /**\n     * Retrieves all welcome DM rules for this account.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/list-welcome-message-rules\n     */\n    async listWelcomeDmRules(args = {}) {\n        const queryParams = { ...args };\n        return this.get('direct_messages/welcome_messages/rules/list.json', queryParams);\n    }\n    /**\n     * Set the current showed welcome message for logged account ; wrapper for Welcome DM rules.\n     * Test if a rule already exists, delete if any, then create a rule for current message ID.\n     *\n     * If you don't have already a welcome message, create it with `.newWelcomeMessage`.\n     */\n    async setWelcomeDm(welcomeMessageId, deleteAssociatedWelcomeDmWhenDeletingRule = true) {\n        var _a;\n        const existingRules = await this.listWelcomeDmRules();\n        if ((_a = existingRules.welcome_message_rules) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const rule of existingRules.welcome_message_rules) {\n                await this.deleteWelcomeDmRule(rule.id);\n                if (deleteAssociatedWelcomeDmWhenDeletingRule) {\n                    await this.deleteWelcomeDm(rule.welcome_message_id);\n                }\n            }\n        }\n        return this.newWelcomeDmRule(welcomeMessageId);\n    }\n    // Part: Read indicator\n    /**\n     * Marks a message as read in the recipient’s Direct Message conversation view with the sender.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-read-receipt\n     */\n    markDmAsRead(lastEventId, recipientId) {\n        return this.post('direct_messages/mark_read.json', {\n            last_read_event_id: lastEventId,\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    /**\n     * Displays a visual typing indicator in the recipient’s Direct Message conversation view with the sender.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-typing-indicator\n     */\n    indicateDmTyping(recipientId) {\n        return this.post('direct_messages/indicate_typing.json', {\n            recipient_id: recipientId,\n        }, { forceBodyMode: 'url' });\n    }\n    // Part: Images\n    /**\n     * Get a single image attached to a direct message. TwitterApi client must be logged with OAuth 1.0a.\n     * https://developer.x.com/en/docs/twitter-api/v1/direct-messages/message-attachments/guides/retrieving-media\n     */\n    async downloadDmImage(urlOrDm) {\n        if (typeof urlOrDm !== 'string') {\n            const attachment = urlOrDm[_types__WEBPACK_IMPORTED_MODULE_2__.EDirectMessageEventTypeV1.Create].message_data.attachment;\n            if (!attachment) {\n                throw new Error('The given direct message doesn\\'t contain any attachment');\n            }\n            urlOrDm = attachment.media.media_url_https;\n        }\n        const data = await this.get(urlOrDm, undefined, { forceParseMode: 'buffer', prefix: '' });\n        if (!data.length) {\n            throw new Error('Image not found. Make sure you are logged with credentials able to access direct messages, and check the URL.');\n        }\n        return data;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterApiv1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv1ReadOnly)\n/* harmony export */ });\n/* harmony import */ var _client_subclient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.subclient */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _v1_client_v1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../v1/client.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.js\");\n/* harmony import */ var _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../paginators/tweet.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/tweet.paginator.v1.js\");\n/* harmony import */ var _paginators_mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../paginators/mutes.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/mutes.paginator.v1.js\");\n/* harmony import */ var _paginators_followers_paginator_v1__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../paginators/followers.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/followers.paginator.v1.js\");\n/* harmony import */ var _paginators_friends_paginator_v1__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../paginators/friends.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/friends.paginator.v1.js\");\n/* harmony import */ var _paginators_user_paginator_v1__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../paginators/user.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v1.js\");\n/* harmony import */ var _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../paginators/list.paginator.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/list.paginator.v1.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Base Twitter v1 client with only read right.\n */\nclass TwitterApiv1ReadOnly extends _client_subclient__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_PREFIX;\n    }\n    /* Tweets */\n    /**\n     * Returns a single Tweet, specified by the id parameter. The Tweet's author will also be embedded within the Tweet.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-show-id\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('statuses/show.json', { tweet_mode: 'extended', id: tweetId, ...options });\n    }\n    tweets(ids, options = {}) {\n        return this.post('statuses/lookup.json', { tweet_mode: 'extended', id: ids, ...options });\n    }\n    /**\n     * Returns a single Tweet, specified by either a Tweet web URL or the Tweet ID, in an oEmbed-compatible format.\n     * The returned HTML snippet will be automatically recognized as an Embedded Tweet when Twitter's widget JavaScript is included on the page.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-statuses-oembed\n     */\n    oembedTweet(tweetId, options = {}) {\n        return this.get('oembed', {\n            url: `https://x.com/i/statuses/${tweetId}`,\n            ...options,\n        }, { prefix: 'https://publish.x.com/' });\n    }\n    /* Tweets timelines */\n    /**\n     * Returns a collection of the most recent Tweets and Retweets posted by the authenticating user and the users they follow.\n     * The home timeline is central to how most users interact with the Twitter service.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-home_timeline\n     */\n    async homeTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/home_timeline.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.HomeTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the 20 most recent mentions (Tweets containing a users's @screen_name) for the authenticating user.\n     * The timeline returned is the equivalent of the one seen when you view your mentions on x.com.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-mentions_timeline\n     */\n    async mentionTimeline(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('statuses/mentions_timeline.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.MentionTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the user_id parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of the most recent Tweets posted by the user indicated by the screen_name parameters.\n     * User timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/timelines/api-reference/get-statuses-user_timeline\n     */\n    async userTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('statuses/user_timeline.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimeline(userId, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            user_id: userId,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the most recent Tweets liked by the authenticating or specified user, 20 tweets by default.\n     * Note: favorites are now known as likes.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/get-favorites-list\n     */\n    async favoriteTimelineByUsername(username, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            screen_name: username,\n            ...options,\n        };\n        const initialRq = await this.get('favorites/list.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.UserFavoritesV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Users */\n    /**\n     * Returns a variety of information about the user specified by the required user_id or screen_name parameter.\n     * The author's most recent Tweet will be returned inline when possible.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-show\n     */\n    user(user) {\n        return this.get('users/show.json', { tweet_mode: 'extended', ...user });\n    }\n    /**\n     * Returns fully-hydrated user objects for up to 100 users per request,\n     * as specified by comma-separated values passed to the user_id and/or screen_name parameters.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-lookup\n     */\n    users(query) {\n        return this.get('users/lookup.json', { tweet_mode: 'extended', ...query });\n    }\n    /**\n     * Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful;\n     * returns a 401 status code and an error message if not.\n     * Use this method to test if supplied user credentials are valid.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-verify_credentials\n     */\n    verifyCredentials(options = {}) {\n        return this.get('account/verify_credentials.json', options);\n    }\n    /**\n     * Returns an array of user objects the authenticating user has muted.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-list\n     */\n    async listMutedUsers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/list.json', queryParams, { fullResponse: true });\n        return new _paginators_mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_5__.MuteUserListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids the authenticating user has muted.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/get-mutes-users-ids\n     */\n    async listMutedUserIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('mutes/users/ids.json', queryParams, { fullResponse: true });\n        return new _paginators_mutes_paginator_v1__WEBPACK_IMPORTED_MODULE_5__.MuteUserIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of friends of the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-list\n     */\n    async userFriendList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('friends/list.json', queryParams, { fullResponse: true });\n        return new _paginators_friends_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.UserFriendListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of user objects of followers of the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-list\n     */\n    async userFollowerList(options = {}) {\n        const queryParams = {\n            ...options,\n        };\n        const initialRq = await this.get('followers/list.json', queryParams, { fullResponse: true });\n        return new _paginators_followers_paginator_v1__WEBPACK_IMPORTED_MODULE_6__.UserFollowerListV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of followers of the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-followers-ids\n     */\n    async userFollowerIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('followers/ids.json', queryParams, { fullResponse: true });\n        return new _paginators_followers_paginator_v1__WEBPACK_IMPORTED_MODULE_6__.UserFollowerIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns an array of numeric user ids of friends of the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids\n     */\n    async userFollowingIds(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friends/ids.json', queryParams, { fullResponse: true });\n        return new _paginators_friends_paginator_v1__WEBPACK_IMPORTED_MODULE_7__.UserFollowersIdsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Provides a simple, relevance-based search interface to public user accounts on Twitter.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-users-search\n     */\n    async searchUsers(query, options = {}) {\n        const queryParams = {\n            q: query,\n            tweet_mode: 'extended',\n            page: 1,\n            ...options,\n        };\n        const initialRq = await this.get('users/search.json', queryParams, { fullResponse: true });\n        return new _paginators_user_paginator_v1__WEBPACK_IMPORTED_MODULE_8__.UserSearchV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Friendship API */\n    /**\n     * Returns detailed information about the relationship between two arbitrary users.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-show\n     */\n    friendship(sources) {\n        return this.get('friendships/show.json', sources);\n    }\n    /**\n     * Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-lookup\n     */\n    friendships(friendships) {\n        return this.get('friendships/lookup.json', friendships);\n    }\n    /**\n     * Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-no_retweets-ids\n     */\n    friendshipsNoRetweets() {\n        return this.get('friendships/no_retweets/ids.json', { stringify_ids: true });\n    }\n    /**\n     * Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-incoming\n     */\n    async friendshipsIncoming(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/incoming.json', queryParams, { fullResponse: true });\n        return new _paginators_user_paginator_v1__WEBPACK_IMPORTED_MODULE_8__.FriendshipsIncomingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/get-friendships-outgoing\n     */\n    async friendshipsOutgoing(options = {}) {\n        const queryParams = {\n            stringify_ids: true,\n            ...options,\n        };\n        const initialRq = await this.get('friendships/outgoing.json', queryParams, { fullResponse: true });\n        return new _paginators_user_paginator_v1__WEBPACK_IMPORTED_MODULE_8__.FriendshipsOutgoingV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Account/user API */\n    /**\n     * Get current account settings for authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    accountSettings() {\n        return this.get('account/settings.json');\n    }\n    /**\n     * Returns a map of the available size variations of the specified user's profile banner.\n     * If the user has not uploaded a profile banner, a HTTP 404 will be served instead.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-users-profile_banner\n     */\n    userProfileBannerSizes(params) {\n        return this.get('users/profile_banner.json', params);\n    }\n    /* Lists */\n    /**\n     * Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-show\n     */\n    list(options) {\n        return this.get('lists/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns all lists the authenticating or specified user subscribes to, including their own.\n     * If no user is given, the authenticating user is used.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-list\n     */\n    lists(options = {}) {\n        return this.get('lists/list.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members\n     */\n    async listMembers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/members.json', queryParams, { fullResponse: true });\n        return new _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.ListMembersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a member of the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-members-show\n     */\n    listGetMember(options) {\n        return this.get('lists/members/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Returns the lists the specified user has been added to.\n     * If user_id or screen_name are not provided, the memberships for the authenticating user are returned.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-memberships\n     */\n    async listMemberships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/memberships.json', queryParams, { fullResponse: true });\n        return new _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.ListMembershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-ownerships\n     */\n    async listOwnerships(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/ownerships.json', queryParams, { fullResponse: true });\n        return new _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.ListOwnershipsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a timeline of tweets authored by members of the specified list. Retweets are included by default.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-statuses\n     */\n    async listStatuses(options) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/statuses.json', queryParams, { fullResponse: true });\n        return new _paginators_tweet_paginator_v1__WEBPACK_IMPORTED_MODULE_4__.ListTimelineV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers\n     */\n    async listSubscribers(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscribers.json', queryParams, { fullResponse: true });\n        return new _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.ListSubscribersV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Check if the specified user is a subscriber of the specified list. Returns the user if they are a subscriber.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscribers-show\n     */\n    listGetSubscriber(options) {\n        return this.get('lists/subscribers/show.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.\n     * Does not include the user's own lists.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/get-lists-subscriptions\n     */\n    async listSubscriptions(options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            ...options,\n        };\n        const initialRq = await this.get('lists/subscriptions.json', queryParams, { fullResponse: true });\n        return new _paginators_list_paginator_v1__WEBPACK_IMPORTED_MODULE_9__.ListSubscriptionsV1Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /* Media upload API */\n    /**\n     * The STATUS command (this method) is used to periodically poll for updates of media processing operation.\n     * After the STATUS command response returns succeeded, you can move on to the next step which is usually create Tweet with media_id.\n     * https://developer.x.com/en/docs/twitter-api/v1/media/upload-media/api-reference/get-media-upload-status\n     */\n    mediaInfo(mediaId) {\n        return this.get('media/upload.json', {\n            command: 'STATUS',\n            media_id: mediaId,\n        }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX });\n    }\n    filterStream({ autoConnect, ...params } = {}) {\n        const parameters = {};\n        for (const [key, value] of Object.entries(params)) {\n            if (key === 'follow' || key === 'track') {\n                parameters[key] = value.toString();\n            }\n            else if (key === 'locations') {\n                const locations = value;\n                parameters.locations = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.arrayWrap)(locations).map(loc => `${loc.lng},${loc.lat}`).join(',');\n            }\n            else {\n                parameters[key] = value;\n            }\n        }\n        const streamClient = this.stream;\n        return streamClient.postStream('statuses/filter.json', parameters, { autoConnect });\n    }\n    sampleStream({ autoConnect, ...params } = {}) {\n        const streamClient = this.stream;\n        return streamClient.getStream('statuses/sample.json', params, { autoConnect });\n    }\n    /**\n     * Create a client that is prefixed with `https//stream.x.com` instead of classic API URL.\n     */\n    get stream() {\n        const copiedClient = new _v1_client_v1__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n        copiedClient.setPrefix(_globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_STREAM_PREFIX);\n        return copiedClient;\n    }\n    /* Trends API */\n    /**\n     * Returns the top 50 trending topics for a specific id, if trending information is available for it.\n     * Note: The id parameter for this endpoint is the \"where on earth identifier\" or WOEID, which is a legacy identifier created by Yahoo and has been deprecated.\n     * https://developer.x.com/en/docs/twitter-api/v1/trends/trends-for-location/api-reference/get-trends-place\n     */\n    trendsByPlace(woeId, options = {}) {\n        return this.get('trends/place.json', { id: woeId, ...options });\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for.\n     * The response is an array of \"locations\" that encode the location's WOEID\n     * and some other human-readable information such as a canonical name and country the location belongs in.\n     * https://developer.x.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-available\n     */\n    trendsAvailable() {\n        return this.get('trends/available.json');\n    }\n    /**\n     * Returns the locations that Twitter has trending topic information for, closest to a specified location.\n     * https://developer.x.com/en/docs/twitter-api/v1/trends/locations-with-trending-topics/api-reference/get-trends-closest\n     */\n    trendsClosest(lat, long) {\n        return this.get('trends/closest.json', { lat, long });\n    }\n    /* Geo API */\n    /**\n     * Returns all the information about a known place.\n     * https://developer.x.com/en/docs/twitter-api/v1/geo/place-information/api-reference/get-geo-id-place_id\n     */\n    geoPlace(placeId) {\n        return this.get('geo/id/:place_id.json', undefined, { params: { place_id: placeId } });\n    }\n    /**\n     * Search for places that can be attached to a Tweet via POST statuses/update.\n     * This request will return a list of all the valid places that can be used as the place_id when updating a status.\n     * https://developer.x.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-search\n     */\n    geoSearch(options) {\n        return this.get('geo/search.json', options);\n    }\n    /**\n     * Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status.\n     * This request is an informative call and will deliver generalized results about geography.\n     * https://developer.x.com/en/docs/twitter-api/v1/geo/places-near-location/api-reference/get-geo-reverse_geocode\n     */\n    geoReverseGeoCode(options) {\n        return this.get('geo/reverse_geocode.json', options);\n    }\n    /* Developer utilities */\n    /**\n     * Returns the current rate limits for methods belonging to the specified resource families.\n     * Each API resource belongs to a \"resource family\" which is indicated in its method documentation.\n     * The method's resource family can be determined from the first component of the path after the resource version.\n     * https://developer.x.com/en/docs/twitter-api/v1/developer-utilities/rate-limit-status/api-reference/get-application-rate_limit_status\n     */\n    rateLimitStatuses(...resources) {\n        return this.get('application/rate_limit_status.json', { resources });\n    }\n    /**\n     * Returns the list of languages supported by Twitter along with the language code supported by Twitter.\n     * https://developer.x.com/en/docs/twitter-api/v1/developer-utilities/supported-languages/api-reference/get-help-languages\n     */\n    supportedLanguages() {\n        return this.get('help/languages.json');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js":
/*!********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv1ReadWrite)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n/* harmony import */ var _client_v1_read__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client.v1.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.read.js\");\n/* harmony import */ var _media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./media-helpers.v1 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/media-helpers.v1.js\");\n\n\n\n\n\n\nconst UPLOAD_ENDPOINT = 'media/upload.json';\n/**\n * Base Twitter v1 client with read/write rights.\n */\nclass TwitterApiv1ReadWrite extends _client_v1_read__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /* Tweet API */\n    /**\n     * Post a new tweet.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    tweet(status, payload = {}) {\n        const queryParams = {\n            status,\n            tweet_mode: 'extended',\n            ...payload,\n        };\n        return this.post('statuses/update.json', queryParams);\n    }\n    /**\n     * Quote an existing tweet.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async quote(status, quotingStatusId, payload = {}) {\n        const url = 'https://x.com/i/statuses/' + quotingStatusId;\n        return this.tweet(status, { ...payload, attachment_url: url });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    async tweetThread(tweets) {\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ status: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.id_str : queryParams.in_reply_to_status_id;\n            const status = queryParams.status;\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Reply to an existing tweet. Shortcut to `.tweet` with tweaked parameters.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-update\n     */\n    reply(status, in_reply_to_status_id, payload = {}) {\n        return this.tweet(status, {\n            auto_populate_reply_metadata: true,\n            in_reply_to_status_id,\n            ...payload,\n        });\n    }\n    /**\n     * Delete an existing tweet belonging to you.\n     * https://developer.x.com/en/docs/twitter-api/v1/tweets/post-and-engage/api-reference/post-statuses-destroy-id\n     */\n    deleteTweet(tweetId) {\n        return this.post('statuses/destroy/:id.json', { tweet_mode: 'extended' }, { params: { id: tweetId } });\n    }\n    /* User API */\n    /**\n     * Report the specified user as a spam account to Twitter.\n     * Additionally, optionally performs the equivalent of POST blocks/create on behalf of the authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/mute-block-report-users/api-reference/post-users-report_spam\n     */\n    reportUserAsSpam(options) {\n        return this.post('users/report_spam.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Turn on/off Retweets and device notifications from the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-update\n     */\n    updateFriendship(options) {\n        return this.post('friendships/update.json', options);\n    }\n    /**\n     * Follow the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-create\n     */\n    createFriendship(options) {\n        return this.post('friendships/create.json', options);\n    }\n    /**\n     * Unfollow the specified user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/follow-search-get-users/api-reference/post-friendships-destroy\n     */\n    destroyFriendship(options) {\n        return this.post('friendships/destroy.json', options);\n    }\n    /* Account API */\n    /**\n     * Update current account settings for authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/get-account-settings\n     */\n    updateAccountSettings(options) {\n        return this.post('account/settings.json', options);\n    }\n    /**\n     * Sets some values that users are able to set under the \"Account\" tab of their settings page.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile\n     */\n    updateAccountProfile(options) {\n        return this.post('account/update_profile.json', options);\n    }\n    /**\n     * Uploads a profile banner on behalf of the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_banner\n     */\n    async updateAccountProfileBanner(file, options = {}) {\n        const queryParams = {\n            banner: await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_banner.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Updates the authenticating user's profile image.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-update_profile_image\n     */\n    async updateAccountProfileImage(file, options = {}) {\n        const queryParams = {\n            tweet_mode: 'extended',\n            image: await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.readFileIntoBuffer)(file),\n            ...options,\n        };\n        return this.post('account/update_profile_image.json', queryParams, { forceBodyMode: 'form-data' });\n    }\n    /**\n     * Removes the uploaded profile banner for the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/manage-account-settings/api-reference/post-account-remove_profile_banner\n     */\n    removeAccountProfileBanner() {\n        return this.post('account/remove_profile_banner.json');\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-create\n     */\n    createList(options) {\n        return this.post('lists/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-update\n     */\n    updateList(options) {\n        return this.post('lists/update.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-destroy\n     */\n    removeList(options) {\n        return this.post('lists/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/create.json`, otherwise\n     * it will target `lists/members/create_all.json`.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-create_all\n     */\n    addListMembers(options) {\n        const hasMultiple = (options.user_id && (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.hasMultipleItems)(options.user_id)) || (options.screen_name && (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/create_all.json' : 'lists/members/create.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Removes multiple members to a list, by specifying a comma-separated list of member ids or screen names.\n     * If you add a single `user_id` or `screen_name`, it will target `lists/members/destroy.json`, otherwise\n     * it will target `lists/members/destroy_all.json`.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-members-destroy_all\n     */\n    removeListMembers(options) {\n        const hasMultiple = (options.user_id && (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.hasMultipleItems)(options.user_id)) || (options.screen_name && (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.hasMultipleItems)(options.screen_name));\n        const endpoint = hasMultiple ? 'lists/members/destroy_all.json' : 'lists/members/destroy.json';\n        return this.post(endpoint, options);\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-create\n     */\n    subscribeToList(options) {\n        return this.post('lists/subscribers/create.json', { tweet_mode: 'extended', ...options });\n    }\n    /**\n     * Unsubscribes the authenticated user of the specified list.\n     * https://developer.x.com/en/docs/twitter-api/v1/accounts-and-users/create-manage-lists/api-reference/post-lists-subscribers-destroy\n     */\n    unsubscribeOfList(options) {\n        return this.post('lists/subscribers/destroy.json', { tweet_mode: 'extended', ...options });\n    }\n    /* Media upload API */\n    /**\n     * This endpoint can be used to provide additional information about the uploaded media_id.\n     * This feature is currently only supported for images and GIFs.\n     * https://developer.x.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-metadata-create\n     */\n    createMediaMetadata(mediaId, metadata) {\n        return this.post('media/metadata/create.json', { media_id: mediaId, ...metadata }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to associate uploaded subtitles to an uploaded video. You can associate subtitles to video before or after Tweeting.\n     * **To obtain subtitle media ID, you must upload each subtitle file separately using `.uploadMedia()` method.**\n     *\n     * https://developer.x.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-create\n     */\n    createMediaSubtitles(mediaId, subtitles) {\n        return this.post('media/subtitles/create.json', { media_id: mediaId, media_category: 'TweetVideo', subtitle_info: { subtitles } }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    /**\n     * Use this endpoint to dissociate subtitles from a video and delete the subtitles. You can dissociate subtitles from a video before or after Tweeting.\n     * https://developer.x.com/en/docs/twitter-api/v1/media/upload-media/api-reference/post-media-subtitles-delete\n     */\n    deleteMediaSubtitles(mediaId, ...languages) {\n        return this.post('media/subtitles/delete.json', {\n            media_id: mediaId,\n            media_category: 'TweetVideo',\n            subtitle_info: { subtitles: languages.map(lang => ({ language_code: lang })) },\n        }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX, forceBodyMode: 'json' });\n    }\n    async uploadMedia(file, options = {}, returnFullMediaData = false) {\n        var _a;\n        const chunkLength = (_a = options.chunkLength) !== null && _a !== void 0 ? _a : (1024 * 1024);\n        const { fileHandle, mediaCategory, fileSize, mimeType } = await this.getUploadMediaRequirements(file, options);\n        // Get the file handle (if not buffer)\n        try {\n            // Finally! We can send INIT message.\n            const mediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'INIT',\n                total_bytes: fileSize,\n                media_type: mimeType,\n                media_category: mediaCategory,\n                additional_owners: options.additionalOwners,\n                shared: options.shared ? true : undefined,\n            }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX });\n            // Upload the media chunk by chunk\n            await this.mediaChunkedUpload(fileHandle, chunkLength, mediaData.media_id_string, options.maxConcurrentUploads);\n            // Finalize media\n            const fullMediaData = await this.post(UPLOAD_ENDPOINT, {\n                command: 'FINALIZE',\n                media_id: mediaData.media_id_string,\n            }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX });\n            if (fullMediaData.processing_info && fullMediaData.processing_info.state !== 'succeeded') {\n                // Must wait if video is still computed\n                await this.awaitForMediaProcessingCompletion(fullMediaData);\n            }\n            // Video is ready, return media_id\n            if (returnFullMediaData) {\n                return fullMediaData;\n            }\n            else {\n                return fullMediaData.media_id_string;\n            }\n        }\n        finally {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs__WEBPACK_IMPORTED_MODULE_0__.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n        }\n    }\n    async awaitForMediaProcessingCompletion(fullMediaData) {\n        var _a;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            fullMediaData = await this.mediaInfo(fullMediaData.media_id_string);\n            const { processing_info } = fullMediaData;\n            if (!processing_info || processing_info.state === 'succeeded') {\n                // Ok, completed!\n                return;\n            }\n            if ((_a = processing_info.error) === null || _a === void 0 ? void 0 : _a.code) {\n                const { name, message } = processing_info.error;\n                throw new Error(`Failed to process media: ${name} - ${message}.`);\n            }\n            if (processing_info.state === 'failed') {\n                // No error data\n                throw new Error('Failed to process the media.');\n            }\n            if (processing_info.check_after_secs) {\n                // Await for given seconds\n                await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.sleepSecs)(processing_info.check_after_secs);\n            }\n            else {\n                // No info; Await for 5 seconds\n                await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.sleepSecs)(5);\n            }\n        }\n    }\n    async getUploadMediaRequirements(file, { mimeType, type, target, longVideo } = {}) {\n        // Get the file handle (if not buffer)\n        let fileHandle;\n        try {\n            fileHandle = await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.getFileHandle)(file);\n            // Get the mimetype\n            const realMimeType = (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.getMimeType)(file, type, mimeType);\n            // Get the media category\n            let mediaCategory;\n            // If explicit longmp4 OR explicit MIME type and not DM target\n            if (realMimeType === _types__WEBPACK_IMPORTED_MODULE_3__.EUploadMimeType.Mp4 && ((!mimeType && !type && target !== 'dm') || longVideo)) {\n                mediaCategory = 'amplify_video';\n            }\n            else {\n                mediaCategory = (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.getMediaCategoryByMime)(realMimeType, target !== null && target !== void 0 ? target : 'tweet');\n            }\n            return {\n                fileHandle,\n                mediaCategory,\n                fileSize: await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.getFileSizeFromFileHandle)(fileHandle),\n                mimeType: realMimeType,\n            };\n        }\n        catch (e) {\n            // Close file if any\n            if (typeof file === 'number') {\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                fs__WEBPACK_IMPORTED_MODULE_0__.close(file, () => { });\n            }\n            else if (typeof fileHandle === 'object' && !(fileHandle instanceof Buffer)) {\n                fileHandle.close();\n            }\n            throw e;\n        }\n    }\n    async mediaChunkedUpload(fileHandle, chunkLength, mediaId, maxConcurrentUploads = 3) {\n        // Send chunk by chunk\n        let chunkIndex = 0;\n        if (maxConcurrentUploads < 1) {\n            throw new RangeError('Bad maxConcurrentUploads parameter.');\n        }\n        // Creating a buffer for doing file stuff (if we don't have one)\n        const buffer = fileHandle instanceof Buffer ? undefined : Buffer.alloc(chunkLength);\n        // Sliced/filled buffer returned for each part\n        let readBuffer;\n        // Needed to know when we should stop reading the file\n        let nread;\n        // Needed to use the buffer object (file handles always \"remembers\" file position)\n        let offset = 0;\n        [readBuffer, nread] = await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n        offset += nread;\n        // Handle max concurrent uploads\n        const currentUploads = new Set();\n        // Read buffer until file is completely read\n        while (nread) {\n            const mediaBufferPart = readBuffer.slice(0, nread);\n            // Sent part if part has something inside\n            if (mediaBufferPart.length) {\n                const request = this.post(UPLOAD_ENDPOINT, {\n                    command: 'APPEND',\n                    media_id: mediaId,\n                    segment_index: chunkIndex,\n                    media: mediaBufferPart,\n                }, { prefix: _globals__WEBPACK_IMPORTED_MODULE_1__.API_V1_1_UPLOAD_PREFIX });\n                currentUploads.add(request);\n                request.then(() => {\n                    currentUploads.delete(request);\n                });\n                chunkIndex++;\n            }\n            if (currentUploads.size >= maxConcurrentUploads) {\n                // Await for first promise to be finished\n                await Promise.race(currentUploads);\n            }\n            [readBuffer, nread] = await (0,_media_helpers_v1__WEBPACK_IMPORTED_MODULE_5__.readNextPartOf)(fileHandle, chunkLength, offset, buffer);\n            offset += nread;\n        }\n        await Promise.all([...currentUploads]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/client.v1.write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/media-helpers.v1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v1/media-helpers.v1.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFileHandle: () => (/* binding */ getFileHandle),\n/* harmony export */   getFileSizeFromFileHandle: () => (/* binding */ getFileSizeFromFileHandle),\n/* harmony export */   getMediaCategoryByMime: () => (/* binding */ getMediaCategoryByMime),\n/* harmony export */   getMimeType: () => (/* binding */ getMimeType),\n/* harmony export */   readFileIntoBuffer: () => (/* binding */ readFileIntoBuffer),\n/* harmony export */   readNextPartOf: () => (/* binding */ readNextPartOf),\n/* harmony export */   sleepSecs: () => (/* binding */ sleepSecs)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/types/index.js\");\n\n\n\nasync function readFileIntoBuffer(file) {\n    const handle = await getFileHandle(file);\n    if (typeof handle === 'number') {\n        return new Promise((resolve, reject) => {\n            fs__WEBPACK_IMPORTED_MODULE_0__.readFile(handle, (err, data) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n    else if (handle instanceof Buffer) {\n        return handle;\n    }\n    else {\n        return handle.readFile();\n    }\n}\nfunction getFileHandle(file) {\n    if (typeof file === 'string') {\n        return fs__WEBPACK_IMPORTED_MODULE_0__.promises.open(file, 'r');\n    }\n    else if (typeof file === 'number') {\n        return file;\n    }\n    else if (typeof file === 'object' && !(file instanceof Buffer)) {\n        return file;\n    }\n    else if (!(file instanceof Buffer)) {\n        throw new Error('Given file is not valid, please check its type.');\n    }\n    else {\n        return file;\n    }\n}\nasync function getFileSizeFromFileHandle(fileHandle) {\n    // Get the file size\n    if (typeof fileHandle === 'number') {\n        const stats = await new Promise((resolve, reject) => {\n            fs__WEBPACK_IMPORTED_MODULE_0__.fstat(fileHandle, (err, stats) => {\n                if (err)\n                    reject(err);\n                resolve(stats);\n            });\n        });\n        return stats.size;\n    }\n    else if (fileHandle instanceof Buffer) {\n        return fileHandle.length;\n    }\n    else {\n        return (await fileHandle.stat()).size;\n    }\n}\nfunction getMimeType(file, type, mimeType) {\n    if (typeof mimeType === 'string') {\n        return mimeType;\n    }\n    else if (typeof file === 'string' && !type) {\n        return getMimeByName(file);\n    }\n    else if (typeof type === 'string') {\n        return getMimeByType(type);\n    }\n    throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nfunction getMimeByName(name) {\n    if (name.endsWith('.jpeg') || name.endsWith('.jpg'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Jpeg;\n    if (name.endsWith('.png'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Png;\n    if (name.endsWith('.webp'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Webp;\n    if (name.endsWith('.gif'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Gif;\n    if (name.endsWith('.mpeg4') || name.endsWith('.mp4'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mp4;\n    if (name.endsWith('.mov') || name.endsWith('.mov'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mov;\n    if (name.endsWith('.srt'))\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Srt;\n    (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'options.mimeType is missing and filename couldn\\'t help to resolve MIME type, so it will fallback to image/jpeg',\n        resolution: 'If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType',\n    });\n    return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n    (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: 'you\\'re using options.type',\n        resolution: 'Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ' +\n            'If you\\'re using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4',\n    });\n    if (type === 'gif')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Gif;\n    if (type === 'jpg')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Jpeg;\n    if (type === 'png')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Png;\n    if (type === 'webp')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Webp;\n    if (type === 'srt')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Srt;\n    if (type === 'mp4' || type === 'longmp4')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mp4;\n    if (type === 'mov')\n        return _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mov;\n    return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n    if (name === _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mp4 || name === _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Mov)\n        return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n    if (name === _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Gif)\n        return target === 'tweet' ? 'TweetGif' : 'DmGif';\n    if (name === _types__WEBPACK_IMPORTED_MODULE_2__.EUploadMimeType.Srt)\n        return 'Subtitles';\n    else\n        return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nfunction sleepSecs(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nasync function readNextPartOf(file, chunkLength, bufferOffset = 0, buffer) {\n    if (file instanceof Buffer) {\n        const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n        return [rt, rt.length];\n    }\n    if (!buffer) {\n        throw new Error('Well, we will need a buffer to store file content.');\n    }\n    let bytesRead;\n    if (typeof file === 'number') {\n        bytesRead = await new Promise((resolve, reject) => {\n            fs__WEBPACK_IMPORTED_MODULE_0__.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n                if (err)\n                    reject(err);\n                resolve(nread);\n            });\n        });\n    }\n    else {\n        const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n        bytesRead = res.bytesRead;\n    }\n    return [buffer, bytesRead];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v1/media-helpers.v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js":
/*!************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiv2Labs: () => (/* binding */ TwitterApiv2Labs),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_v2_labs_write__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.v2.labs.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js\");\n\n\n/**\n * Twitter v2 labs client with all rights (read/write/DMs)\n */\nclass TwitterApiv2Labs extends _client_v2_labs_write__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterApiv2Labs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdjItbGFicy9jbGllbnQudjIubGFicy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ2U7QUFDL0Q7QUFDQTtBQUNBO0FBQ08sK0JBQStCLDZEQUF5QjtBQUMvRDtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsZ0JBQWdCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3YyLWxhYnMvY2xpZW50LnYyLmxhYnMuanM/MGViOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUElfVjJfTEFCU19QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbmltcG9ydCBUd2l0dGVyQXBpdjJMYWJzUmVhZFdyaXRlIGZyb20gJy4vY2xpZW50LnYyLmxhYnMud3JpdGUnO1xuLyoqXG4gKiBUd2l0dGVyIHYyIGxhYnMgY2xpZW50IHdpdGggYWxsIHJpZ2h0cyAocmVhZC93cml0ZS9ETXMpXG4gKi9cbmV4cG9ydCBjbGFzcyBUd2l0dGVyQXBpdjJMYWJzIGV4dGVuZHMgVHdpdHRlckFwaXYyTGFic1JlYWRXcml0ZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuX3ByZWZpeCA9IEFQSV9WMl9MQUJTX1BSRUZJWDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2xpZW50IHdpdGggcmVhZC93cml0ZSByaWdodHMuXG4gICAgICovXG4gICAgZ2V0IHJlYWRXcml0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVHdpdHRlckFwaXYyTGFicztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv2LabsReadOnly)\n/* harmony export */ });\n/* harmony import */ var _client_subclient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.subclient */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n\n\n/**\n * Base Twitter v2 labs client with only read right.\n */\nclass TwitterApiv2LabsReadOnly extends _client_subclient__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_V2_LABS_PREFIX;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdjItbGFicy9jbGllbnQudjIubGFicy5yZWFkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRDtBQUNOO0FBQ2hEO0FBQ0E7QUFDQTtBQUNlLHVDQUF1Qyx5REFBbUI7QUFDekU7QUFDQTtBQUNBLHVCQUF1Qix3REFBa0I7QUFDekM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29uY2hhaW4tYWdlbnQvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdjItbGFicy9jbGllbnQudjIubGFicy5yZWFkLmpzPzBkNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFR3aXR0ZXJBcGlTdWJDbGllbnQgZnJvbSAnLi4vY2xpZW50LnN1YmNsaWVudCc7XG5pbXBvcnQgeyBBUElfVjJfTEFCU19QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbi8qKlxuICogQmFzZSBUd2l0dGVyIHYyIGxhYnMgY2xpZW50IHdpdGggb25seSByZWFkIHJpZ2h0LlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUd2l0dGVyQXBpdjJMYWJzUmVhZE9ubHkgZXh0ZW5kcyBUd2l0dGVyQXBpU3ViQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gQVBJX1YyX0xBQlNfUFJFRklYO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js":
/*!******************************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv2LabsReadWrite)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_v2_labs_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.v2.labs.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js\");\n\n\n/**\n * Base Twitter v2 labs client with read/write rights.\n */\nclass TwitterApiv2LabsReadWrite extends _client_v2_labs_read__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdjItbGFicy9jbGllbnQudjIubGFicy53cml0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDYTtBQUM3RDtBQUNBO0FBQ0E7QUFDZSx3Q0FBd0MsNERBQXdCO0FBQy9FO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQWtCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vbmNoYWluLWFnZW50Ly4vbm9kZV9tb2R1bGVzL3R3aXR0ZXItYXBpLXYyL2Rpc3QvZXNtL3YyLWxhYnMvY2xpZW50LnYyLmxhYnMud3JpdGUuanM/MzgxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUElfVjJfTEFCU19QUkVGSVggfSBmcm9tICcuLi9nbG9iYWxzJztcbmltcG9ydCBUd2l0dGVyQXBpdjJMYWJzUmVhZE9ubHkgZnJvbSAnLi9jbGllbnQudjIubGFicy5yZWFkJztcbi8qKlxuICogQmFzZSBUd2l0dGVyIHYyIGxhYnMgY2xpZW50IHdpdGggcmVhZC93cml0ZSByaWdodHMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR3aXR0ZXJBcGl2MkxhYnNSZWFkV3JpdGUgZXh0ZW5kcyBUd2l0dGVyQXBpdjJMYWJzUmVhZE9ubHkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9wcmVmaXggPSBBUElfVjJfTEFCU19QUkVGSVg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIGNsaWVudCB3aXRoIG9ubHkgcmVhZCByaWdodHMuXG4gICAgICovXG4gICAgZ2V0IHJlYWRPbmx5KCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.js":
/*!**************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2/client.v2.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterApiv2: () => (/* binding */ TwitterApiv2),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_v2_write__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.v2.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js\");\n/* harmony import */ var _v2_labs_client_v2_labs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../v2-labs/client.v2.labs */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.js\");\n\n\n\n/**\n * Twitter v2 client with all rights (read/write/DMs)\n */\nclass TwitterApiv2 extends _client_v2_write__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_V2_PREFIX;\n        /** API endpoints */\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with read/write rights.\n     */\n    get readWrite() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new _v2_labs_client_v2_labs__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TwitterApiv2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHdpdHRlci1hcGktdjIvZGlzdC9lc20vdjIvY2xpZW50LnYyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ1c7QUFDRztBQUN6RDtBQUNBO0FBQ0E7QUFDTywyQkFBMkIsd0RBQXFCO0FBQ3ZEO0FBQ0E7QUFDQSx1QkFBdUIsbURBQWE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLCtEQUFnQjtBQUNoRDtBQUNBO0FBQ0EsaUVBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb25jaGFpbi1hZ2VudC8uL25vZGVfbW9kdWxlcy90d2l0dGVyLWFwaS12Mi9kaXN0L2VzbS92Mi9jbGllbnQudjIuanM/MjYxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUElfVjJfUFJFRklYIH0gZnJvbSAnLi4vZ2xvYmFscyc7XG5pbXBvcnQgVHdpdHRlckFwaXYyUmVhZFdyaXRlIGZyb20gJy4vY2xpZW50LnYyLndyaXRlJztcbmltcG9ydCBUd2l0dGVyQXBpdjJMYWJzIGZyb20gJy4uL3YyLWxhYnMvY2xpZW50LnYyLmxhYnMnO1xuLyoqXG4gKiBUd2l0dGVyIHYyIGNsaWVudCB3aXRoIGFsbCByaWdodHMgKHJlYWQvd3JpdGUvRE1zKVxuICovXG5leHBvcnQgY2xhc3MgVHdpdHRlckFwaXYyIGV4dGVuZHMgVHdpdHRlckFwaXYyUmVhZFdyaXRlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gQVBJX1YyX1BSRUZJWDtcbiAgICAgICAgLyoqIEFQSSBlbmRwb2ludHMgKi9cbiAgICB9XG4gICAgLyogU3ViLWNsaWVudHMgKi9cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjbGllbnQgd2l0aCByZWFkL3dyaXRlIHJpZ2h0cy5cbiAgICAgKi9cbiAgICBnZXQgcmVhZFdyaXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2xpZW50IGZvciB2MiBsYWJzIGVuZHBvaW50cy5cbiAgICAgKi9cbiAgICBnZXQgbGFicygpIHtcbiAgICAgICAgaWYgKHRoaXMuX2xhYnMpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGFicztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhYnMgPSBuZXcgVHdpdHRlckFwaXYyTGFicyh0aGlzKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBUd2l0dGVyQXBpdjI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv2ReadOnly)\n/* harmony export */ });\n/* harmony import */ var _client_subclient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client.subclient */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/client.subclient.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _paginators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../paginators */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/index.js\");\n/* harmony import */ var _v2_labs_client_v2_labs_read__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../v2-labs/client.v2.labs.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.read.js\");\n/* harmony import */ var _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../paginators/user.paginator.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/user.paginator.v2.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/helpers.js\");\n/* harmony import */ var _paginators_dm_paginator_v2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../paginators/dm.paginator.v2 */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/paginators/dm.paginator.v2.js\");\n\n\n\n\n\n\n\n/**\n * Base Twitter v2 client with only read right.\n */\nclass TwitterApiv2ReadOnly extends _client_subclient__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_1__.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new _v2_labs_client_v2_labs_read__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n    }\n    async search(queryOrOptions, options = {}) {\n        const queryParams = typeof queryOrOptions === 'string' ?\n            { ...options, query: queryOrOptions } :\n            { ...queryOrOptions };\n        const initialRq = await this.get('tweets/search/recent', queryParams, { fullResponse: true });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetSearchRecentV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     *\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * https://developer.x.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all\n     */\n    async searchAll(query, options = {}) {\n        const queryParams = { ...options, query };\n        const initialRq = await this.get('tweets/search/all', queryParams, { fullResponse: true });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetSearchAllV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams,\n        });\n    }\n    /**\n     * Returns a variety of information about a single Tweet specified by the requested ID.\n     * https://developer.x.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    singleTweet(tweetId, options = {}) {\n        return this.get('tweets/:id', options, { params: { id: tweetId } });\n    }\n    /**\n     * Returns a variety of information about tweets specified by list of IDs.\n     * https://developer.x.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    tweets(tweetIds, options = {}) {\n        return this.get('tweets', { ids: tweetIds, ...options });\n    }\n    /**\n     * The recent Tweet counts endpoint returns count of Tweets from the last seven days that match a search query.\n     * OAuth2 Bearer auth only.\n     * https://developer.x.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent\n     */\n    tweetCountRecent(query, options = {}) {\n        return this.get('tweets/counts/recent', { query, ...options });\n    }\n    /**\n     * This endpoint is only available to those users who have been approved for the Academic Research product track.\n     * The full-archive search endpoint returns the complete history of public Tweets matching a search query;\n     * since the first Tweet was created March 26, 2006.\n     * OAuth2 Bearer auth only.\n     * **This endpoint has pagination, yet it is not supported by bundled paginators. Use `next_token` to fetch next page.**\n     * https://developer.x.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-all\n     */\n    tweetCountAll(query, options = {}) {\n        return this.get('tweets/counts/all', { query, ...options });\n    }\n    async tweetRetweetedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/retweeted_by', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.TweetRetweetersUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    async tweetLikedBy(tweetId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const initialRq = await this.get('tweets/:id/liking_users', parameters, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        if (!asPaginator) {\n            return initialRq.data;\n        }\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.TweetLikingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /**\n     * Allows you to retrieve a collection of the most recent Tweets and Retweets posted by you and users you follow, also known as home timeline.\n     * This endpoint returns up to the last 3200 Tweets.\n     * https://developer.x.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological\n     *\n     * OAuth 2 scopes: `tweet.read` `users.read`\n     */\n    async homeTimeline(options = {}) {\n        const meUser = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/timelines/reverse_chronological', options, {\n            fullResponse: true,\n            params: { id: meUser.data.id },\n        });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetHomeTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: meUser.data.id },\n        });\n    }\n    /**\n     * Returns Tweets composed by a single user, specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, the most recent 3,200 Tweets can be retrieved.\n     * https://developer.x.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\n     */\n    async userTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/tweets', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetUserTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Tweets mentioning a single user specified by the requested user ID.\n     * By default, the most recent ten Tweets are returned per request.\n     * Using pagination, up to the most recent 800 Tweets can be retrieved.\n     * https://developer.x.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions\n     */\n    async userMentionTimeline(userId, options = {}) {\n        const initialRq = await this.get('users/:id/mentions', options, {\n            fullResponse: true,\n            params: { id: userId },\n        });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetUserMentionTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: userId },\n        });\n    }\n    /**\n     * Returns Quote Tweets for a Tweet specified by the requested Tweet ID.\n     * https://developer.x.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets\n     *\n     * OAuth2 scopes: `users.read` `tweet.read`\n     */\n    async quotes(tweetId, options = {}) {\n        const initialRq = await this.get('tweets/:id/quote_tweets', options, {\n            fullResponse: true,\n            params: { id: tweetId },\n        });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.QuotedTweetsTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: tweetId },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Allows you to get information about a authenticated user’s 800 most recent bookmarked Tweets.\n     * https://developer.x.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.read`\n     */\n    async bookmarks(options = {}) {\n        const user = await this.getCurrentUserV2Object();\n        const initialRq = await this.get('users/:id/bookmarks', options, {\n            fullResponse: true,\n            params: { id: user.data.id },\n        });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetBookmarksTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: options,\n            sharedParams: { id: user.data.id },\n        });\n    }\n    /* Users */\n    /**\n     * Returns information about an authorized user.\n     * https://developer.x.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me\n     *\n     * OAuth2 scopes: `tweet.read` & `users.read`\n     */\n    me(options = {}) {\n        return this.get('users/me', options);\n    }\n    /**\n     * Returns a variety of information about a single user specified by the requested ID.\n     * https://developer.x.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id\n     */\n    user(userId, options = {}) {\n        return this.get('users/:id', options, { params: { id: userId } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by the requested IDs.\n     * https://developer.x.com/en/docs/twitter-api/users/lookup/api-reference/get-users\n     */\n    users(userIds, options = {}) {\n        const ids = Array.isArray(userIds) ? userIds.join(',') : userIds;\n        return this.get('users', { ...options, ids });\n    }\n    /**\n     * Returns a variety of information about a single user specified by their username.\n     * https://developer.x.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username\n     */\n    userByUsername(username, options = {}) {\n        return this.get('users/by/username/:username', options, { params: { username } });\n    }\n    /**\n     * Returns a variety of information about one or more users specified by their usernames.\n     * https://developer.x.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`\n     */\n    usersByUsernames(usernames, options = {}) {\n        usernames = Array.isArray(usernames) ? usernames.join(',') : usernames;\n        return this.get('users/by', { ...options, usernames });\n    }\n    async followers(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/followers', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/followers', parameters, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    async following(userId, options = {}) {\n        const { asPaginator, ...parameters } = options;\n        const params = { id: userId };\n        if (!asPaginator) {\n            return this.get('users/:id/following', parameters, { params });\n        }\n        const initialRq = await this.get('users/:id/following', parameters, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserFollowingV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: parameters,\n            sharedParams: params,\n        });\n    }\n    /**\n     * Allows you to get information about a user’s liked Tweets.\n     * https://developer.x.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets\n     */\n    async userLikedTweets(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/liked_tweets', options, { fullResponse: true, params });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetV2UserLikedTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are blocked by the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking\n     */\n    async userBlockingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/blocking', options, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserBlockingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are muted by the authenticating user.\n     * https://developer.x.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting\n     */\n    async userMutingUsers(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/muting', options, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserMutingUsersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Lists */\n    /**\n     * Returns the details of a specified List.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id\n     */\n    list(id, options = {}) {\n        return this.get('lists/:id', options, { params: { id } });\n    }\n    /**\n     * Returns all Lists owned by the specified user.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists\n     */\n    async listsOwned(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/owned_lists', options, { fullResponse: true, params });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.UserOwnedListsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user is a member of.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships\n     */\n    async listMemberships(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/list_memberships', options, { fullResponse: true, params });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.UserListMembershipsV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns all Lists a specified user follows.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists\n     */\n    async listFollowed(userId, options = {}) {\n        const params = { id: userId };\n        const initialRq = await this.get('users/:id/followed_lists', options, { fullResponse: true, params });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.UserListFollowedV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Tweets from the specified List.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets\n     */\n    async listTweets(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/tweets', options, { fullResponse: true, params });\n        return new _paginators__WEBPACK_IMPORTED_MODULE_2__.TweetV2ListTweetsPaginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are members of the specified List.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-members/api-reference/get-lists-id-members\n     */\n    async listMembers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/members', options, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserListMembersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of users who are followers of the specified List.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-follows/api-reference/get-lists-id-followers\n     */\n    async listFollowers(listId, options = {}) {\n        const params = { id: listId };\n        const initialRq = await this.get('lists/:id/followers', options, { fullResponse: true, params });\n        return new _paginators_user_paginator_v2__WEBPACK_IMPORTED_MODULE_4__.UserListFollowersV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Direct messages */\n    /**\n     * Returns a list of Direct Messages for the authenticated user, both sent and received.\n     * Direct Message events are returned in reverse chronological order.\n     * Supports retrieving events from the previous 30 days.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_events\n     */\n    async listDmEvents(options = {}) {\n        const initialRq = await this.get('dm_events', options, { fullResponse: true });\n        return new _paginators_dm_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.FullDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n        });\n    }\n    /**\n     * Returns a list of Direct Messages (DM) events within a 1-1 conversation with the user specified in the participant_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsWithParticipant(participantId, options = {}) {\n        const params = { participant_id: participantId };\n        const initialRq = await this.get('dm_conversations/with/:participant_id/dm_events', options, { fullResponse: true, params });\n        return new _paginators_dm_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.OneToOneDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /**\n     * Returns a list of Direct Messages within a conversation specified in the dm_conversation_id path parameter.\n     * Messages are returned in reverse chronological order.\n     *\n     * OAuth 2 scopes: `dm.read`, `tweet.read`, `user.read`\n     *\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/lookup/api-reference/get-dm_conversations-dm_conversation_id-dm_events\n     */\n    async listDmEventsOfConversation(dmConversationId, options = {}) {\n        const params = { dm_conversation_id: dmConversationId };\n        const initialRq = await this.get('dm_conversations/:dm_conversation_id/dm_events', options, { fullResponse: true, params });\n        return new _paginators_dm_paginator_v2__WEBPACK_IMPORTED_MODULE_6__.ConversationDMTimelineV2Paginator({\n            realData: initialRq.data,\n            rateLimit: initialRq.rateLimit,\n            instance: this,\n            queryParams: { ...options },\n            sharedParams: params,\n        });\n    }\n    /* Spaces */\n    /**\n     * Get a single space by ID.\n     * https://developer.x.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    space(spaceId, options = {}) {\n        return this.get('spaces/:id', options, { params: { id: spaceId } });\n    }\n    /**\n     * Get spaces using their IDs.\n     * https://developer.x.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spaces(spaceIds, options = {}) {\n        return this.get('spaces', { ids: spaceIds, ...options });\n    }\n    /**\n     * Get spaces using their creator user ID(s). (no pagination available)\n     * https://developer.x.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids\n     *\n     * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n     */\n    spacesByCreators(creatorIds, options = {}) {\n        return this.get('spaces/by/creator_ids', { user_ids: creatorIds, ...options });\n    }\n    /**\n     * Search through spaces using multiple params. (no pagination available)\n     * https://developer.x.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search\n     */\n    searchSpaces(options) {\n        return this.get('spaces/search', options);\n    }\n    /**\n    * Returns a list of user who purchased a ticket to the requested Space.\n    * You must authenticate the request using the Access Token of the creator of the requested Space.\n    *\n    * **OAuth 2.0 Access Token required**\n    *\n    * https://developer.x.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers\n    *\n    * OAuth2 scopes: `tweet.read`, `users.read`, `space.read`.\n    */\n    spaceBuyers(spaceId, options = {}) {\n        return this.get('spaces/:id/buyers', options, { params: { id: spaceId } });\n    }\n    /**\n     * Returns Tweets shared in the requested Spaces.\n     * https://developer.x.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets\n     *\n     * OAuth2 scope: `users.read`, `tweet.read`, `space.read`\n     */\n    spaceTweets(spaceId, options = {}) {\n        return this.get('spaces/:id/tweets', options, { params: { id: spaceId } });\n    }\n    searchStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/search/stream', options, { payloadIsError: _helpers__WEBPACK_IMPORTED_MODULE_5__.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /**\n     * Return a list of rules currently active on the streaming endpoint, either as a list or individually.\n     * https://developer.x.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules\n     */\n    streamRules(options = {}) {\n        return this.get('tweets/search/stream/rules', options);\n    }\n    updateStreamRules(options, query = {}) {\n        return this.post('tweets/search/stream/rules', options, { query });\n    }\n    sampleStream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample/stream', options, { payloadIsError: _helpers__WEBPACK_IMPORTED_MODULE_5__.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    sample10Stream({ autoConnect, ...options } = {}) {\n        return this.getStream('tweets/sample10/stream', options, { payloadIsError: _helpers__WEBPACK_IMPORTED_MODULE_5__.isTweetStreamV2ErrorPayload, autoConnect });\n    }\n    /* Batch compliance */\n    /**\n     * Returns a list of recent compliance jobs.\n     * https://developer.x.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs\n     */\n    complianceJobs(options) {\n        return this.get('compliance/jobs', options);\n    }\n    /**\n     * Get a single compliance job with the specified ID.\n     * https://developer.x.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id\n     */\n    complianceJob(jobId) {\n        return this.get('compliance/jobs/:id', undefined, { params: { id: jobId } });\n    }\n    /**\n     * Creates a new compliance job for Tweet IDs or user IDs, send your file, await result and parse it into an array.\n     * You can run one batch job at a time. Returns the created job, but **not the job result!**.\n     *\n     * You can obtain the result (**after job is completed**) with `.complianceJobResult`.\n     * https://developer.x.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async sendComplianceJob(jobParams) {\n        const job = await this.post('compliance/jobs', { type: jobParams.type, name: jobParams.name });\n        // Send the IDs\n        const rawIdsBody = jobParams.ids instanceof Buffer ? jobParams.ids : Buffer.from(jobParams.ids.join('\\n'));\n        // Upload the IDs\n        await this.put(job.data.upload_url, rawIdsBody, {\n            forceBodyMode: 'raw',\n            enableAuth: false,\n            headers: { 'Content-Type': 'text/plain' },\n            prefix: '',\n        });\n        return job;\n    }\n    /**\n     * Get the result of a running or completed job, obtained through `.complianceJob`, `.complianceJobs` or `.sendComplianceJob`.\n     * If job is still running (`in_progress`), it will await until job is completed. **This could be quite long!**\n     * https://developer.x.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs\n     */\n    async complianceJobResult(job) {\n        let runningJob = job;\n        while (runningJob.status !== 'complete') {\n            if (runningJob.status === 'expired' || runningJob.status === 'failed') {\n                throw new Error('Job failed to be completed.');\n            }\n            await new Promise(resolve => setTimeout(resolve, 3500));\n            runningJob = (await this.complianceJob(job.id)).data;\n        }\n        // Download and parse result\n        const result = await this.get(job.download_url, undefined, {\n            enableAuth: false,\n            prefix: '',\n        });\n        return result\n            .trim()\n            .split('\\n')\n            .filter(line => line)\n            .map(line => JSON.parse(line));\n    }\n    /* Usage */\n    /**\n     * Allows you to retrieve your project usage.\n     *\n     * https://developer.x.com/en/docs/x-api/usage/tweets/introduction\n     */\n    async usage(options = {}) {\n        return this.get('usage/tweets', options);\n    }\n    /**\n     * Returns a variety of information about a single Community specified by ID.\n     * https://docs.x.com/x-api/communities/communities-lookup-by-community-id\n     */\n    community(communityId, options = {}) {\n        return this.get('communities/:id', options, { params: { id: communityId } });\n    }\n    /**\n     * Search for Communities based on keywords.\n     * https://docs.x.com/x-api/communities/search-communities\n     */\n    searchCommunities(query, options = {}) {\n        return this.get('communities/search', { query, ...options });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js":
/*!********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TwitterApiv2ReadWrite)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/globals.js\");\n/* harmony import */ var _client_v2_read__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.v2.read */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.read.js\");\n/* harmony import */ var _v2_labs_client_v2_labs_write__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../v2-labs/client.v2.labs.write */ \"(rsc)/./node_modules/twitter-api-v2/dist/esm/v2-labs/client.v2.labs.write.js\");\n\n\n\n/**\n * Base Twitter v2 client with read/write rights.\n */\nclass TwitterApiv2ReadWrite extends _client_v2_read__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._prefix = _globals__WEBPACK_IMPORTED_MODULE_0__.API_V2_PREFIX;\n    }\n    /* Sub-clients */\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n    /**\n     * Get a client for v2 labs endpoints.\n     */\n    get labs() {\n        if (this._labs)\n            return this._labs;\n        return this._labs = new _v2_labs_client_v2_labs_write__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n    }\n    /* Tweets */\n    /**\n     * Hides or unhides a reply to a Tweet.\n     * https://developer.x.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden\n     */\n    hideReply(tweetId, makeHidden) {\n        return this.put('tweets/:id/hidden', { hidden: makeHidden }, { params: { id: tweetId } });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Like the target Tweet.\n     * https://developer.x.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-user_id-likes\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    like(loggedUserId, targetTweetId) {\n        return this.post('users/:id/likes', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unlike a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not liking the Tweet or have already unliked the Tweet.\n     * https://developer.x.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unlike(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/likes/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    /**\n     * Causes the user ID identified in the path parameter to Retweet the target Tweet.\n     * https://developer.x.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    retweet(loggedUserId, targetTweetId) {\n        return this.post('users/:id/retweets', { tweet_id: targetTweetId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove the Retweet of a Tweet.\n     * The request succeeds with no action when the user sends a request to a user they're not Retweeting the Tweet or have already removed the Retweet of.\n     * https://developer.x.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unretweet(loggedUserId, targetTweetId) {\n        return this.delete('users/:id/retweets/:tweet_id', undefined, {\n            params: { id: loggedUserId, tweet_id: targetTweetId },\n        });\n    }\n    tweet(status, payload = {}) {\n        if (typeof status === 'object') {\n            payload = status;\n        }\n        else {\n            payload = { text: status, ...payload };\n        }\n        return this.post('tweets', payload);\n    }\n    /**\n     * Uploads media to Twitter using chunked upload.\n     * https://docs.x.com/x-api/media/media-upload\n     *\n     * @param media The media buffer to upload\n     * @param options Upload options including media type and category, and additional owners\n     * @param chunkSize Size of each chunk in bytes (default: 1MB)\n     * @returns The media ID of the uploaded media\n     */\n    async uploadMedia(media, options, chunkSize = 1024 * 1024) {\n        let media_category = options.media_category;\n        // If no media category is provided, try to infer it from the media type\n        if (!options.media_category) {\n            if (options.media_type.includes('gif')) {\n                media_category = 'tweet_gif';\n            }\n            else if (options.media_type.includes('image')) {\n                media_category = 'tweet_image';\n            }\n            else if (options.media_type.includes('video')) {\n                media_category = 'tweet_video';\n            }\n        }\n        const initArguments = {\n            additional_owners: options.additional_owners,\n            media_type: options.media_type,\n            total_bytes: media.length,\n            media_category,\n        };\n        const initResponse = await this.post('media/upload/initialize', initArguments);\n        const mediaId = initResponse.data.id;\n        const chunksCount = Math.ceil(media.length / chunkSize);\n        const mediaArray = new Uint8Array(media);\n        for (let i = 0; i < chunksCount; i++) {\n            const start = i * chunkSize;\n            const end = Math.min(start + chunkSize, media.length);\n            const mediaChunk = mediaArray.slice(start, end);\n            const chunkedBuffer = Buffer.from(mediaChunk);\n            const appendArguments = {\n                segment_index: i,\n                media: chunkedBuffer,\n            };\n            await this.post(`media/upload/${mediaId}/append`, appendArguments, { forceBodyMode: 'form-data' });\n        }\n        const finalizeResponse = await this.post(`media/upload/${mediaId}/finalize`);\n        if (finalizeResponse.data.processing_info) {\n            await this.waitForMediaProcessing(mediaId);\n        }\n        return mediaId;\n    }\n    async waitForMediaProcessing(mediaId) {\n        var _a;\n        const response = await this.get('media/upload', {\n            command: 'STATUS',\n            media_id: mediaId,\n        });\n        const info = response.data.processing_info;\n        if (!info)\n            return;\n        switch (info.state) {\n            case 'succeeded':\n                return;\n            case 'failed':\n                throw new Error(`Media processing failed: ${(_a = info.error) === null || _a === void 0 ? void 0 : _a.message}`);\n            case 'pending':\n            case 'in_progress': {\n                const waitTime = info === null || info === void 0 ? void 0 : info.check_after_secs;\n                if (waitTime && waitTime > 0) {\n                    await new Promise(resolve => setTimeout(resolve, waitTime * 1000));\n                    await this.waitForMediaProcessing(mediaId);\n                }\n            }\n        }\n    }\n    /**\n     * Creates the metadata for media to be uploaded.\n     * This feature is currently only supported for images and GIFs.\n     * https://docs.x.com/x-api/media/metadata-create\n     */\n    createMediaMetadata(mediaId, metadata) {\n        return this.post('media/metadata', { id: mediaId, metadata });\n    }\n    /**\n     * Reply to a Tweet on behalf of an authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    reply(status, toTweetId, payload = {}) {\n        var _a;\n        const reply = { in_reply_to_tweet_id: toTweetId, ...(_a = payload.reply) !== null && _a !== void 0 ? _a : {} };\n        return this.post('tweets', { text: status, ...payload, reply });\n    }\n    /**\n     * Quote an existing Tweet on behalf of an authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    quote(status, quotedTweetId, payload = {}) {\n        return this.tweet(status, { ...payload, quote_tweet_id: quotedTweetId });\n    }\n    /**\n     * Post a series of tweets.\n     * https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets\n     */\n    async tweetThread(tweets) {\n        var _a, _b;\n        const postedTweets = [];\n        for (const tweet of tweets) {\n            // Retrieve the last sent tweet\n            const lastTweet = postedTweets.length ? postedTweets[postedTweets.length - 1] : null;\n            // Build the tweet query params\n            const queryParams = { ...(typeof tweet === 'string' ? ({ text: tweet }) : tweet) };\n            // Reply to an existing tweet if needed\n            const inReplyToId = lastTweet ? lastTweet.data.id : (_a = queryParams.reply) === null || _a === void 0 ? void 0 : _a.in_reply_to_tweet_id;\n            const status = (_b = queryParams.text) !== null && _b !== void 0 ? _b : '';\n            if (inReplyToId) {\n                postedTweets.push(await this.reply(status, inReplyToId, queryParams));\n            }\n            else {\n                postedTweets.push(await this.tweet(status, queryParams));\n            }\n        }\n        return postedTweets;\n    }\n    /**\n     * Allows a user or authenticated user ID to delete a Tweet\n     * https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id\n     */\n    deleteTweet(tweetId) {\n        return this.delete('tweets/:id', undefined, {\n            params: {\n                id: tweetId,\n            },\n        });\n    }\n    /* Bookmarks */\n    /**\n     * Causes the user ID of an authenticated user identified in the path parameter to Bookmark the target Tweet provided in the request body.\n     * https://developer.x.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async bookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.post('users/:id/bookmarks', { tweet_id: tweetId }, { params: { id: user.data.id } });\n    }\n    /**\n     * Allows a user or authenticated user ID to remove a Bookmark of a Tweet.\n     * https://developer.x.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id\n     *\n     * OAuth2 scopes: `users.read` `tweet.read` `bookmark.write`\n     */\n    async deleteBookmark(tweetId) {\n        const user = await this.getCurrentUserV2Object();\n        return this.delete('users/:id/bookmarks/:tweet_id', undefined, { params: { id: user.data.id, tweet_id: tweetId } });\n    }\n    /* Users */\n    /**\n     * Allows a user ID to follow another user.\n     * If the target user does not have public Tweets, this endpoint will send a follow request.\n     * https://developer.x.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    follow(loggedUserId, targetUserId) {\n        return this.post('users/:id/following', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user ID to unfollow another user.\n     * https://developer.x.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following\n     *\n     * OAuth2 scope: `follows.write`\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unfollow(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/following/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Causes the user (in the path) to block the target user.\n     * The user (in the path) must match the user context authorizing the request.\n     * https://developer.x.com/en/docs/twitter-api/users/blocks/api-reference/post-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID; you can obtain it through v1.1 API.\n     */\n    block(loggedUserId, targetUserId) {\n        return this.post('users/:id/blocking', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows a user or authenticated user ID to unblock another user.\n     * https://developer.x.com/en/docs/twitter-api/users/blocks/api-reference/delete-users-user_id-blocking\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unblock(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/blocking/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /**\n     * Allows an authenticated user ID to mute the target user.\n     * https://developer.x.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    mute(loggedUserId, targetUserId) {\n        return this.post('users/:id/muting', { target_user_id: targetUserId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Allows an authenticated user ID to unmute the target user.\n     * The request succeeds with no action when the user sends a request to a user they're not muting or have already unmuted.\n     * https://developer.x.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting\n     *\n     * **Note**: You must specify the currently logged user ID ; you can obtain it through v1.1 API.\n     */\n    unmute(loggedUserId, targetUserId) {\n        return this.delete('users/:source_user_id/muting/:target_user_id', undefined, {\n            params: { source_user_id: loggedUserId, target_user_id: targetUserId },\n        });\n    }\n    /* Lists */\n    /**\n     * Creates a new list for the authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists\n     */\n    createList(options) {\n        return this.post('lists', options);\n    }\n    /**\n     * Updates the specified list. The authenticated user must own the list to be able to update it.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id\n     */\n    updateList(listId, options = {}) {\n        return this.put('lists/:id', options, { params: { id: listId } });\n    }\n    /**\n     * Deletes the specified list. The authenticated user must own the list to be able to destroy it.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id\n     */\n    removeList(listId) {\n        return this.delete('lists/:id', undefined, { params: { id: listId } });\n    }\n    /**\n     * Adds a member to a list.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-members/api-reference/post-lists-id-members\n     */\n    addListMember(listId, userId) {\n        return this.post('lists/:id/members', { user_id: userId }, { params: { id: listId } });\n    }\n    /**\n     * Remember a member to a list.\n     * https://developer.x.com/en/docs/twitter-api/lists/list-members/api-reference/delete-lists-id-members-user_id\n     */\n    removeListMember(listId, userId) {\n        return this.delete('lists/:id/members/:user_id', undefined, { params: { id: listId, user_id: userId } });\n    }\n    /**\n     * Subscribes the authenticated user to the specified list.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-followed-lists\n     */\n    subscribeToList(loggedUserId, listId) {\n        return this.post('users/:id/followed_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Unsubscribes the authenticated user to the specified list.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-followed-lists-list_id\n     */\n    unsubscribeOfList(loggedUserId, listId) {\n        return this.delete('users/:id/followed_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /**\n     * Enables the authenticated user to pin a List.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-users-id-pinned-lists\n     */\n    pinList(loggedUserId, listId) {\n        return this.post('users/:id/pinned_lists', { list_id: listId }, { params: { id: loggedUserId } });\n    }\n    /**\n     * Enables the authenticated user to unpin a List.\n     * https://developer.x.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-users-id-pinned-lists-list_id\n     */\n    unpinList(loggedUserId, listId) {\n        return this.delete('users/:id/pinned_lists/:list_id', undefined, { params: { id: loggedUserId, list_id: listId } });\n    }\n    /* Direct messages */\n    /**\n     * Creates a Direct Message on behalf of an authenticated user, and adds it to the specified conversation.\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-dm_conversation_id-messages\n     */\n    sendDmInConversation(conversationId, message) {\n        return this.post('dm_conversations/:dm_conversation_id/messages', message, { params: { dm_conversation_id: conversationId } });\n    }\n    /**\n     * Creates a one-to-one Direct Message and adds it to the one-to-one conversation.\n     * This method either creates a new one-to-one conversation or retrieves the current conversation and adds the Direct Message to it.\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations-with-participant_id-messages\n     */\n    sendDmToParticipant(participantId, message) {\n        return this.post('dm_conversations/with/:participant_id/messages', message, { params: { participant_id: participantId } });\n    }\n    /**\n     * Creates a new group conversation and adds a Direct Message to it on behalf of an authenticated user.\n     * https://developer.x.com/en/docs/twitter-api/direct-messages/manage/api-reference/post-dm_conversations\n     */\n    createDmConversation(options) {\n        return this.post('dm_conversations', options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/client.v2.write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwitterV2IncludesHelper: () => (/* binding */ TwitterV2IncludesHelper)\n/* harmony export */ });\n/**\n * Provide helpers for `.includes` of a v2 API result.\n * Needed expansions for a method to work are specified (*`like this`*).\n */\nclass TwitterV2IncludesHelper {\n    constructor(result) {\n        this.result = result;\n    }\n    /* Tweets */\n    get tweets() {\n        return TwitterV2IncludesHelper.tweets(this.result);\n    }\n    static tweets(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.tweets) !== null && _b !== void 0 ? _b : [];\n    }\n    tweetById(id) {\n        return TwitterV2IncludesHelper.tweetById(this.result, id);\n    }\n    static tweetById(result, id) {\n        return this.tweets(result).find(tweet => tweet.id === id);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    retweet(tweet) {\n        return TwitterV2IncludesHelper.retweet(this.result, tweet);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static retweet(result, tweet) {\n        var _a;\n        const retweetIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'retweeted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => retweetIds.includes(t.id));\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    quote(tweet) {\n        return TwitterV2IncludesHelper.quote(this.result, tweet);\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    static quote(result, tweet) {\n        var _a;\n        const quoteIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'quoted')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => quoteIds.includes(t.id));\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    repliedTo(tweet) {\n        return TwitterV2IncludesHelper.repliedTo(this.result, tweet);\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    static repliedTo(result, tweet) {\n        var _a;\n        const repliesIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : [])\n            .filter(ref => ref.type === 'replied_to')\n            .map(ref => ref.id);\n        return this.tweets(result).find(t => repliesIds.includes(t.id));\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    author(tweet) {\n        return TwitterV2IncludesHelper.author(this.result, tweet);\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    static author(result, tweet) {\n        const authorId = tweet.author_id;\n        return authorId ? this.users(result).find(u => u.id === authorId) : undefined;\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    repliedToAuthor(tweet) {\n        return TwitterV2IncludesHelper.repliedToAuthor(this.result, tweet);\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    static repliedToAuthor(result, tweet) {\n        const inReplyUserId = tweet.in_reply_to_user_id;\n        return inReplyUserId ? this.users(result).find(u => u.id === inReplyUserId) : undefined;\n    }\n    /* Users */\n    get users() {\n        return TwitterV2IncludesHelper.users(this.result);\n    }\n    static users(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.users) !== null && _b !== void 0 ? _b : [];\n    }\n    userById(id) {\n        return TwitterV2IncludesHelper.userById(this.result, id);\n    }\n    static userById(result, id) {\n        return this.users(result).find(u => u.id === id);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    pinnedTweet(user) {\n        return TwitterV2IncludesHelper.pinnedTweet(this.result, user);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    static pinnedTweet(result, user) {\n        return user.pinned_tweet_id ? this.tweets(result).find(t => t.id === user.pinned_tweet_id) : undefined;\n    }\n    /* Medias */\n    get media() {\n        return TwitterV2IncludesHelper.media(this.result);\n    }\n    static media(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.media) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    medias(tweet) {\n        return TwitterV2IncludesHelper.medias(this.result, tweet);\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    static medias(result, tweet) {\n        var _a, _b;\n        const keys = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.media_keys) !== null && _b !== void 0 ? _b : [];\n        return this.media(result).filter(m => keys.includes(m.media_key));\n    }\n    /* Polls */\n    get polls() {\n        return TwitterV2IncludesHelper.polls(this.result);\n    }\n    static polls(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.polls) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    poll(tweet) {\n        return TwitterV2IncludesHelper.poll(this.result, tweet);\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    static poll(result, tweet) {\n        var _a, _b;\n        const pollIds = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.poll_ids) !== null && _b !== void 0 ? _b : [];\n        if (pollIds.length) {\n            const pollId = pollIds[0];\n            return this.polls(result).find(p => p.id === pollId);\n        }\n        return undefined;\n    }\n    /* Places */\n    get places() {\n        return TwitterV2IncludesHelper.places(this.result);\n    }\n    static places(result) {\n        var _a, _b;\n        return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.places) !== null && _b !== void 0 ? _b : [];\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    place(tweet) {\n        return TwitterV2IncludesHelper.place(this.result, tweet);\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    static place(result, tweet) {\n        var _a;\n        const placeId = (_a = tweet.geo) === null || _a === void 0 ? void 0 : _a.place_id;\n        return placeId ? this.places(result).find(p => p.id === placeId) : undefined;\n    }\n    /* Lists */\n    /** List owner of the given list (*`owner_id`*) */\n    listOwner(list) {\n        return TwitterV2IncludesHelper.listOwner(this.result, list);\n    }\n    /** List owner of the given list (*`owner_id`*) */\n    static listOwner(result, list) {\n        const creatorId = list.owner_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /* Spaces */\n    /** Creator of the given space (*`creator_id`*) */\n    spaceCreator(space) {\n        return TwitterV2IncludesHelper.spaceCreator(this.result, space);\n    }\n    /** Creator of the given space (*`creator_id`*) */\n    static spaceCreator(result, space) {\n        const creatorId = space.creator_id;\n        return creatorId ? this.users(result).find(p => p.id === creatorId) : undefined;\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    spaceHosts(space) {\n        return TwitterV2IncludesHelper.spaceHosts(this.result, space);\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n    static spaceHosts(result, space) {\n        var _a;\n        const hostIds = (_a = space.host_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => hostIds.includes(u.id));\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    spaceSpeakers(space) {\n        return TwitterV2IncludesHelper.spaceSpeakers(this.result, space);\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    static spaceSpeakers(result, space) {\n        var _a;\n        const speakerIds = (_a = space.speaker_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => speakerIds.includes(u.id));\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    spaceInvitedUsers(space) {\n        return TwitterV2IncludesHelper.spaceInvitedUsers(this.result, space);\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    static spaceInvitedUsers(result, space) {\n        var _a;\n        const invitedUserIds = (_a = space.invited_user_ids) !== null && _a !== void 0 ? _a : [];\n        return this.users(result).filter(u => invitedUserIds.includes(u.id));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/twitter-api-v2/dist/esm/v2/includes.v2.helper.js\n");

/***/ })

};
;